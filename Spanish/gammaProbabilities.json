{
    "title": "Probabilidades Gamma",
    "navigation": "Probabilidades Gamma",
    "varvals": "Ingrese los valores de las variables separados por una coma. Ejemplo: 3,0.5",
    "shape": "Forma",
    "scale": "Escala (inversa de la tasa)",
    "labelSig": "Nivel de significancia",
    "lowtail": "Cola inferior",
    "uptail": "Cola superior",
    "help": {
        "title": "Probabilidades Gamma",
        "r_help": "help(pgamma, package=stats)",
        "body": "\n            ​​\n            <b>Descripción</b>\n            <br/>\n            Densidad, función de distribución, función de cuantiles y generación aleatoria para la distribución Gamma con parámetros de forma y escala.\n            <br/>\n            <b>Uso</b>\n            <br/>\n            <code>\n                dgamma(x, shape, rate = 1, scale = 1/rate, log = FALSE)\n                <br/>\n                pgamma(q, shape, rate = 1, scale = 1/rate, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qgamma(p, shape, rate = 1, scale = 1/rate, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rgamma(n, shape, rate = 1, scale = 1/rate)\n                <br/>\n            </code>\n            <br/>\n            <b>Argumentos</b>\n            <br/>\n            <ul>\n                <li></li>\n                <li>x, q : vector de cuantiles.</li>\n                \n                \n                <li>p : vector de probabilidades.</li>\n                \n                \n                <li>n : número de observaciones. Si la longitud de n es mayor que 1, se toma la longitud como el número requerido.</li>\n                \n                \n                <li>rate : una forma alternativa de especificar la escala.</li>\n                \n                \n                <li>shape, scale : parámetros de forma y escala. Deben ser positivos, con escala estrictamente positiva.</li>\n                \n                \n                <li>log, log.p : lógico; si es TRUE, las probabilidades/densidades p se devuelven como log(p).</li>\n                \n                \n                <li>lower.tail : lógico; si es TRUE (por defecto), las probabilidades son P[X ≤ x], de lo contrario, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            Detalles\n            <br/>\n            Si se omite la escala, asume el valor predeterminado de 1.\n            <br/>\n            La distribución Gamma con parámetros de forma = a y escala = s tiene densidad\n            <br/>\n            <code>f(x)= 1/(s^a Gamma(a)) x^(a-1) e^-(x/s)</code>\n            <br/>\n            para x ≥ 0, a > 0 y s > 0. (Aquí Gamma(a) es la función implementada por gamma() de R y definida en su ayuda. Nótese que a = 0 corresponde a la distribución trivial con toda la masa en el punto 0.)\n            <br/>\n            La media y la varianza son <code>E(X) = a*s y Var(X) = a*s^2.</code>\n            <br/>\n            La función de riesgo acumulativo <code>H(t) = - log(1 - F(t))</code> es\n            <br/>\n            -pgamma(t, ..., lower = FALSE, log = TRUE)\n            <br/>\n            Nótese que para valores pequeños de forma (y escala moderada), una gran parte de la masa de la distribución Gamma está en valores de x tan cercanos a cero que se representarán como cero en la aritmética computacional. Por lo tanto, rgamma puede devolver valores que se representarán como cero. (Esto también ocurrirá para valores muy grandes de escala, ya que la generación real se realiza para escala = 1.)\n            <br/>\n            <br/><b>Valor</b>\n            <br/>\n            dgamma da la densidad, pgamma da la función de distribución, qgamma da la función de cuantiles y rgamma genera valores aleatorios.\n            <br/>\n            Los argumentos no válidos darán como resultado NaN, con una advertencia.\n            <br/>\n            La longitud del resultado está determinada por n para rgamma, y es el máximo de las longitudes de los argumentos numéricos para las otras funciones.\n            <br/>\n            Los argumentos numéricos distintos de n se reciclan a la longitud del resultado. Solo se utilizan los primeros elementos de los argumentos lógicos.\n            <br/>\n            <br/><b>Nota</b>\n            <br/>\n            La parametrización S (Becker et al, 1988) fue a través de forma y tasa: S no tenía parámetro de escala. Es un error proporcionar y escala y tasa.\n            <br/>\n            pgamma está estrechamente relacionado con la función gamma incompleta. Como se define por Abramowitz y Stegun 6.5.1 (y por ‘Numerical Recipes’) esta es\n            <br/>\n            <code>P(a,x) = 1/Gamma(a) integral_0^x t^(a-1) exp(-t) dt</code>\n            <br/>\n            P(a, x) es pgamma(x, a). Otros autores (por ejemplo, Karl Pearson en sus tablas de 1922) omiten el factor de normalización, definiendo la función gamma incompleta γ(a,x) como gamma(a,x) = integral_0^x t^(a-1) exp(-t) dt, es decir, pgamma(x, a) * gamma(a). Otros usan la función gamma incompleta ‘superior’,\n            <br/>\n            <code>Gamma(a,x) = integral_x^Inf t^(a-1) exp(-t) dt,</code>\n            <br/>\n            que puede calcularse mediante pgamma(x, a, lower = FALSE) * gamma(a).\n            <br/>\n            Nótese sin embargo que pgamma(x, a, ..) actualmente requiere a > 0, mientras que la función gamma incompleta también está definida para a negativo. En ese caso, se puede usar gamma_inc(a,x) (para Γ(a,x)) del paquete gsl.\n            <br/>\n            Ver también https://es.wikipedia.org/wiki/Función_gamma_incompleta, o http://dlmf.nist.gov/8.2#i.            \n"
    }
}
