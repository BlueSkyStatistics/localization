{
  "title": "Reglas de Visualización",
  "navigation": "Reglas de Visualización",
  "rulename": "Ingrese un objeto de reglas existente",
  "dosortingchk": "Ordenar las reglas",
  "sortopt": "Opciones de Ordenación",
  "sortby": "Ordenar por",
  "confchk": "confianza",
  "liftchk": "aumento",
  "suppchk": "soporte",
  "sortord": "Orden de clasificación",
  "increasing": "Ascendente",
  "decreasing": "Descendente",
  "noofrules": "Número de reglas a mostrar",
  "rulecount": "",
  "fromto": "Mostrar reglas",
  "from": "Desde",
  "to": "Hasta",
  "help": {
    "title": "Reglas de Visualización",
    "r_help": "help(inspect, package='arules')",
    "body": "\n            <b>\n\t\t\tPaquete : arulesViz\n\t\t\t</b>\n\t\t\t<br/><br/>\n            <b>\n            1.  inspect\n            </b>\n            <br/><br/>\n\t\t\t<b>\n\t\t\tDescripción\n\t\t\t</b>\n\t\t\t<br/><br/>\n            Proporciona la función genérica inspect y métodos S4 para mostrar asociaciones y transacciones más información adicional formateada para inspección en línea.\n            <br/><br/>\n\t\t\t<b>\n\t\t\tUso\n\t\t\t</b>\n\t\t\t<br/><br/>\n\t\t\t<code>\n            inspect(x, ...)\n            </code>\n            <br/><br/>\n            <b>Argumentos</b><br/>\n            <ul>\n            <li>\n            x: un conjunto de asociaciones o transacciones o un itemMatrix.\n            </li>\n            <li>\n            ...: se pueden usar argumentos adicionales para personalizar la salida: setStart, setEnd, itemSep y ruleSep. Los elementos se imprimen solo uno por línea en caso de que las líneas de salida sean muy largas. Esto también se puede controlar directamente usando linebreak.\n            </li>\n            </ul>\n            <br/><br/>\n\n            <b>\n            2. sort\n            </b>\n            <br/><br/>\n\n\t\t\t<b>\n\t\t\tDescripción\n\t\t\t</b>\n\t\t\t<br/><br/>\n            Proporciona el método sort para ordenar elementos en la clase de asociaciones (por ejemplo, conjuntos de elementos o reglas) de acuerdo con el valor de las medidas almacenadas en el slot de calidad de la asociación (por ejemplo, soporte).\n            <br/><br/>\n\t\t\t<b>\n\t\t\tUso\n\t\t\t</b>\n\t\t\t<br/><br/>\n\t\t\t<code>\n            ## Método S4 para la firma 'associations'\n            arules::sort(x, decreasing = TRUE, na.last = NA, \n            by = \"support\", order = FALSE, ...)\n            </code>\n            <br/><br/>\n\t\t\t<code>\n            ## Método S4 para la firma 'associations'\n            head(x, n = 6L, by = NULL, decreasing = TRUE, ...)\n            </code>\n            <br/><br/>\n\t\t\t<code>\n            ## Método S4 para la firma 'associations'\n            tail(x, n = 6L, by = NULL, decreasing = TRUE, ...)\n            </code>\n            <br/><br/>                        \n            <b>Argumentos</b><br/>\n            <ul>\n            <li>\n            x: un objeto a ser ordenado.\n            </li>\n            <li>\n            decreasing: un lógico. ¿Debería la ordenación ser ascendente o descendente? (el valor predeterminado es descendente)\n            </li>\n            <li>\n            na.last: na.last no es compatible con asociaciones. Los NAs siempre se colocan al final.\n            </li>\n            <li>\n            by: una cadena de caracteres que especifica la medida de calidad almacenada en x que se utilizará para ordenar x. Si se especifica un vector de cadenas de caracteres, las cadenas adicionales se utilizan para ordenar x en caso de empates.\n            </li>\n            <li>\n            order: ¿debería devolverse un vector de orden en lugar de las asociaciones ordenadas?\n            </li>\n            <li>\n            n: un solo entero que indica el número de asociaciones devueltas.\n            </li>\n            <li>\n            ... : Se ignoran argumentos adicionales.\n            </li>                                    \n            </ul>\n            <br/><br/>     \n            <b> \n            Detalles\n            </b> \n            <br/>\n            sort es relativamente lento para grandes conjuntos de asociaciones, ya que tiene que copiar y reorganizar una gran estructura de datos. Tenga en cuenta que la ordenación crea una segunda copia del conjunto de asociaciones, lo que puede ser lento y consumir mucha memoria para grandes conjuntos. Con order = TRUE, se devuelve un vector entero con el orden en lugar de las asociaciones reordenadas.\n            Si solo se necesitan las n principales asociaciones, entonces head usando by realiza esto más rápido que llamar a sort y luego head, ya que lo hace sin copiar y reorganizar todos los datos. tail funciona de la misma manera.\n            <br/><br/>  \n            <b> \n            Valor\n            </b> \n            <br/>\n            Un objeto de la misma clase que x.                  \n    "
  }
}