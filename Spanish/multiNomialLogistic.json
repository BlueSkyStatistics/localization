{
  "title": "Logit Multinomial",
  "navigation": "Logit Multinomial",
  "modelname": "Ingrese el nombre del modelo",
  "dependent": "Variable dependiente",
  "independent": "Variable(s) independiente(s)",
  "generateplotchk": "Graficar residuos vs ajustados, Q-Q normal, escala-localización y residuos vs apalancamiento",
  "destination2": "Especifique una variable con pesos",
  "help": {
    "title": "Logit Multinomial",
    "r_help": "help(multinom, package=nnet)",
    "body": "\n            <b>Descripción</b></br>\n            Ajusta modelos log-lineales multinomiales a través de redes neuronales.\n            <br/>\n            <b>Uso</b>\n            <br/>\n            <code> \n            multinom(formula, data, weights, subset, na.action,<br/>\n                     contrasts = NULL, Hess = FALSE, summ = 0, censored = FALSE,<br/>\n                     model = FALSE, ...)<br/>\n            </code> <br/>\n            <b>Argumentos</b><br/>\n            <ul>\n            <li>\n            formula: una expresión de fórmula como para modelos de regresión, de la forma respuesta ~ predictores. La respuesta debe ser un factor o una matriz con K columnas, que se interpretará como conteos para cada una de las K clases. Se ajusta un modelo log-lineal, con coeficientes cero para la primera clase. Se puede incluir un offset: debe ser una matriz numérica con K columnas si la respuesta es una matriz con K columnas o un factor con K >= 2 clases, o un vector numérico para un factor de respuesta con 2 niveles. Consulte la documentación de formula() para más detalles.\n            </li>\n            <li>\n            data: un marco de datos opcional en el que interpretar las variables que aparecen en la fórmula.\n            </li>\n            <li>\n            weights: pesos opcionales de caso en el ajuste.\n            </li>\n            <li>\n            subset: expresión que indica qué subconjunto de las filas de los datos debe usarse en el ajuste. Todas las observaciones se incluyen por defecto.\n            </li>\n            <li>\n            na.action: una función para filtrar datos faltantes.\n            </li>\n            <li>\n            contrasts: una lista de contrastes que se utilizarán para algunos o todos los factores que aparecen como variables en la fórmula del modelo.\n            </li>\n            <li>\n            Hess: lógico para si se debe devolver el Hessiano (la matriz de información observada/esperada).\n            </li>\n            <li>\n            summ: entero; si es distinto de cero, resume eliminando filas duplicadas y ajusta los pesos. Los métodos 1 y 2 difieren en velocidad (2 utiliza C); el método 3 también combina filas con el mismo X y diferentes Y, lo que cambia la línea base para la desviación.\n            </li>\n            <li>\n            censored: Si Y es una matriz con K columnas, interpreta las entradas como uno para clases posibles, cero para clases imposibles, en lugar de como conteos.\n            </li>\n            <li>\n            model: lógico. Si es verdadero, el marco del modelo se guarda como componente modelo del objeto devuelto.\n            </li>\n            <li>\n            ... argumentos adicionales para nnet\n            </li>\n            </ul>\n            <b>Detalles</b></br>\n            multinom llama a nnet. Las variables en el lado derecho de la fórmula deben estar aproximadamente escaladas a [0,1] o el ajuste será lento o puede no converger en absoluto.</br>\n            <b>Valor</b><br/>\n            Un objeto nnet con componentes adicionales:<br/>\n            <li>\n            deviance: la desviación residual, en comparación con el modelo saturado completo (que explica las observaciones individuales exactamente). También, menos dos veces la log-verosimilitud.\n            </li>\n            <li>\n            edf: el número (efectivo) de grados de libertad utilizados por el modelo\n            </li>\n            <li>\n            AIC: el AIC para este ajuste.\n            </li>\n            <li>\n            Hessian: (si Hess es verdadero).\n            </li>\n            <li>\n            model: (si model es verdadero).\n            </li>\n            <b>Ejemplos</b><br/>\n            <code> \n            options(contrasts = c(\"contr.treatment\", \"contr.poly\"))<br/>\n            library(MASS)<br/>\n            example(birthwt)<br/>\n            (bwt.mu <- multinom(low ~ ., bwt))<br/>\n            </code>\n            <b>Paquete</b></br>\n            nnet</br>\n            <b>Ayuda</b></br>\n            Para ayuda detallada, haga clic en el ícono de R en la esquina superior derecha de este diálogo o ejecute el siguiente comando help(multinom, package=nnet) creando un bloque de código R haciendo clic en + en la ventana de salida\n           "
  }
}