{
  "title": "简单的 Rasch 模型",
  "navigation": "简单的 Rasch 模型",
  "modelname": "输入模型名称",
  "destinationvars": "目标变量",
  "estimationlbl": "估计",
  "rad1": "使用 CML 估计",
  "chk1": "计算标准化误差",
  "chk2": "将参数归一化为总和 (0)",
  "rad2": "使用 MML 估计",
  "help": {
    "title": "简单的 Rasch 模型",
    "r_help": "help(RM, package='eRm')",
    "body": "\n            <b>描述</b>\n            <br/>\n            使用 CML 或 MML 估计创建简单的 Rasch 模型。\n            <br/><br/>\n            对于 CML 估计，我们调用 eRm::RM 来计算二元项目响应的 Rasch 模型的参数估计。\n            <br/><br/>\n            对于 MML 估计，我们调用 TAM::tam.mml 来生成一维模型的参数估计。\n            <br/><br/>\n            <b>CML 估计的用法</b>\n            <br/>\n            <code>\n            eRm::RM(X, se = TRUE, sum0 = TRUE, etaStart) \n            </code>\n            <br/><br/>\n            <b>参数</b>\n            <br/>          \n            <ul>\n            <li>\n            X: 输入的 0/1 数据矩阵或数据框；行表示个体，列表示项目。缺失值插入为 NA。\n            </li>\n            <li>\n            W: Rasch 模型的设计矩阵。如果省略，函数将自动计算 W。\n            </li>\n            <li>\n            se: 如果为 TRUE，则计算标准误差。\n            </li>\n            <li>\n            sum0: 如果为 TRUE，则通过指定适当的 W 将参数归一化为总和为 0。如果为 FALSE，则第一个参数限制为 0。\n            </li>\n            <li>\n            etaStart: 可以指定 eta 参数的起始值向量。如果缺失，则使用 0 向量。\n            </li>\n            </ul>\n            <br/><br/><br/>\n            <b>MML 估计的用法</b>\n            <br/>\n            <code>\n            tam.mml(resp,verbose=FALSE )\n            </code>\n            <br/><br/>\n            <b>参数</b>\n            <br/>             \n            <ul>\n            <li>\n            resp: 带有多项响应的项目响应数据框 k=0,...,K。缺失响应必须声明为 NA。\n            </li>\n            <li>\n            irtmodel: 对于固定项目斜率（在 tam.mml 中），选项包括 PCM（部分信用模型）、PCM2（带有 ConQuest 参数化的部分信用模型 'item+item*step'）和 RSM（评分量表模型；ConQuest 参数化 'item+step'）。 \n            <br/>\n            对于估计的项目斜率（仅在 tam.mml.2pl 中可用），选项为 2PL（所有项目类别的斜率均被估计；名义项目响应模型）、GPCM（每个项目在每个维度上仅获得一个斜率参数的广义部分信用模型）和 2PL.groups（项目子集获得相同的项目斜率估计）以及广义部分信用模型中的项目斜率设计矩阵 E（GPCM.design，见示例）。请注意，使用 faceted 设计时，无法使用函数 tam.mml.mfr 估计项目斜率。然而，使用预先指定的设计矩阵并对 tam.mml.2pl 应用一些限制是很容易的。\n            </li>\n            <li>\n            verbose: 逻辑值，指示在迭代过程中是否应打印输出。 \n            </li>\n            </ul>\n            <br/><br/>\n            <b>包</b>\n            <br/>\n            TAM, eRm\n            <br/><br/>            \n            <b>帮助</b>\n            <br/>\n            help(RM, package='eRm')\n            <br/>\n            help(tam.mml, package='TAM')\n"
  }
}