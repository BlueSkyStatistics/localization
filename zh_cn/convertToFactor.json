{
  "title": "转换为因子",
  "navigation": "到因子",
  "trg": "要转换为因子的变量",
  "help": {
    "title": "转换为因子",
    "r_help": "help(factor, package=base)",
    "body": "\n<b>描述</b></br>\n函数 factor 用于将向量编码为因子（术语“类别”和“枚举类型”也用于因子）。如果参数 ordered 为 TRUE，则因子级别被认为是有序的。为了与 S 兼容，还有一个函数 ordered。\nis.factor, is.ordered, as.factor 和 as.ordered 是这些类的成员资格和强制转换函数。\n<br/>\n<b>用法</b>\n<br/>\n<code>\nfactor(x = character(), levels, labels = levels,\n        exclude = NA, ordered = is.ordered(x), nmax = NA)\nordered(x, ...)\nis.factor(x)\nis.ordered(x)\nas.factor(x)\nas.ordered(x)\naddNA(x, ifany = FALSE)\n</code> <br/>\n<b>参数</b><br/>\n<ul>\n<li>\nx: 数据向量，通常取少量不同的值。\n</li>\n<li>\nlevels:\t一个可选的值向量（作为字符字符串），x 可能取的值。默认值是由 as.character(x) 取的唯一值集合，按 x 的递增顺序排序。请注意，这个集合可以指定为小于 sort(unique(x))。\n</li>\n<li>\nlabels:\t可选的字符向量，用于级别的标签（在去除 exclude 后与 levels 的顺序相同），或长度为 1 的字符字符串。\n</li>\n<li>\nexclude: 在形成级别集合时要排除的值向量。这应该与 x 的类型相同，并在必要时进行强制转换。\n</li>\n<li>\nordered: 逻辑标志，用于确定级别是否应被视为有序（按给定顺序）。\n</li>\n<li>\nnmax: 级别数量的上限；见“详细信息”。\n</li>\n<li>\n...(在 ordered(.) 中): 除 ordered 本身外的任何上述内容。\n</li>\n<li>\nifany: （仅在使用时添加 NA 级别，即如果 any(is.na(x)）。\n</li>\n</ul>\n<b>详细信息</b></br>\n向量 x 的类型没有限制；它只需具有 as.character 方法并且可排序（通过 sort.list）。<br/>\n有序因子与因子仅在其类上有所不同，但方法和模型拟合函数对这两类的处理方式截然不同。<br/>\n向量的编码如下进行。首先，从 levels 中删除 exclude 中的所有值。如果 x[i] 等于 levels[j]，则结果的第 i 个元素为 j。如果在 levels 中未找到 x[i] 的匹配（这将发生在排除的值中），则结果的第 i 个元素设置为 NA。<br/>\n通常，作为结果属性使用的“级别”是去除 exclude 后的减少级别集合，但这可以通过提供标签来更改。这应该是级别的新标签集合，或一个字符字符串，在这种情况下，级别是该字符字符串加上序列号。<br/>\nfactor(x, exclude = NULL) 应用于因子时，除非存在未使用的级别，否则不进行操作：在这种情况下，将返回具有减少级别集的因子。如果使用 exclude，它也应该是具有与 x 相同级别集的因子或要排除的级别的代码。<br/>\n因子的代码可能包含 NA。对于数值 x，设置 exclude = NULL 使 NA 成为额外级别（打印为 <NA>）；默认情况下，这是最后一个级别。<br/>\n如果 NA 是一个级别，设置代码为缺失（与缺失级别的代码相对）的方法是使用 is.na 在赋值的左侧（如 is.na(f)[i] <- TRUE；在 is.na 内部索引不起作用）。在这些情况下，缺失值当前打印为 <NA>，即与级别 NA 的条目相同。<br/>\nis.factor 是通用的：您可以编写方法来处理特定类的对象，见 InternalMethods。<br/>\n如果未提供 levels，则调用 unique。由于因子通常具有相对较少的级别，因此对于较大的向量 x，提供 nmax 作为唯一值的上限是有帮助的。<br/>\n<b>值</b><br/>\nfactor 返回一个类为 \"factor\" 的对象，其长度为 x 的整数代码集合，具有模式字符的 \"levels\" 属性和唯一（!anyDuplicated(.)）条目。如果参数 ordered 为 true（或使用 ordered()），则结果的类为 c(\"ordered\", \"factor\").<br/>\n将 factor 应用于有序或无序因子返回一个因子（相同类型），仅包含发生的级别：另请参见 [.factor 以更透明的方式实现此目的。\nis.factor 返回 TRUE 或 FALSE，具体取决于其参数是否为因子类型。相应地，is.ordered 在其参数为有序因子时返回 TRUE，否则返回 FALSE。<br/>\nas.factor 将其参数强制转换为因子。这是 factor 的简写形式。<br/>\nas.ordered(x) 如果 x 是有序的，则返回 x，否则返回 ordered(x)。<br/>\naddNA 通过将 NA 转换为额外级别来修改因子（例如，使 NA 值在表中计数）。<br/>\n<b>包</b></br>\nbase</br>\n<b>帮助</b></br>\nhelp(factor, package =fastDummies)\n"
  }
}