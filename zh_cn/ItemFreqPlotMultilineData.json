{
  "title": "项目频率图，多线格式",
  "navigation": "项目频率图，多线格式",
  "src": "源变量",
  "idcolname": "交易ID列名称",
  "itemcolname": "交易项目列名称",
  "plotOpts": "绘图选项",
  "topN": "要绘制的前N个项目",
  "horizcheck": "水平显示条形",
  "freqtype": "项目频率类型",
  "relative": "相对",
  "absolute": "绝对",
  "help": {
    "title": "项目频率图，多线格式",
    "r_help": "help(itemFrequencyPlot , package='arules')",
    "body": "\n            <b>\n            注意：根据数据的格式，您将选择“购物篮数据格式”或“多行交易格式”。为每种数据格式提供了一组单独的对话框。请参见下面的详细信息：\n            </b>\n            <br/><br/>\n            <b>\n            购物篮数据格式\n            </b>\n            <br/>\n            在购物篮数据格式中，单个购物篮中的所有项目都包含在数据集中的单个列中。多个项目由任何单个字符分隔，如逗号（,）、分号（;）或冒号（:）等。\n            <br/>\n            <b>\n            示例 1\n            </b>\n            <table style=\"border: 1px solid ; border-collapse: collapse;\">\n            <tr>\n              <th style=\"border: 1px solid ; border-collapse: collapse;\">项目</th>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item10,item20,item23,item24</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item13,item43</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item14,item32</td>\n            </tr>            \n          </table> \n\n          <br/>\n          <b>\n          示例 2\n          </b>\n          <table style=\"border: 1px solid ; border-collapse: collapse;\">\n          <tr>\n            <th style=\"border: 1px solid ; border-collapse: collapse;\">食品项目</th>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">苹果，芒果，啤酒</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">牛奶，鸡肉，奶酪</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">苹果，葡萄酒，奶酪</td>\n          </tr>            \n            </table>    \n            <br/>\n            <br>\n            <b>\n            多行交易数据格式\n            </b>\n            <br/>\n            在交易格式中，单个购物篮中的每个项目都在单独的行中表示。所有表示单个购物篮中项目的行都包含一个共同的交易ID。交易ID在单独的列中捕获        \n            <br/>\n            <b>\n            示例 1\n            </b>\n            <table style=\"border: 1px solid ; border-collapse: collapse;\">\n            <tr>\n            <th style=\"border: 1px solid ; border-collapse: collapse;\">ID</th>\n            <th style=\"border: 1px solid ; border-collapse: collapse;\">项目</th>\n            </tr>\n            <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">面包</td>\n            </tr>\n            <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">黄油</td>\n            </tr>\n            <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">肉类</td>\n            </tr>      \n            <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">鸡蛋</td>\n            </tr>\n            <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">奶酪</td>\n            </tr>\n            <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">牛奶</td>\n            </tr>                              \n            </table> \n            <br/>\n            所以购物篮1包含面包和黄油，购物篮2包含肉类、鸡蛋、奶酪和牛奶\n\n            <br/><br/>\n            <b>\n            输出\n            </b>\n            <br/>\n            结果以表格格式显示\n            <br/>\n            表中的列如下\n            <br/><br/>\n            <b>LHS:</b> 这些代表购物篮中的项目\n            <br/><br/>\n            <b>RHS:</b> 给定购物篮中的项目（LHS），RHS包含一个可能被购买的单一项目\n            <br/><br/>\n            <b>支持度:</b> 支持度是数据集中包含LHS项目的交易的比例\n            <br/><br/>\n            <b>置信度:</b> 置信度是条件概率，即购买LHS项目的客户也会购买RHS项目\n            <br/><br/>\n            <b>提升:</b> 如果有人购买LHS项目，购买RHS项目的概率会增加多少%。所以基本上是我们的置信度在购买LHS的情况下增加了多少。如果提升>1，LHS项目的存在增加了RHS项目在交易中发生的概率，如果<1，LHS项目的存在会降低RHS项目的概率，如果=1，则LHS和RHS是独立的\n            <br/><br/>\n            详细信息请参见 \n            <br/><br/>\n            http://infocenter.informationbuilders.com/wf80/index.jsp?topic=%2Fpubdocs%2FRStat16%2Fsource%2Ftopic49.htm\n            <br/><br/>\n            https://discourse.snowplowanalytics.com/t/market-basket-analysis-identifying-products-and-content-that-go-well-together/1132\n            <br/><br/>\n            http://www.listendata.com/2015/12/market-basket-analysis-with-r.html\n            <br/><br/>\n            http://www.salemmarafi.com/code/market-basket-analysis-with-r/\n            <br/><br/>\n\n            <b>包 : arules</b> \n            <br/><br/>\n            <b>描述</b> \n            <br/>         \n            提供通用函数 <code>itemFrequencyPlot</code> 和 S4 方法，用于创建项目频率条形图，以检查基于 itemMatrix（例如，交易或项目集和规则中的项目）的项目频率分布。   \n            <br/><br/>\n            <b>用法</b> \n            <br/>  \n            <code>\n            itemFrequencyPlot(x, ...)\n            ## S4 方法的签名 'itemMatrix'\n            itemFrequencyPlot(x, type = c(\"relative\", \"absolute\"), \n                weighted = FALSE, support = NULL, topN = NULL,\n                population = NULL, popCol = \"black\", popLwd = 1,\n                lift = FALSE, horiz = FALSE, \n                names = TRUE, cex.names =  graphics::par(\"cex.axis\"), \n                xlab = NULL, ylab = NULL, mai = NULL, ...)\n            </code>\n            <br/><br/>\n\n            <b>参数</b><br/>\n            <ul>\n            <li>\n            x : 要绘制的对象。\n            </li>\n            <li>\n            ... : 进一步的参数被传递（请参见可能的参数中的 barplot）。\n            </li>\n            <li>\n            type : 一个字符字符串，指示是否应显示相对或绝对的项目频率。\n            </li>\n            <li>\n            weighted : 支持是否应按存储在 transactionInfo 中的“weight”列的交易权重加权？\n            </li>\n            <li>\n            support : 一个数值。仅显示支持度至少为支持的项目。如果没有给出总体，支持度是从 x 计算的，否则从总体计算。支持度根据类型的设置被解释为相对或绝对。\n            </li>\n            <li>\n            topN : 一个整数值。仅绘制具有最高项目频率或提升的前N个项目（如果提升 = TRUE）。项目按支持度降序排列。\n            </li>\n            <li>\n            population : 与 x 相同类的对象；如果 x 是总体的一个子集，则可以在图中显示每个项目的总体平均频率作为一条线。\n            </li>\n            <li>\n            popCol : 总体的绘图颜色。\n            </li>  \n            <li>\n            popLwd : 总体的线宽。\n            </li>\n            <li>\n            lift : 一个逻辑值，指示是否绘制提升比率而不是频率。提升比率表示某个项目在 x 中的频率比在总体中更频繁多少倍。\n            </li>\n            <li>\n            horiz : 一个逻辑值。如果 horiz = FALSE（默认），则条形垂直绘制。如果为 TRUE，则条形水平绘制。\n            </li>\n            <li>\n            names : 一个逻辑值，指示是否应显示名称（条形标签）？\n            </li>  \n            <li>\n            cex.names : 一个数值，用于轴名称（条形标签）的扩展因子。\n            </li>\n            <li>\n            xlab : 一个字符字符串，作为 x 轴的标签（使用空字符串强制不显示标签）。\n            </li>\n            <li>\n            ylab : 一个字符字符串，作为 y 轴的标签（见 xlab）。\n            </li>\n            <li>\n            mai : 一个数值向量，给出图的边距大小（见‘? par’）。\n            </li>                                                                        \n            </ul>\n            <br/><br/>\n            <b>值</b><br/>            \n            一个数值向量，包含绘制条形的中点；用于添加到图形中。            \n    "
  }
}