{
  "title": "تحويل إلى عامل(عوامل)",
  "navigation": "إلى عامل",
  "trg": "المتغيرات التي سيتم تحويلها إلى عامل",
  "help": {
    "title": "تحويل إلى عامل(عوامل)",
    "r_help": "help(factor, package=base)",
    "body": "\n<b>الوصف</b></br>\nتستخدم دالة factor لترميز متجه كعامل (تستخدم المصطلحات 'فئة' و 'نوع مرقم' أيضًا للعوامل). إذا كانت الحجة ordered صحيحة، يُفترض أن مستويات العامل مرتبة. من أجل التوافق مع S، هناك أيضًا دالة ordered.\nهي دوال العضوية والتحويل لهذه الفئات: is.factor، is.ordered، as.factor و as.ordered.\n<br/>\n<b>الاستخدام</b>\n<br/>\n<code>\nfactor(x = character(), levels, labels = levels,\n        exclude = NA, ordered = is.ordered(x), nmax = NA)\nordered(x, ...)\nis.factor(x)\nis.ordered(x)\nas.factor(x)\nas.ordered(x)\naddNA(x, ifany = FALSE)\n</code> <br/>\n<b>المعطيات</b><br/>\n<ul>\n<li>\nx: متجه من البيانات، عادةً ما يأخذ عددًا صغيرًا من القيم المتميزة.\n</li>\n<li>\nlevels:\tمتجه اختياري للقيم (كسلاسل حرفية) التي قد تكون أخذتها x. القيمة الافتراضية هي مجموعة القيم الفريدة التي تأخذها as.character(x)، مرتبة في ترتيب تصاعدي لـ x. لاحظ أن هذه المجموعة يمكن تحديدها كأصغر من sort(unique(x)).\n</li>\n<li>\nlabels:\tإما متجه حرفي اختياري من التسميات للمستويات (بنفس ترتيب المستويات بعد إزالة تلك الموجودة في exclude)، أو سلسلة حرفية بطول 1.\n</li>\n<li>\nexclude: متجه من القيم التي سيتم استبعادها عند تشكيل مجموعة المستويات. يجب أن يكون هذا من نفس نوع x، وسيتم تحويله إذا لزم الأمر.\n</li>\n<li>\nordered: علامة منطقية لتحديد ما إذا كانت المستويات يجب أن تُعتبر مرتبة (بالترتيب المعطى).\n</li>\n<li>\nnmax: حد أعلى لعدد المستويات؛ انظر 'التفاصيل'.\n</li>\n<li>\n...(في ordered(.)): أي من المعطيات أعلاه، باستثناء ordered نفسها.\n</li>\n<li>\nifany: (فقط أضف مستوى NA إذا تم استخدامه، أي إذا كان أي(is.na(x)).\n</li>\n</ul>\n<b>التفاصيل</b></br>\nنوع المتجه x غير مقيد؛ يجب أن يكون له فقط طريقة as.character ويكون قابلًا للفرز (عن طريق sort.list).<br/>\nتختلف العوامل المرتبة عن العوامل فقط في فئتها، لكن الطرق ووظائف ملاءمة النموذج تعالج الفئتين بشكل مختلف تمامًا.<br/>\nيحدث ترميز المتجه كما يلي. أولاً، تتم إزالة جميع القيم في exclude من المستويات. إذا كانت x[i] تساوي levels[j]، فإن العنصر i من النتيجة هو j. إذا لم يتم العثور على تطابق لـ x[i] في levels (وهو ما سيحدث للقيم المستبعدة)، فإن العنصر i من النتيجة يتم تعيينه إلى NA.<br/>\nعادةً ما تكون 'المستويات' المستخدمة كخاصية للنتيجة هي مجموعة المستويات المخفضة بعد إزالة تلك الموجودة في exclude، ولكن يمكن تغيير ذلك عن طريق توفير تسميات. يجب أن تكون هذه إما مجموعة من التسميات الجديدة للمستويات، أو سلسلة حرفية، وفي هذه الحالة تكون المستويات هي تلك السلسلة الحرفية مع رقم تسلسلي مضاف.<br/>\nfactor(x, exclude = NULL) المطبق على عامل هو عملية لا تعمل إلا إذا كانت هناك مستويات غير مستخدمة: في هذه الحالة، يتم إرجاع عامل مع مجموعة المستويات المخفضة. إذا تم استخدام exclude، يجب أن يكون أيضًا عاملًا بنفس مجموعة المستويات مثل x أو مجموعة من الرموز للمستويات التي سيتم استبعادها.<br/>\nيمكن أن تحتوي رموز العامل على NA. بالنسبة لـ x عددي، قم بتعيين exclude = NULL لجعل NA مستوى إضافيًا (يظهر ك <NA>); بشكل افتراضي، يكون هذا هو المستوى الأخير.<br/>\nإذا كان NA مستوى، فإن الطريقة لتعيين رمز ليكون مفقودًا (على عكس رمز المستوى المفقود) هي استخدام is.na على الجانب الأيسر من تعيين (كما في is.na(f)[i] <- TRUE؛ الفهرسة داخل is.na لا تعمل). في تلك الظروف، يتم طباعة القيم المفقودة حاليًا ك <NA>، أي، متطابقة مع إدخالات المستوى NA.<br/>\nis.factor هي عامة: يمكنك كتابة طرق للتعامل مع فئات معينة من الكائنات، انظر InternalMethods.<br/>\nحيث لا يتم توفير المستويات، يتم استدعاء unique. نظرًا لأن العوامل عادةً ما تحتوي على عدد صغير جدًا من المستويات، بالنسبة للمتجهات الكبيرة x، من المفيد توفير nmax كحد أعلى لعدد القيم الفريدة.<br/>\n<b>القيمة</b><br/>\nfactor ترجع كائنًا من فئة \"عامل\" والذي يحتوي على مجموعة من الرموز الصحيحة بطول x مع خاصية \"المستويات\" من وضع حرفي ومدخلات فريدة (!anyDuplicated(.)). إذا كانت الحجة ordered صحيحة (أو تم استخدام ordered())، فإن النتيجة لها فئة c(\"ordered\", \"factor\").<br/>\nتطبيق factor على عامل مرتب أو غير مرتب يرجع عاملًا (من نفس النوع) مع المستويات التي تحدث فقط: انظر أيضًا [.factor لتحقيق ذلك بطريقة أكثر شفافية.\nis.factor ترجع TRUE أو FALSE اعتمادًا على ما إذا كانت حجتها من نوع العامل أم لا. وبالمثل، is.ordered ترجع TRUE عندما تكون حجتها عاملًا مرتبًا وFALSE بخلاف ذلك.<br/>\nas.factor تقوم بتحويل حجتها إلى عامل. إنها شكل مختصر من factor.<br/>\nas.ordered(x) ترجع x إذا كانت مرتبة، وordered(x) بخلاف ذلك.<br/>\naddNA تعدل عاملًا عن طريق تحويل NA إلى مستوى إضافي (حتى يتم احتساب قيم NA في الجداول، على سبيل المثال).<br/>\n<b>الحزمة</b></br>\nbase</br>\n<b>المساعدة</b></br>\nhelp(factor, package =fastDummies)\n"
  }
}