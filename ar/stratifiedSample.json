{
  "title": "التقسيم الطبقي",
  "navigation": "التقسيم الطبقي",
  "traindataset": "أدخل اسم مجموعة بيانات التدريب",
  "testdataset": "أدخل اسم مجموعة بيانات الاختبار",
  "split": "أدخل نسبة التقسيم",
  "seed": "تعيين البذور",
  "dependent": "المتغير الذي سيتم بناء عينات طبقية منه",
  "help": {
    "title": "التقسيم الطبقي",
    "r_help": "help(createDataPartition, package=\"caret\")",
    "body": "\n<b>الوصف</b></br>\nسلسلة من تقسيمات الاختبار / التدريب يتم إنشاؤها باستخدام createDataPartition بينما createResample ينشئ عينة واحدة أو أكثر من عينات bootstrap. createFolds تقسم البيانات إلى k مجموعات بينما createTimeSlices تنشئ تقسيمات التحقق المتبادل لبيانات السلاسل. groupKFold يقسم البيانات بناءً على عامل التجميع.\n<br/>\n<b>الاستخدام</b>\n<br/>\n<code> \ncreateDataPartition(y, times = 1, p = 0.5, list = TRUE, groups = min(5,length(y)))<br/>\ncreateFolds(y, k = 10, list = TRUE, returnTrain = FALSE)<br/>\ncreateTimeSlices(y, initialWindow, horizon = 1, fixedWindow = TRUE,skip = 0)<br/>\ngroupKFold(group, k = length(unique(group)))<br/>\n</code> <br/>\n<b>المعلمات</b><br/>\n<ul>\n<li>\ny: متجه النتائج. بالنسبة لـ createTimeSlices، يجب أن تكون هذه في ترتيب زمني.\n</li>\n<li>\ntimes: عدد التقسيمات التي سيتم إنشاؤها\n</li>\n<li>\np: النسبة المئوية للبيانات التي تذهب إلى التدريب\n</li>\n<li>\nlist: منطقي - هل يجب أن تكون النتائج في قائمة (TRUE) أو مصفوفة بعدد الصفوف يساوي floor(p * length(y)) وأعمدة times.\n</li>\n<li>\ngroups: لـ y العددي، عدد الفواصل في النسب المئوية (انظر أدناه)\n</li>\n<li>\nk: عدد صحيح لعدد الطيات.\n</li>\n<li>\nreturnTrain: منطقي. عندما يكون صحيحًا، تكون القيم المعادة هي مواقع العينات التي تتوافق مع البيانات المستخدمة أثناء التدريب. هذه المعلمة تعمل فقط بالتزامن مع list = TRUE\n</li>\n<li>\ninitialWindow: العدد الأولي من القيم المتتالية في كل عينة مجموعة تدريب\n</li>\n<li>\nhorizon: عدد القيم المتتالية في عينة مجموعة الاختبار\n</li>\n<li>\nfixedWindow: منطقي، إذا كان FALSE، تبدأ جميع عينات التدريب من 1\n</li>\n<li>\nskip: عدد صحيح، عدد (إذا كان هناك أي) من إعادة العينات التي يجب تخطيها لتقليل الكمية الإجمالية\n</li>\n<li>\ngroup: متجه من المجموعات التي يتطابق طولها مع عدد الصفوف في مجموعة البيانات العامة.\n</li>\n</ul>\n<b>التفاصيل</b></br>\nبالنسبة لعينات bootstrap، يتم استخدام أخذ عينات عشوائية بسيطة.\nبالنسبة لتقسيم البيانات الأخرى، يتم إجراء أخذ العينات العشوائية داخل مستويات y عندما يكون y عاملًا في محاولة لموازنة توزيعات الفئات داخل التقسيمات.</br>\nبالنسبة لـ y العددي، يتم تقسيم العينة إلى أقسام مجموعات بناءً على النسب المئوية ويتم إجراء أخذ العينات داخل هذه المجموعات الفرعية. بالنسبة لـ createDataPartition، يتم تعيين عدد النسب المئوية عبر معلمة groups. بالنسبة لـ createFolds و createMultiFolds، يتم تعيين عدد المجموعات ديناميكيًا بناءً على حجم العينة و k. بالنسبة لأحجام العينات الصغيرة، قد لا تقوم هاتان الوظيفتان بتقسيم طبقي، وفي أقصى حد، ستقسم البيانات إلى أرباع.</br>\nأيضًا، بالنسبة لـ createDataPartition، قد لا تظهر أحجام الفئات الصغيرة جدًا (<= 3) في كل من بيانات التدريب والاختبار.</br>\nبالنسبة للتحقق المتبادل متعدد الطيات k، يتم إنشاء طيات مستقلة تمامًا. ستشير أسماء كائنات القائمة إلى عضوية الطية باستخدام النمط \"Foldi.Repj\" مما يعني القسم i (من k) من مجموعة التحقق المتبادل j (من times). لاحظ أن هذه الوظيفة تستدعي createFolds مع list = TRUE و returnTrain = TRUE.</br>\nيناقش Hyndman و Athanasopoulos (2013) تقنيات أصل التنبؤ المتداول التي تحرك مجموعات التدريب والاختبار في الزمن. يمكن أن تنشئ createTimeSlices المؤشرات لهذا النوع من التقسيم.</br>\nبالنسبة للتحقق المتبادل k-fold الجماعي، يتم تقسيم البيانات بحيث لا تحتوي أي مجموعة على كل من مجموعات النمذجة والاحتفاظ. يمكن ترك مجموعة واحدة أو أكثر، اعتمادًا على قيمة k.</br>\n<b>القيمة</b><br/>\nقائمة أو مصفوفة من أعداد مواقع الصفوف التي تتوافق مع بيانات التدريب. بالنسبة لـ createTimeSlices، يتم تسمية العينات الفرعية بواسطة الفهرس النهائي لكل عينة فرعية تدريبية.</br>\n<b>الحزمة</b></br>\ncaret</br>\nklaR</br>\n<b>المساعدة</b></br>\nhelp(createDataPartition, package=\"caret\")\n        "
  }
}