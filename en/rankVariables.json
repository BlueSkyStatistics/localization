{
    "title": "Rank Variable(s)",
    "navigation": "Rank",
    "label1": "Enter a suffix or prefix for the new ranked variables",
    "suffix": "Suffix",
    "prefix": "Prefix",
    "txt1": "Enter a suffix/prefix",
    "dest": "Select the variable(s) to rank",
    "rankby": "Optionaly select variable(s) to rank values within",
    "label2": "Specify a ranking function",
    "rankfn": "Select a ranking function, click on help for additional information",
    "nooftiles": "For the ranking function ntile specify the number of groups to split into:",
    "help": {
        "title": "Rank Variable(s)",
        "r_help": "help(mean)",
        "body": "\n<b>Description</b></br>\nRANKS WILL BE STORED IN NEW VARIABLES  WITH THE PREFIX OR SUFFIX SPECIFIED</br>\nSix variations on ranking functions, mimicking the ranking functions described in SQL2003. They are currently implemented using the built in rank function, and are provided mainly as a convenience when converting between R and SQL. All ranking functions map smallest inputs to smallest outputs. Use desc() to reverse the direction.\n<br/>\n<b>Usage</b>\n<br/>\n<code> \nrow_number(x)\nntile(x, n)\nmin_rank(x)\ndense_rank(x)\npercent_rank(x)\ncume_dist(x)\n</code> <br/>\n<b>Arguments</b><br/>\n<ul>\n<li>\nx: A vector of values to rank. Missing values are left as is. If you want to treat them as the smallest or largest values, replace with Inf or -Inf before ranking.\n</li>\n<li>\nn: number of groups to split up into.\n</li>\n</ul>\n<b>Details</b><br/>\nrow_number(): equivalent to rank(ties.method = \"first\")<br/>\nmin_rank(): equivalent to rank(ties.method = \"min\")<br/>\ndense_rank(): like min_rank(), but with no gaps between ranks<br/>\npercent_rank(): a number between 0 and 1 computed by rescaling min_rank to [0, 1]<br/>\ncume_dist(): a cumulative distribution function. Proportion of all values less than or equal to the current rank.<br/>\nntile(): a rough rank, which breaks the input vector into n buckets.<br/>\n<b>Examples</b><br/>\n<code> \nx <- c(5, 1, 3, 2, 2, NA)<br/>\nrow_number(x)<br/>\nmin_rank(x)<br/>\ndense_rank(x)<br/>\n</code><br/>\n<b>Package</b></br>\ndplyr</br>\n<b>Help</b></br>\nhelp(ranking, package='dplyr')"
    }
}