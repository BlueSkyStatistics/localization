{
    "title": "Multinomial Logit",
    "navigation": "Multinomial Logit",
    "modelname": "Enter model name",
    "dependent": "Dependent variable",
    "independent": "Independent variable(s)",
    "generateplotchk": "Plot residuals vs fitted, normal Q-Q , scale-location and residuals vs leverage",
    "destination2": "Specify a variable with weights",
    "help": {
        "title": "Multi-nomial Logit",
        "r_help": "help(multinom, package=nnet)",
        "body": "\n            <b>Description</b></br>\n            Fits multinomial log-linear models via neural networks.\n            <br/>\n            <b>Usage</b>\n            <br/>\n            <code> \n            multinom(formula, data, weights, subset, na.action,<br/>\n                     contrasts = NULL, Hess = FALSE, summ = 0, censored = FALSE,<br/>\n                     model = FALSE, ...)<br/>\n            </code> <br/>\n            <b>Arguments</b><br/>\n            <ul>\n            <li>\n            formula: a formula expression as for regression models, of the form response ~ predictors. The response should be a factor or a matrix with K columns, which will be interpreted as counts for each of K classes. A log-linear model is fitted, with coefficients zero for the first class. An offset can be included: it should be a numeric matrix with K columns if the response is either a matrix with K columns or a factor with K >= 2 classes, or a numeric vector for a response factor with 2 levels. See the documentation of formula() for other details.\n            </li>\n            <li>\n            data: an optional data frame in which to interpret the variables occurring in formula.\n            </li>\n            <li>\n            weights: optional case weights in fitting.\n            </li>\n            <li>\n            subset: expression saying which subset of the rows of the data should be used in the fit. All observations are included by default.\n            </li>\n            <li>\n            na.action: a function to filter missing data.\n            </li>\n            <li>\n            contrasts: a list of contrasts to be used for some or all of the factors appearing as variables in the model formula.\n            </li>\n            <li>\n            Hess: logical for whether the Hessian (the observed/expected information matrix) should be returned.\n            </li>\n            <li>\n            summ: integer; if non-zero summarize by deleting duplicate rows and adjust weights. Methods 1 and 2 differ in speed (2 uses C); method 3 also combines rows with the same X and different Y, which changes the baseline for the deviance.\n            </li>\n            <li>\n            censored: If Y is a matrix with K columns, interpret the entries as one for possible classes, zero for impossible classes, rather than as counts.\n            </li>\n            <li>\n            model: logical. If true, the model frame is saved as component model of the returned object.\n            </li>\n            <li>\n            ... additional arguments for nnet\n            </li>\n            </ul>\n            <b>Details</b></br>\n            multinom calls nnet. The variables on the rhs of the formula should be roughly scaled to [0,1] or the fit will be slow or may not converge at all.</br>\n            <b>Value</b><br/>\n            A nnet object with additional components:<br/>\n            <li>\n            deviance: the residual deviance, compared to the full saturated model (that explains individual observations exactly). Also, minus twice log-likelihood.\n            </li>\n            <li>\n            edf: the (effective) number of degrees of freedom used by the model\n            </li>\n            <li>\n            AIC: the AIC for this fit.\n            </li>\n            <li>\n            Hessian: (if Hess is true).\n            </li>\n            <li>\n            model: (if model is true).\n            </li>\n            <b>Examples</b><br/>\n            <code> \n            options(contrasts = c(\"contr.treatment\", \"contr.poly\"))<br/>\n            library(MASS)<br/>\n            example(birthwt)<br/>\n            (bwt.mu <- multinom(low ~ ., bwt))<br/>\n            </code>\n            <b>Package</b></br>\n            nnet</br>\n            <b>Help</b></br>\n            For detailed help click on the R icon on the top right hand side of this dialog overlay or run the following command help(multinom, package=nnet) by creating a R code chunk by clicking + in the output window\n           "
    }
}