{
    "title": "Poisson Distribution Plot",
    "navigation": "Poisson Distribution Plot",
    "lambda": "Mean",
    "plotProb": "Plot probability mass function",
    "plotDistrib": "Plot distribution function",
    "help": {
        "title": "Poisson Distribution Plot",
        "r_help": "help(qpois, package=stats)",
        "body": "\n\n            <b>Description</b>\n            <br/>\n            Density, distribution function, quantile function and random generation for the Poisson distribution with parameter lambda.\n            <br/>\n            <b>Usage</b>\n            <br/>\n            <code>\n                dpois(x, lambda, log = FALSE)\n                <br/>\n                ppois(q, lambda, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qpois(p, lambda, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rpois(n, lambda)\n                <br/>\n            </code>\n            <br/>\n            <b>Arguments</b>\n            <br/>\n            <ul>\n                <li>x : vector of (non-negative integer) quantiles.</li>\n                \n                \n                <li>q : vector of quantiles.</li>\n                \n                \n                <li>p : vector of probabilities.</li>\n                \n                \n                <li>n : number of random values to return.</li>\n                \n                \n                <li>lambda : vector of (non-negative) means.</li>\n                \n                \n                <li>log, log.p : logical; if TRUE, probabilities p are given as log(p).</li>\n                \n                \n                <li>lower.tail : logical; if TRUE (default), probabilities are P[X ≤ x], otherwise, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Details</b>\n            <br/>\n            The Poisson distribution has density\n            <br/>\n            <code>p(x) = λ^x exp(-λ)/x!</code>\n            <br/>\n            for x = 0, 1, 2, … . The mean and variance are E(X) = Var(X) = λ.\n            <br/>\n            Note that λ = 0 is really a limit case (setting 0^0 = 1) resulting in a point mass at 0, see also the example.\n            <br/>\n            If an element of x is not integer, the result of dpois is zero, with a warning. p(x) is computed using Loader's algorithm, see the reference in dbinom.\n            <br/>\n            The quantile is right continuous: qpois(p, lambda) is the smallest integer x such that P(X ≤ x) ≥ p.\n            <br/>\n            Setting lower.tail = FALSE allows to get much more precise results when the default, lower.tail = TRUE would return 1, see the example below.\n            <br/>\n            <br/><b>Value</b>\n            <br/>\n            dpois gives the (log) density, ppois gives the (log) distribution function, qpois gives the quantile function, and rpois generates random deviates.\n            <br/>\n            Invalid lambda will result in return value NaN, with a warning.\n            <br/>\n            The length of the result is determined by n for rpois, and is the maximum of the lengths of the numerical arguments for the other functions.\n            <br/>\n            The numerical arguments other than n are recycled to the length of the result. Only the first elements of the logical arguments are used.            \n"
    }
}