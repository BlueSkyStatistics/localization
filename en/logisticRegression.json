{
    "title": "Logistic Regression",
    "navigation": "Logistic, basic",
    "modelname": "Enter model name",
    "dependent": "Dependent variable",
    "independent": "Independent variable(s)",
    "generateplotchk": "Plot residuals vs fitted, normal Q-Q , scale-location and residuals vs leverage",
    "destination2": "Specify a variable with weights",
    "help": {
        "title": "Logistic Regression",
        "r_help": "help(glm, package ='stats')",
        "body": "\n<b>Description</b></br>\nBuilds a binary logistic regression model. We use glm function passing the parameter family =binomial(link='logit'). We display a summary of the model, analysis of variance tables and McFadden R2.<br/>\nYou can score the model by selecting the model created on the top right hand corner of the main application screen and select the Score button. You can choose to display a confusion matrix and a ROC curve<br/>\nThe default model name is Logistic1 which you can change.<br/><br/>\nNOTE: When specifying a variable containing weights, be aware that since we use the option na.exlude to build the model, all NA values are automatically removed from the dependent and independent variables.<br/> \nThis can cause a mismatch as NA values are NOT automatically removed from the weighting variable. <br/>\nIn this situation you will see the error variable lengths differ (found for (weights))<br/>\nTo address this error go to Variables>Missing Values>Remove NAs and select the dependent, independent variables and the weighting variable to remove missing values from and rebuild the model.<br/>\n<br/>\n<b>Usage</b>\n<br/>\n<code> \nmodelname <- glm(dependentVariable ~ var1+var2+var3...,family =binomial(link='logit'),data=datasetName)\n#Summarizing the model<br/>\nsummary(modelname)<br/>\n#Displaying the Anova table<br/>\nanova(modelname)<br/>\n#Plots residuals vs. fitted, normal Q-Q, scale-location, residuals vs. leverage<br/>\nplot(modelname)<br/>\n#McFadden R2<br/>\npR2(Logistic1)<br/>\n#odds ratio and 95% confidence interval<br/>\nexp(cbind(OR=coef(Logistic1), confint(Logistic1,level=0.95)))<br/>\n#Plot the model<br/>\nplot(Logistic1)<br/>\n</code> <br/>\n<b>Arguments</b><br/>\n<ul>\n<li>\ndepVar: Name of the dependent variable.  If we have a dataset cars, with a variable class that we want to predict (dependent variable is class) enter class\n</li>\n<li>\nindepVars: Names of the independent variable, separated by +. If we have a dataset cars, with independent  variable horsepower, enginesize, specify horsepower+enginesize). Categorical variables are automatically dummy coded.​\n</li>\n<li>\ndata: Name of the dataframe. When you open data frames or datasets e.g. csv, Excel files, SAS files in BioStat Prime, they are named Dataset1, Dataset2, Dataset3 So enter data=Dataset1​\n</li>\n</ul>\n<b>Package</b></br>\nglm</br>\n<b>Help</b></br>\nhelp(glm, package ='stats')</br>\n<b>References</b></br>\nhttps://datascienceplus.com/perform-logistic-regression-in-r/</br>\nhttps://www.machinelearningplus.com/machine-learning/logistic-regression-tutorial-examples-r/</br>\n<b>Other</b></br>\nClick the R Help icon to get detailed R help​</br>\n\t\t\t"
    }
}