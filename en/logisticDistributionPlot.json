{
    "title": "Logistic Distribution Plot",
    "navigation": "Logistic Distribution Plot",
    "location": "Location",
    "scale": "Scale",
    "pdenfun": "Plot density function",
    "pdstfun": "Plot distribution function",
    "lblregions": "Optionally specify regions under the density function by",
    "xvals": "x-values",
    "quantiles": "quantiles",
    "lblRegFill": "Regions to fill (specify one or two, or leave blank)",
    "lblreg1": "Region 1 :",
    "lblreg2": "Region 2 :",
    "lblregfrm": "From",
    "lblregto": "To",
    "lblregcol": "Color",
    "lblLegPos": "Position of legend",
    "toprt": "Top right",
    "toplt": "Top left",
    "topmid": "Top center",
    "help": {
        "title": "Logistic Distribution Plot",
        "r_help": "help(qlogis, package=stats)",
        "body": "\n            ​​\n            <b>Description</b>\n            <br/>\n            Density, distribution function, quantile function and random generation for the logistic distribution with parameters location and scale.\n            <br/>\n            <b>Usage</b>\n            <br/>\n            <code>\n                dlogis(x, location = 0, scale = 1, log = FALSE)\n                <br/>\n                plogis(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qlogis(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rlogis(n, location = 0, scale = 1)\n                <br/>\n            </code>\n            <br/>\n            <b>Arguments</b>\n            <br/>\n            <ul>\n                <li>x, q : vector of quantiles.</li>\n                \n                \n                <li>p : vector of probabilities.</li>\n                \n                \n                <li>n : number of observations. If length(n) > 1, the length is taken to be the number required.</li>\n                \n                \n                <li>location, scale : location and scale parameters.</li>\n                \n                \n                <li>log, log.p : logical; if TRUE, probabilities p are given as log(p).</li>\n                \n                \n                <li>lower.tail : logical; if TRUE (default), probabilities are P[X ≤ x], otherwise, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Details</b>\n            <br/>\n            If location or scale are omitted, they assume the default values of 0 and 1 respectively.\n            The Logistic distribution with location = m and scale = s has distribution function\n            <br/>\n            <code>F(x) = 1 / (1 + exp(-(x-m)/s))</code>\n            <br/>\n            and density\n            <br/>\n            <code>f(x) = 1/s exp((x-m)/s) (1 + exp((x-m)/s))^-2.</code>\n            <br/>\n            It is a long-tailed distribution with mean m and variance π^2 /3 s^2.\n            <br/>\n            <br/><b>Value</b>\n            <br/>\n            dlogis gives the density, plogis gives the distribution function, qlogis gives the quantile function, and rlogis generates random deviates.\n            <br/>\n            The length of the result is determined by n for rlogis, and is the maximum of the lengths of the numerical arguments for the other functions.\n            <br/>\n            The numerical arguments other than n are recycled to the length of the result. Only the first elements of the logical arguments are used.\n            <br/>\n            <br/><b>Note</b>\n            <br/>\n            qlogis(p) is the same as the well known ‘logit’ function, logit(p) = log(p/(1-p)), and plogis(x) has consequently been called the ‘inverse logit’.\n            <br/>\n            The distribution function is a rescaled hyperbolic tangent, plogis(x) == (1+ tanh(x/2))/2, and it is called a sigmoid function in contexts such as neural networks.\n            \n"
    }
}