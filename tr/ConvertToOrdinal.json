{
  "title": "Sıralı Faktör(ler)/Ordinal'a Dönüştür",
  "navigation": "Sıralı Faktör/Ordinal'a",
  "trg": "Sıralı faktör/ordinal'a dönüştürülecek değişkenler",
  "help": {
    "title": "Sıralı Faktör(ler)/Ordinal'a Dönüştür",
    "r_help": "help(factor, package=base)",
    "body": "\n<b>Açıklama</b></br>\nfactor fonksiyonu, sıralı bir faktör/ordinal değişkeni oluşturmak için kullanılır. Faktör seviyelerinin sıralı olduğu varsayılmaktadır. \n<br/>\n<b>Kullanım</b>\n<br/>\n<code>\nfactor(x = character(),  ordered = TRUE)\n</code> <br/>\n<b>Argümanlar</b><br/>\n<ul>\n<li>\nx: genellikle az sayıda farklı değeri alabilen bir veri vektörü.\n</li>\n<li>\nlevels:\tx'in alabileceği değerlerin (karakter dizeleri olarak) isteğe bağlı bir vektörü. Varsayılan, as.character(x) tarafından alınan benzersiz değerler kümesidir ve x'in artan sırasına göre sıralanır. Bu küme, sort(unique(x))'ten daha küçük olarak belirtilebilir.\n</li>\n<li>\nlabels:\tSeviyeler için isteğe bağlı bir etiket karakter vektörü (exclude'dan çıkarıldıktan sonra seviyelerle aynı sırada) veya uzunluğu 1 olan bir karakter dizesi.\n</li>\n<li>\nexclude: Seviye kümesini oluştururken hariç tutulacak değerlerin bir vektörü. Bu, x ile aynı türde olmalıdır ve gerekirse zorlanacaktır.\n</li>\n<li>\nordered: seviyelerin sıralı olarak kabul edilip edilmeyeceğini belirlemek için mantıksal bir bayrak.\n</li>\n<li>\nnmax: seviyelerin sayısı için bir üst sınır; bkz. 'Ayrıntılar'.\n</li>\n<li>\n...(ordered(.): yukarıdakilerin herhangi biri, ordered hariç.\n</li>\n<li>\nifany: (sadece kullanılıyorsa bir NA seviyesi ekleyin, yani any(is.na(x)).\n</li>\n</ul>\n<b>Ayrıntılar</b></br>\nVektör x'in türü kısıtlı değildir; yalnızca bir as.character yöntemi olmalı ve sıralanabilir (sort.list ile).<br/>\nSıralı faktörler, yalnızca sınıflarında farklılık gösterir, ancak yöntemler ve model uyum fonksiyonları iki sınıfı oldukça farklı şekilde ele alır.<br/>\nVektörün kodlaması şu şekilde gerçekleşir. Öncelikle exclude'daki tüm değerler seviyelerden çıkarılır. Eğer x[i] levels[j]'ye eşitse, o zaman sonuçtaki i'inci eleman j olur. Eğer x[i] için levels'da eşleşme bulunamazsa (bu, hariç tutulan değerler için gerçekleşecektir) o zaman sonuçtaki i'inci eleman NA olarak ayarlanır.<br/>\nNormalde, sonuçta bir öznitelik olarak kullanılan 'levels', exclude'dan çıkarıldıktan sonra azaltılmış seviye kümesidir, ancak bu etiketler sağlanarak değiştirilebilir. Bu, ya seviyeler için yeni etiketler kümesi olmalı ya da bir karakter dizesi olmalıdır; bu durumda seviyeler, o karakter dizesi ile bir sıra numarası eklenmiş olur.<br/>\nfactor(x, exclude = NULL) bir faktöre uygulandığında, kullanılmayan seviyeler yoksa bir no-operation'dır: bu durumda, azaltılmış seviye kümesine sahip bir faktör döndürülür. Eğer exclude kullanılıyorsa, x ile aynı seviye kümesine sahip bir faktör olmalı veya hariç tutulacak seviyeler için bir kod kümesi olmalıdır.<br/>\nBir faktörün kodları NA içerebilir. Sayısal bir x için, NA'yı ekstra bir seviye yapmak için exclude = NULL ayarlayın (bu <NA> olarak yazdırılır); varsayılan olarak, bu son seviyedir.<br/>\nEğer NA bir seviye ise, bir kodun kaybolmuş olarak ayarlanma yolu (kaybolmuş seviyenin kodu yerine) bir atama işleminin sol tarafında is.na kullanmaktır (is.na(f)[i] <- TRUE; is.na içinde indeksleme çalışmaz). Bu koşullar altında kaybolmuş değerler şu anda <NA> olarak yazdırılır, yani NA seviyesinin girişleriyle özdeştir.<br/>\nis.factor genel bir işlevdir: belirli nesne sınıflarını ele almak için yöntemler yazabilirsiniz, bkz. InternalMethods.<br/>\nLevels sağlanmadığında, unique çağrılır. Faktörlerin genellikle oldukça az sayıda seviyesi olduğundan, büyük vektörler x için nmax'ı benzersiz değerlerin üst sınırı olarak sağlamak faydalıdır.<br/>\n<b>Değer</b><br/>\nfactor, x'in uzunluğunda bir dizi tam sayı kodu ve karakter modunda bir \"levels\" özniteliğine sahip bir \"factor\" sınıfı nesnesi döndürür. Eğer ordered argümanı true ise (veya ordered() kullanılıyorsa) sonuç c(\"ordered\", \"factor\") sınıfına sahip olur.<br/>\nfactor'ı sıralı veya sırasız bir faktöre uygulamak, yalnızca mevcut seviyelerle aynı türde bir faktör döndürür: ayrıca bunu başarmanın daha şeffaf bir yolu için [.factor'a da bakın.\nis.factor, argümanının faktör türünde olup olmadığını belirlemek için TRUE veya FALSE döndürür. Karşılık gelen olarak, is.ordered, argümanının sıralı bir faktör olup olmadığını belirlemek için TRUE döndürür ve aksi takdirde FALSE döndürür.<br/>\nas.factor, argümanını bir faktöre zorlar. Bu, factor'ın kısaltılmış bir biçimidir.<br/>\nas.ordered(x), eğer bu sıralıysa x'i döndürür, aksi takdirde ordered(x) döndürür.<br/>\naddNA, NA'yı ekstra bir seviye haline getirerek bir faktörü değiştirir (böylece NA değerleri tablolar içinde sayılır, örneğin).<br/>\n<b>Paket</b></br>\nbase</br>\n<b>Yardım</b></br>\nhelp(factor, package =base)\n"
  }
}