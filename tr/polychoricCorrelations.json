{
  "title": "Polikorik Korelasyon",
  "navigation": "Polikorik",
  "Target": "Bir veya daha fazla x değişkeni seçin",
  "textbox1": "Güven aralığı",
  "textbox2": "Null hipotez (mu)",
  "Target2": "Tek bir sıralı faktör değişkeni y seçin",
  "label1": "Tahmin türü",
  "test1": "İki aşamalı yaklaşım",
  "test2": "Maksimum-likelihood tahmincisi",
  "label2": "Standart hata",
  "Missvals": "Standart hatayı göster",
  "conflevel": "Maksimum mutlak korelasyon (sayısal kararlılığı sağlamak için).",
  "Seed": "İsteğe bağlı başlangıç değeri(leri)",
  "header": "Korelasyon, her x değişkeni ile y değişkeni arasında tahmin edilmektedir",
  "showEffectSizes": "Tahmin edilen eşik değerlerini döndür",
  "advanced_lbl": "Gelişmiş",
  "help": {
    "title": "Polikorik Korelasyon",
    "r_help": "help(polychor, package ='polycor')",
    "body": "\n<b>Açıklama</b></br>\nİki ordinal değişken arasındaki polikorik korelasyonu (ve standart hatasını) hesaplar, ordinal değişkenlerin iki değişkenli normal dağılıma sahip sürekli gizli değişkenleri kesen varsayımı altında. Ya maksimum-likelihood tahmincisi ya da (muhtemelen çok daha) hızlı bir \"iki aşamalı\" yaklaşım mevcuttur. ML tahmincisi için, eşiklerin tahminleri ve tahminlerin kovaryans matrisleri de mevcuttur.\n<br/>\n<b>Kullanım</b>\n<br/>\n<code> \npolychor(x, y, ML = FALSE, control = list(), \n  std.err = FALSE, maxcor=.9999, start, thresholds=FALSE)\n</code> <br/>\n<b>Argümanlar</b><br/>\n<ul>\n<li>\nx: sıralı kategorik değişken; değişken sayısal, mantıksal, bir faktör, sıralı bir faktör veya bir karakter değişkeni olabilir, ancak bir faktörse, seviyeleri uygun sırada olmalıdır ve bir karakter değişkeninin değerleri alfabetik olarak sıralanmalıdır.\n</li>\n<li>\ny: sıralı bir faktör değişkeni\n</li>\n<li>\nML: TRUE ise, maksimum-likelihood tahminini hesapla; FALSE ise, varsayılan, daha hızlı bir \"iki aşamalı\" yaklaşımı hesapla.\n</li>\n<li>\nstd.err: TRUE ise, korelasyonun tahmin edilen varyansını (iki aşamalı tahminci için) veya korelasyon ve eşiklerin tahmin edilen kovaryans matrisini (ML tahmincisi için) döndür; varsayılan FALSE'tır. \n</li>\n<li>\nmaxcor: maksimum mutlak korelasyon (sayısal kararlılığı sağlamak için).\n</li>\n<li>\nstart: isteğe bağlı başlangıç değeri(leri): tek bir sayı ise, korelasyon için başlangıç değeri.\n</li>\n<li>\nthresholds: TRUE ise (varsayılan FALSE), standart hatalar hesaplanmasa bile tahmin edilen eşikleri tahmin edilen korelasyonla birlikte döndür.\n</li>\n</ul>\n<b>Değerler</b></br>\nDeğer: Eğer std.err veya thresholds TRUE ise, \"polycor\" sınıfından bir nesne döndürür ve aşağıdaki bileşenlere sahiptir:</br>\ntip: \"polikorik\" olarak ayarlanır.</br>\nrho: polikorik korelasyon.</br>\nrow.cuts: satır değişkeni (x) için tahmin edilen eşikler, ML tahmini için.</br>\ncol.cuts: sütun değişkeni (y) için tahmin edilen eşikler, ML tahmini için.</br>\nvar: korelasyonun tahmin edilen varyansı veya, ML tahmini için, korelasyon ve eşiklerin tahmin edilen kovaryans matrisidir.</br>\nn: korelasyonun dayandığı gözlem sayısı.</br>\nchisq: iki değişkenli normalite için ki-kare testi.</br>\ndf: iki değişkenli normalite testi için serbestlik dereceleri.</br>\nML: ML tahmini için TRUE, iki aşamalı tahmin için FALSE\n<b>Ayrıntılar</b></br>\nML tahmincisi, iki değişkenin eşikleri (τ^x[i], i = 1,…, r - 1; τ^y[j], j = 1,…, c - 1) ve popülasyon korelasyonu (ρ) ile ilgili olarak iki değişkenli normal olasılığı maksimize ederek hesaplanır. Burada, r ve c sırasıyla x ve y'nin seviye sayısıdır. Olasılık, optim fonksiyonu kullanılarak sayısal olarak maksimize edilir ve tahmin edilen parametrelerin kovaryans matrisinin hesaplanması, optim tarafından hesaplanan sayısal Hessian'a dayanır.\nİki aşamalı tahminci, önce her değişkenin marjinal dağılımından eşikleri (τ^x[i], i = 1,…, r - 1 ve τ^y[j], i = j,…, c - 1) ayrı ayrı tahmin ederek hesaplanır. Daha sonra, ρ için bir boyutlu olasılık sayısal olarak maksimize edilir, standart hatalar isteniyorsa optim kullanılarak, istenmiyorsa optimise kullanılarak. Hesaplanan standart hata, eşikleri sabit olarak ele alır.\n<br/>\n<b>Örnek</b></br>\n<code> \nif(require(mvtnorm)){\n    set.seed(12345)\n    data <- rmvnorm(1000, c(0, 0), matrix(c(1, .5, .5, 1), 2, 2))\n    x <- data[,1]\n    y <- data[,2]\n    cor(x, y)  # örnek korelasyonu\n    }\n\nif(require(mvtnorm)){\n    x <- cut(x, c(-Inf, .75, Inf))\n    y <- cut(y, c(-Inf, -1, .5, 1.5, Inf))\n    polychor(x, y)  # 2-aşamalı tahmin\n    }\n\nif(require(mvtnorm)){\n    polychor(x, y, ML=TRUE, std.err=TRUE)  # ML tahmini\n    }\n</code> <br/>\n<b>Paket</b></br>\npolycor</br>\n<b>Yardım</b></br>\nDetaylı yardım için, bu diyalog üstündeki sağ üst köşedeki R simgesine tıklayın veya aşağıdaki komutu çalıştırarak help(polycor, package ='polychor') komutunu çalıştırarak bir R kodu parçası oluşturun."
  }
}