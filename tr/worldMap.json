{
  "title": "Dünya Haritası",
  "navigation": "Dünya Haritası",
  "region": "Ülke isimleri ile değişken:",
  "value": "Haritalamak için değerleri içeren değişken:",
  "colors": "Renk sayısını girin",
  "zoomByStates": "Büyütmek için ülkeleri girin, örneğin: amerika birleşik devletleri, kanada, meksika",
  "specify_a_title": "Bir başlık girin",
  "legend": "Açıklama:",
  "help": {
    "title": "Dünya Haritası",
    "r_help": "help(country_choropleth, package='choroplethr')",
    "body": "\n            <b>Açıklama</b></br>\n            Bir dünya haritası çizer ve isteğe bağlı olarak 1 veya daha fazla ülkeye yakınlaşmanıza izin verir\n             <br/>\n             <b>Kullanım</b>\n             <br/>\n             <code> \n            country_choropleth(BSkyDfForMap, title=\"\", legend=\"\", num_colors =1,zoom=NULL)\n             </code> <br/>\n             <b>Argümanlar</b><br/>\n             <ul>\n             <li>\n             BSkyDfForMap: \"region\" adında bir sütun ve \"value\" adında bir sütun içeren bir data.frame. \"region\" sütunundaki öğeler, ?country.map'deki \"region\" sütununda nasıl adlandırıldıklarıyla tam olarak eşleşmelidir. Aşağıdaki kodu diğer bölümde çalıştırarak country.map'deki değişkenleri görebilirsiniz\n             </li>\n             <li>\n             Başlık: Harita için isteğe bağlı bir başlık.\n             </li>\n             <li>\n             Açıklama: Açıklama için isteğe bağlı bir isim.\n             </li>\n             <li>\n             num_colors: Haritadaki renk sayısı. 1 değeri sürekli bir ölçek kullanır. [2, 9] aralığında bir değer, o kadar rengi kullanır.\n             </li>\n             <li>\n             zoom: Yakınlaşmak için isteğe bağlı bir ülke vektörü. Bu vektörün öğeleri, ?country.regions'daki \"region\" sütununda göründüğü gibi ülke isimleriyle tam olarak eşleşmelidir.\n             </li>\n             </ul>\n             <b>Paket</b></br>\n             choroplethr;choroplethrMaps;</br>\n             <b>Yardım</b></br>\n             help(country_choropleth, package='choroplethr')</br>\n             <b>Diğer</b></br>\n             <code> \n             # Aşağıdaki kodu çalıştırarak state.map veri kümesine erişin<br/>\n             library(choroplethr)<br/>\n             library(choroplethrMaps)<br/>\n             data(country.map)<br/>\n             country.map<br/>\n             </code> <br/>\n    "
  }
}