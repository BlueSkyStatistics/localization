{
  "correlationType": "Korelasyon türü",
  "Polychoric": "Polikorik",
  "Polyserial": "Poliserial",
  "title": "Polikorik/Poliserial korelasyonu",
  "bins": "Poliserial korelasyonlar için - Bivariate normalite testi için x'i parçalamak için bin sayısı",
  "navigation": "Polikorik, poliserial",
  "Target": "Bir veya daha fazla x değişkeni seçin",
  "textbox1": "Güven aralığı",
  "textbox2": "Null hipotezi (mu)",
  "Target2": "Tek bir sıralı faktör değişkeni y seçin",
  "label1": "Tahmin türü",
  "test1": "İki aşamalı yaklaşım",
  "test2": "Maksimum-likelihood tahmincisi",
  "label2": "Standart hata",
  "Missvals": "Standart hatayı göster",
  "conflevel": "Maksimum mutlak korelasyon (sayısal kararlılığı sağlamak için).",
  "Seed": "Opsiyonel başlangıç değeri(leri)",
  "header": "Korelasyon, her x değişkeni ile y değişkeni arasında tahmin edilmektedir",
  "showEffectSizes": "Tahmin edilen eşik değerlerini döndür",
  "advanced_lbl": "Gelişmiş",
  "help": {
    "title": "Polikorik/Poliserial korelasyonu",
    "r_help": "help(polychor, package ='polycor')",
    "body": "\n<b>Açıklama</b></br>\nPolikorik veya poliserial korelasyonu hesaplar. Korelasyon, her x değişkeni ile y değişkeni arasında tahmin edilmektedir\n<br/>\n<br/>\n<b>Açıklama-Polikorik</b></br>\nİki sıralı değişken arasında polikorik korelasyonu (ve standart hatasını) hesaplar, sıralı değişkenlerin sürekli gizli değişkenleri bivariate normal olarak parçaladığı varsayımı altında. Ya maksimum-likelihood tahmincisi ya da (muhtemelen çok) daha hızlı bir \"iki aşamalı\" yaklaşım mevcuttur. ML tahmincisi için, eşiklerin tahminleri ve tahminlerin kovaryans matrisleri de mevcuttur.\n<br/>\n<b>Kullanım</b>\n<br/>\n<code> \npolychor(x, y, ML = FALSE, control = list(), \n  std.err = FALSE, maxcor=.9999, start, thresholds=FALSE)\n</code> <br/>\n<b>Argümanlar</b><br/>\n<ul>\n<li>\nx: sıralı kategorik değişken; değişken sayısal, mantıksal, bir faktör, sıralı bir faktör veya bir karakter değişkeni olabilir, ancak bir faktörse, seviyeleri doğru sırada olmalıdır ve bir karakter değişkeninin değerleri alfabetik olarak sıralanmalıdır.\n</li>\n<li>\ny: sıralı bir faktör değişkeni\n</li>\n<li>\nML: TRUE ise, maksimum-likelihood tahminini hesapla; FALSE ise, varsayılan, daha hızlı bir \"iki aşamalı\" yaklaşım hesapla.\n</li>\n<li>\nstd.err: TRUE ise, korelasyonun tahmin edilen varyansını (iki aşamalı tahminci için) veya korelasyon ve eşiklerin tahmin edilen kovaryans matrisini (ML tahmincisi için) döndür; varsayılan FALSE'tır. \n</li>\n<li>\nmaxcor: maksimum mutlak korelasyon (sayısal kararlılığı sağlamak için).\n</li>\n<li>\nstart: opsiyonel başlangıç değeri(leri): tek bir sayı ise, korelasyon için başlangıç değeri.\n</li>\n<li>\nthresholds: TRUE ise (varsayılan FALSE'tır) standart hatalar hesaplanmasa bile tahmin edilen eşikleri tahmin edilen korelasyonla birlikte döndür.\n</li>\n</ul>\n<b>Değerler</b></br>\nDeğer: Eğer std.err veya thresholds TRUE ise, \"polycor\" sınıfından bir nesne döndürür ve aşağıdaki bileşenlere sahiptir:</br>\ntip: \"polikorik\" olarak ayarlanır.</br>\nrho: polikorik korelasyon.</br>\nrow.cuts: ML tahmini için satır değişkeni (x) için tahmin edilen eşikler.</br>\ncol.cuts: ML tahmini için sütun değişkeni (y) için tahmin edilen eşikler.</br>\nvar: korelasyonun tahmin edilen varyansı veya ML tahmini için, korelasyon ve eşiklerin tahmin edilen kovaryans matrisidir.</br>\nn: korelasyonun dayandığı gözlem sayısı.</br>\nchisq: bivariate normalite için ki-kare testi.</br>\ndf: bivariate normalite testi için serbestlik dereceleri.</br>\nML: ML tahmini için TRUE, iki aşamalı tahmin için FALSE\n<b>Ayrıntılar</b></br>\nML tahmincisi, iki değişken için eşikler (τ^x[i], i = 1,…, r - 1; τ^y[j], j = 1,…, c - 1) ve popülasyon korelasyonu (ρ) ile ilgili olarak bivariate-normal olasılığını maksimize ederek hesaplanır. Burada, r ve c sırasıyla x ve y'nin seviye sayısıdır. Olasılık, optim fonksiyonu kullanılarak sayısal olarak maksimize edilir ve tahmin edilen parametrelerin kovaryans matrisinin hesaplanması optim tarafından yapılan sayısal Hessian'a dayanmaktadır.</br>\nİki aşamalı tahminci, her değişkenin marjinal dağılımından eşikleri (τ^x[i], i = 1,…, r - 1 ve τ^y[j], i = j,…, c - 1) ayrı ayrı tahmin ederek hesaplanır. Daha sonra, standart hatalar isteniyorsa optim kullanılarak, istenmiyorsa optimize kullanılarak ρ için bir boyutlu olasılık sayısal olarak maksimize edilir. Hesaplanan standart hata eşikleri sabit olarak ele alır.\n<br/>\n<b>Örnek</b></br>\n<code> \nif(require(mvtnorm)){\n    set.seed(12345)\n    data <- rmvnorm(1000, c(0, 0), matrix(c(1, .5, .5, 1), 2, 2))\n    x <- data[,1]\n    y <- data[,2]\n    cor(x, y)  # örnek korelasyon\n    }\n\nif(require(mvtnorm)){\n    x <- cut(x, c(-Inf, .75, Inf))\n    y <- cut(y, c(-Inf, -1, .5, 1.5, Inf))\n    polychor(x, y)  # 2-aşamalı tahmin\n    }\n\nif(require(mvtnorm)){\n    polychor(x, y, ML=TRUE, std.err=TRUE)  # ML tahmini\n    }\n</code> <br/>\n<b>Paket</b></br>\npolycor</br>\n<b>Yardım</b></br>\nDetaylı yardım için, bu diyalog üstündeki sağ üst köşedeki R simgesine tıklayın veya aşağıdaki komutu çalıştırarak help(polycor, package ='polychor') komutunu çalıştırın ve çıktı penceresinde + tıklayarak bir R kodu bloğu oluşturun           \n<br/>\n<br/>\n<b>Açıklama-Poliserial</b></br>\nBir nicel değişken ile bir sıralı değişken arasındaki poliserial korelasyonu (ve standart hatasını) hesaplar, sıralı değişkenin altında yatan gizli sürekli değişkenin ortak dağılımının bivariate normal olduğu varsayımına dayanarak. Ya maksimum-likelihood tahmincisi ya da daha hızlı bir \"iki aşamalı\" yaklaşım mevcuttur. ML tahmincisi için, eşiklerin tahminleri ve tahminlerin kovaryans matrisleri de mevcuttur.\n<br/>\n<b>Kullanım</b>\n<br/>\n<code> \npolyserial(x, y, ML = FALSE, control = list(), \n  std.err = FALSE, maxcor=.9999, bins=4, start, thresholds=FALSE)\n</code> <br/>\n<b>Argümanlar</b><br/>\n<ul>\n<li>\nx: bir sayısal değişken\n</li>\n<li>\ny: sıralı bir kategorik değişken; sayısal, mantıksal, bir faktör, sıralı bir faktör veya bir karakter değişkeni olabilir, ancak bir faktörse, seviyeleri doğru sırada olmalıdır ve bir karakter değişkeninin değerleri alfabetik olarak sıralanmalıdır.\n</li>\n<li>\nML: TRUE ise, maksimum-likelihood tahminini hesapla; FALSE ise, varsayılan, daha hızlı bir \"iki aşamalı\" yaklaşım hesapla.\n</li>\n<li>\nstd.err: TRUE ise, korelasyonun tahmin edilen varyansını (iki aşamalı tahminci için) veya korelasyon ve eşiklerin tahmin edilen kovaryans matrisini (ML tahmincisi için) döndür; varsayılan FALSE'tır. \n</li>\n<li>\nbins: bivariate normalite testi için x'i parçalamak için bin sayısı; varsayılan 4'tür.\n</li>\n<li>\nmaxcor: maksimum mutlak korelasyon (sayısal kararlılığı sağlamak için).\n</li>\n<li>\nstart: opsiyonel başlangıç değeri(leri): tek bir sayı ise, korelasyon için başlangıç değeri.\n</li>\n<li>\nthresholds: TRUE ise (varsayılan FALSE'tır) standart hatalar hesaplanmasa bile tahmin edilen eşikleri tahmin edilen korelasyonla birlikte döndür.\n</li>\n</ul>\n<b>Değerler</b></br>\nDeğer: Eğer std.err veya thresholds TRUE ise, \"polycor\" sınıfından bir nesne döndürür ve aşağıdaki bileşenlere sahiptir:</br>\ntip: \"poliserial\" olarak ayarlanır.</br>\nrho: poliserial korelasyon.</br>\ncuts: ML tahmini için sıralı değişken (y) için tahmin edilen eşikler.</br>\nvar: korelasyonun tahmin edilen varyansı veya ML tahmini için, korelasyon ve eşiklerin tahmin edilen kovaryans matrisidir.</br>\nn: korelasyonun dayandığı gözlem sayısı.</br>\nchisq: bivariate normalite için ki-kare testi.</br>\ndf: bivariate normalite testi için serbestlik dereceleri.</br>\nML: ML tahmini için TRUE, iki aşamalı tahmin için FALSE\n<b>Örnek</b></br>\n<code> \nif(require(mvtnorm)){\n    set.seed(12345)\n    data <- rmvnorm(1000, c(0, 0), matrix(c(1, .5, .5, 1), 2, 2))\n    x <- data[,1]\n    y <- data[,2]\n    cor(x, y)  # örnek korelasyon\n    }\n\nif(require(mvtnorm)){\n    y <- cut(y, c(-Inf, -1, .5, 1.5, Inf))\n    polyserial(x, y)  # 2-aşamalı tahmin\n    }\n\nif(require(mvtnorm)){\n    polyserial(x, y, ML=TRUE, std.err=TRUE) # ML tahmini\n    }\n\n</code> <br/>\n<b>Paket</b></br>\npolycor</br>\n<b>Yardım</b></br>\nDetaylı yardım için, aşağıdaki komutu çalıştırarak help(polyserial, package ='polychor') komutunu çalıştırın ve çıktı penceresinde + tıklayarak bir R kodu bloğu oluşturun           \n\n\t\t\t"
  }
}