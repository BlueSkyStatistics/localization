{
  "title": "Faktör(ler)e Dönüştür",
  "navigation": "Faktör",
  "trg": "Faktöre dönüştürülecek değişkenler",
  "help": {
    "title": "Faktör(ler)e Dönüştür",
    "r_help": "help(factor, package=base)",
    "body": "\n<b>Açıklama</b></br>\nFactor fonksiyonu, bir vektörü faktör olarak kodlamak için kullanılır (faktörler için 'kategori' ve 'sıralı tür' terimleri de kullanılır). Eğer ordered argümanı TRUE ise, faktör seviyelerinin sıralı olduğu varsayılır. S ile uyumluluk için ayrıca ordered fonksiyonu da vardır.\nis.factor, is.ordered, as.factor ve as.ordered bu sınıflar için üyelik ve zorunlu kılma fonksiyonlarıdır.\n<br/>\n<b>Kullanım</b>\n<br/>\n<code>\nfactor(x = character(), levels, labels = levels,\n        exclude = NA, ordered = is.ordered(x), nmax = NA)\nordered(x, ...)\nis.factor(x)\nis.ordered(x)\nas.factor(x)\nas.ordered(x)\naddNA(x, ifany = FALSE)\n</code> <br/>\n<b>Argümanlar</b><br/>\n<ul>\n<li>\nx: genellikle az sayıda farklı değeri olan bir veri vektörü.\n</li>\n<li>\nlevels: x'in alabileceği değerlerin (karakter dizeleri olarak) isteğe bağlı bir vektörü. Varsayılan, as.character(x) tarafından alınan benzersiz değerler kümesidir ve x'in artan sırasına göre sıralanmıştır. Bu küme, sort(unique(x))'ten daha küçük olarak belirtilebilir.\n</li>\n<li>\nlabels: seviyeler için isteğe bağlı bir etiket karakter vektörü (exclude'dan çıkarıldıktan sonra seviyelerle aynı sırada) veya uzunluğu 1 olan bir karakter dizesi.\n</li>\n<li>\nexclude: seviyeler kümesini oluştururken hariç tutulacak değerlerin bir vektörü. Bu, x ile aynı türde olmalıdır ve gerekirse zorunlu kılınacaktır.\n</li>\n<li>\nordered: seviyelerin sıralı olarak kabul edilip edilmeyeceğini belirlemek için mantıksal bir bayrak.\n</li>\n<li>\nnmax: seviyelerin sayısı için bir üst sınır; 'Ayrıntılar'a bakın.\n</li>\n<li>\n...(ordered(.)): yukarıdakilerden herhangi biri, ordered hariç.\n</li>\n<li>\nifany: (sadece bir NA seviyesi ekle, eğer kullanılıyorsa, yani eğer any(is.na(x)).\n</li>\n</ul>\n<b>Ayrıntılar</b></br>\nVektör x'in türü kısıtlanmamıştır; yalnızca bir as.character yöntemi olmalı ve sıralanabilir olmalıdır (sort.list ile sıralanabilir).<br/>\nSıralı faktörler, yalnızca sınıflarında farklılık gösterir, ancak yöntemler ve model uyum fonksiyonları iki sınıfı oldukça farklı bir şekilde ele alır.<br/>\nVektörün kodlaması şu şekilde gerçekleşir. Öncelikle exclude'daki tüm değerler seviyelerden çıkarılır. Eğer x[i] levels[j]'ye eşitse, sonuçta i'inci eleman j olur. Eğer x[i] için levels'da bir eşleşme bulunamazsa (bu, hariç tutulan değerler için olacaktır) o zaman sonuçta i'inci eleman NA olarak ayarlanır.<br/>\nNormalde, sonuçta kullanılan 'seviyeler', exclude'dan çıkarıldıktan sonra azaltılmış seviyeler kümesidir, ancak bu etiketler sağlanarak değiştirilebilir. Bu, ya seviyeler için yeni etiketler kümesi olmalı ya da bir karakter dizesi olmalıdır; bu durumda seviyeler, o karakter dizesi ile bir sıra numarası eklenmiş olarak olur.<br/>\nfactor(x, exclude = NULL) bir faktöre uygulandığında, kullanılmayan seviyeler yoksa bir no-op'dur: bu durumda, azaltılmış seviye kümesine sahip bir faktör döndürülür. Eğer exclude kullanılıyorsa, bu da x ile aynı seviye kümesine sahip bir faktör veya hariç tutulacak seviyeler için bir kod kümesi olmalıdır.<br/>\nBir faktörün kodları NA içerebilir. Sayısal bir x için, NA'yı ekstra bir seviye yapmak için exclude = NULL ayarlayın (bu <NA> olarak yazdırılır); varsayılan olarak, bu son seviyedir.<br/>\nEğer NA bir seviye ise, bir kodun kaybolmuş olarak ayarlanma yolu (kaybolmuş seviyenin kodu ile karşılaştırıldığında) bir atama işleminin sol tarafında is.na kullanmaktır (is.na(f)[i] <- TRUE; is.na içinde indeksleme çalışmaz). Bu koşullar altında kaybolmuş değerler şu anda <NA> olarak yazdırılır, yani NA seviyesinin girişleri ile özdeştir.<br/>\nis.factor genel bir fonksiyondur: belirli nesne sınıflarını ele almak için yöntemler yazabilirsiniz, bkz. InternalMethods.<br/>\nEğer levels sağlanmazsa, unique çağrılır. Faktörlerin genellikle oldukça az sayıda seviyeye sahip olduğu için, büyük vektörler x için nmax'ı benzersiz değerlerin üst sınırı olarak sağlamak faydalıdır.<br/>\n<b>Değer</b><br/>\nfactor, x'in uzunluğunda bir dizi tam sayı kodu ve karakter modunda bir 'levels' niteliğine sahip bir \"factor\" sınıfı nesnesi döndürür ve eğer ordered argümanı doğruysa (veya ordered() kullanılıyorsa) sonuç c(\"ordered\", \"factor\") sınıfına sahiptir.<br/>\nSıralı veya sırasız bir faktöre factor uygulamak, yalnızca mevcut seviyelerle aynı türde bir faktör döndürür: bu konuda daha şeffaf bir yol için [.factor'a da bakın.\nis.factor, argümanının faktör türünde olup olmadığını belirlemek için TRUE veya FALSE döndürür. Karşılık gelen olarak, is.ordered, argümanının sıralı bir faktör olup olmadığını belirlemek için TRUE döndürür ve aksi takdirde FALSE döndürür.<br/>\nas.factor, argümanını bir faktöre zorunlu kılar. Bu, factor'ın kısaltılmış bir biçimidir.<br/>\nas.ordered(x), eğer bu sıralı ise x'i döndürür, aksi takdirde ordered(x) döndürür.<br/>\naddNA, NA'yı ekstra bir seviye haline getirerek bir faktörü değiştirir (örneğin, NA değerlerinin tablolar içinde sayılması için).<br/>\n<b>Paket</b></br>\nbas</br>\n<b>Yardım</b></br>\nhelp(factor, package=fastDummies)\n"
  }
}