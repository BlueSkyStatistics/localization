{
  "title": "Imputation des valeurs manquantes (en utilisant un modèle)",
  "navigation": "Imputation du modèle",
  "depVar": "Sélectionnez une variable pour imputer les valeurs manquantes (c'est la variable dépendante dans le modèle)",
  "label1": "Déplacez les variables indépendantes dans le contrôle de construction de formule pour construire une formule. Survolez les symboles dans le constructeur de formule pour obtenir de l'aide",
  "formula": "Déplacer plusieurs variables avec le bouton de déplacement utilise un séparateur par défaut de +, indiquant des variables indépendantes sans termes d'interaction. Cliquez sur le symbole pour construire un modèle avec des termes d'interaction.",
  "independent": "Variables indépendantes (une ou plusieurs)",
  "modeltype": "Sélectionnez un modèle pour imputer les valeurs manquantes",
  "modelParam": "Spécifiez les paramètres du modèle",
  "help": {
    "title": "Imputation des valeurs manquantes (en utilisant un modèle)",
    "r_help": "help(impute_lm, package='simputation')",
    "body": "\n            <b>Description</b></br>\n            Nous construisons d'abord un modèle en utilisant la variable pour laquelle imputer des valeurs comme variable dépendante.</br> \n            Nous utilisons ensuite le modèle construit pour prédire des valeurs et remplacer les valeurs manquantes dans la variable dépendante par les valeurs prédites</br>\n            Le package simputation offre un certain nombre de méthodes d'imputation unique couramment utilisées, chacune avec une interface simple similaire.\n            La méthodologie d'imputation suivante est prise en charge.</br>\n            • régression linéaire</br>\n            • régression linéaire robuste</br>\n            • régression ridge/elasticnet/lasso</br>\n            • modèles CART (arbres de décision)</br>\n            • Forêt aléatoire</br>\n            • Imputation multivariée</br>\n            • Imputation basée sur l'algorithme d'espérance-maximisation</br>\n            • missForest (imputation itérative par forêt aléatoire)</br>\n            • Imputation par donneur (y compris diverses spécifications de pool de donneurs)</br>\n            • k-plus proches voisins (basé sur la distance de Gower)</br>\n            • hotdeck séquentiel (LOCF, NOCB)</br>\n            • hotdeck aléatoire</br>\n            • Correspondance de moyenne prédictive</br>\n            • Basé sur un modèle (ajouter éventuellement un résidu aléatoire [non]paramétrique)</br>\n            • Autre</br>\n            imputation médiane (groupwise) (résidu aléatoire optionnel)</br>\n            Imputation par proxy : copier une autre variable ou utiliser une transformation simple pour calculer des valeurs imputées.</br>\n            <br/>\n            <b>Utilisation</b>\n            <br/>\n            Un appel à une fonction d'imputation a la structure suivante.</br>\n            impute_ModelType(data, formula, [options spécifiques au modèle])</br>\n            La sortie est similaire à l'argument de données, sauf que les valeurs vides sont imputées (lorsque cela est possible) en utilisant le modèle spécifié.</br>\n            L'argument de formule spécifie les variables à imputer, la spécification du modèle pour <model> et éventuellement le regroupement du jeu de données. </br>\n            La structure d'un objet formule est la suivante :</br>\n            VARIABLE_TO_IMPUTE_MISSINGVALUES ~ MODEL_SPECIFICATION [ | GROUPING ]</br>\n            où la partie entre [] est optionnelle.</br></br>\n            Voir les exemples ci-dessous et la section d'aide pour voir comment construire une formule. </br>\n            Dans les exemples ci-dessous, dependent_var est la variable à imputer.</br>\n            exemple 1 (sans termes d'interaction) : dependent_var ~ independent_var1 + independent_var2...</br>\n            exemple 2 (avec termes d'interaction) : dependent_var ~ independent_var1 + independent_var2 + independent_var1:independent_var2</br></br>\n            <code> \n            #Pour régression linéaire</br>\n            dataset_name <- impute_lm(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            # Pour régression linéaire robuste utilisant l'estimation M dans le package MASS</br>\n            dataset_name <- impute_rlm(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ## Pour régression ridge utilisant le modèle ridge/elasticnet/lasso dans le package glmnet</br>\n            dataset_name <- impute_en(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ## Pour CART (arbres de décision) utilisant le modèle CART dans le package rpart</br>\n            dataset_name <- impute_cart(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ## Pour RandomForest utilisant le modèle forêt aléatoire dans le package randomForest</br>\n            dataset_name <- impute_rf(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ##Pour imputation multivariée basée sur l'algorithme d'espérance-maximisation dans le package norm</br>\n            dataset_name <- impute_em(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            ##Pour imputation multivariée basée sur missForest (=imputation itérative par forêt aléatoire) dans le package missForest</br>\n            dataset_name <- impute_mf(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ##Imputation par donneur (y compris diverses spécifications de pool de donneurs), k-plus proches voisins (basé sur la distance de Gower) dans le package VIM</br>\n            dataset_name <- impute_knn(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ##Imputation par donneur (y compris diverses spécifications de pool de donneurs), hot deck séquentiel (LOCF, NOCB) dans le package VIM</br>\n            dataset_name <- impute_shd(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ##Imputation par donneur (y compris diverses spécifications de pool de donneurs), hot deck aléatoire dans le package VIM</br>\n            dataset_name <- impute_rhd(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br>\n            </code> <br/>\n            <b>Package</b></br>\n            simputation et d'autres packages basés sur la méthode d'imputation sélectionnée. Voir ci-dessus</br>\n            <b>Aide</b></br>\n            Pour une aide détaillée, cliquez sur l'icône R en haut à droite de cette superposition de dialogue ou exécutez la commande suivante help(impute_lm, package='simputation') en créant un bloc de code R en cliquant sur + dans la fenêtre de sortie</br>\n            <b>URLs utiles</b></br>\n            https://cran.r-project.org/web/packages/simputation/vignettes/intro.html\n            "
  }
}