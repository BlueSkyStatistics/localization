{
  "title": "Carte du Monde",
  "navigation": "Carte du Monde",
  "region": "Variable avec les noms de pays :",
  "value": "Variable avec les valeurs à cartographier :",
  "colors": "Entrez le nombre de couleurs",
  "zoomByStates": "Entrez les pays sur lesquels zoomer, par exemple les États-Unis d'Amérique, le Canada, le Mexique",
  "specify_a_title": "Entrez un titre",
  "legend": "Légende :",
  "help": {
    "title": "Carte du Monde",
    "r_help": "help(country_choropleth, package='choroplethr')",
    "body": "\n            <b>Description</b></br>\n            Dessine une carte du monde et vous permet de zoomer éventuellement sur 1 ou plusieurs pays\n             <br/>\n             <b>Utilisation</b>\n             <br/>\n             <code> \n            country_choropleth(BSkyDfForMap, title=\"\", legend=\"\", num_colors =1,zoom=NULL)\n             </code> <br/>\n             <b>Arguments</b><br/>\n             <ul>\n             <li>\n             BSkyDfForMap : Un data.frame avec une colonne nommée \"region\" et une colonne nommée \"value\". Les éléments de la colonne \"region\" doivent correspondre exactement à la façon dont les régions sont nommées dans la colonne \"region\" dans ?country.map. Exécutez le code ci-dessous dans l'autre section pour voir les variables dans country.map\n             </li>\n             <li>\n             Titre : Un titre optionnel pour la carte.\n             </li>\n             <li>\n             Légende : Un nom optionnel pour la légende.\n             </li>\n             <li>\n             num_colors : Le nombre de couleurs sur la carte. Une valeur de 1 utilisera une échelle continue. Une valeur dans [2, 9] utilisera ce nombre de couleurs.\n             </li>\n             <li>\n             zoom : Un vecteur optionnel de pays à zoomer. Les éléments de ce vecteur doivent correspondre exactement aux noms des pays tels qu'ils apparaissent dans la colonne \"region\" de ?country.regions\n             </li>\n             </ul>\n             <b>Package</b></br>\n             choroplethr;choroplethrMaps;</br>\n             <b>Aide</b></br>\n             help(country_choropleth, package='choroplethr')</br>\n             <b>Autre</b></br>\n             <code> \n             # Exécutez le code ci-dessous pour accéder au jeu de données state.map<br/>\n             library(choroplethr)<br/>\n             library(choroplethrMaps)<br/>\n             data(country.map)<br/>\n             country.map<br/>\n             </code> <br/>\n    "
  }
}