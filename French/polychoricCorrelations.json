{
  "title": "Corrélation Polychorique",
  "navigation": "Polychorique",
  "Target": "Sélectionnez une ou plusieurs variables x",
  "textbox1": "Intervalle de confiance",
  "textbox2": "Hypothèse nulle (mu)",
  "Target2": "Sélectionnez une seule variable facteur ordonnée y",
  "label1": "Type d'estimation",
  "test1": "Approximation en deux étapes",
  "test2": "Estimateur du maximum de vraisemblance",
  "label2": "Erreur standard",
  "Missvals": "Afficher l'erreur standard",
  "conflevel": "Corrélation absolue maximale (pour assurer la stabilité numérique).",
  "Seed": "Valeur(s) de départ optionnelle(s)",
  "header": "La corrélation est estimée entre chaque variable x et la variable y",
  "showEffectSizes": "Retourner les seuils estimés",
  "help": {
    "title": "Corrélation Polychorique",
    "r_help": "help(polychor, package ='polycor')",
    "body": "\n<b>Description</b></br>\nCalcule la corrélation polychorique (et son erreur standard) entre deux variables ordinales, sous l'hypothèse que les variables ordinales découpent des variables latentes continues qui sont bivariées normales. Soit l'estimateur du maximum de vraisemblance ou une approximation en deux étapes (possiblement beaucoup) plus rapide est disponible. Pour l'estimateur ML, les estimations des seuils et la matrice de covariance des estimations sont également disponibles.\n<br/>\n<b>Utilisation</b>\n<br/>\n<code> \npolychor(x, y, ML = FALSE, control = list(), \n  std.err = FALSE, maxcor=.9999, start, thresholds=FALSE)\n</code> <br/>\n<b>Arguments</b><br/>\n<ul>\n<li>\nx: variable catégorique ordonnée; la variable peut être numérique, logique, un facteur, un facteur ordonné, ou une variable de caractère, mais si c'est un facteur, ses niveaux doivent être dans le bon ordre, et les valeurs d'une variable de caractère sont ordonnées par ordre alphabétique.\n</li>\n<li>\ny: une variable facteur ordonnée\n</li>\n<li>\nML: si TRUE, calcule l'estimation du maximum de vraisemblance; si FALSE, par défaut, calcule une approximation en deux étapes plus rapide.\n</li>\n<li>\nstd.err: si TRUE, retourne la variance estimée de la corrélation (pour l'estimateur en deux étapes) ou la matrice de covariance estimée (pour l'estimateur ML) de la corrélation et des seuils; la valeur par défaut est FALSE. \n</li>\n<li>\nmaxcor: corrélation absolue maximale (pour assurer la stabilité numérique).\n</li>\n<li>\nstart: valeurs de départ optionnelles: si un seul nombre, valeur de départ pour la corrélation.\n</li>\n<li>\nthresholds: si TRUE (la valeur par défaut est FALSE) retourne les seuils estimés avec la corrélation estimée même si les erreurs standards ne sont pas calculées.\n</li>\n</ul>\n<b>Valeurs</b></br>\nValeur: Si std.err ou thresholds est TRUE, retourne un objet de classe \"polycor\" avec les composants suivants:</br>\ntype: défini sur \"polychorique\".</br>\nrho: la corrélation polychorique.</br>\nrow.cuts: seuils estimés pour la variable de ligne (x), pour l'estimation ML.</br>\ncol.cuts: seuils estimés pour la variable de colonne (y), pour l'estimation ML.</br>\nvar: la variance estimée de la corrélation, ou, pour l'estimation ML, la matrice de covariance estimée de la corrélation et des seuils.</br>\nn: le nombre d'observations sur lesquelles la corrélation est basée.</br>\nchisq: test du chi carré pour la normalité bivariée.</br>\ndf: degrés de liberté pour le test de normalité bivariée.</br>\nML: TRUE pour l'estimation ML, FALSE pour l'estimation en deux étapes\n<b>Détails</b></br>\nL'estimateur ML est calculé en maximisant la vraisemblance bivariée normale par rapport aux seuils pour les deux variables (τ^x[i], i = 1,…, r - 1; τ^y[j], j = 1,…, c - 1) et la corrélation de la population (ρ). Ici, r et c sont respectivement le nombre de niveaux de x et y. La vraisemblance est maximisée numériquement en utilisant la fonction optim, et la matrice de covariance des paramètres estimés est basée sur le Hessien numérique calculé par optim.</br>\nL'estimateur en deux étapes est calculé en estimant d'abord les seuils (τ^x[i], i = 1,…, r - 1 et τ^y[j], i = j,…, c - 1) séparément de la distribution marginale de chaque variable. Ensuite, la vraisemblance unidimensionnelle pour ρ est maximisée numériquement, en utilisant optim si les erreurs standards sont demandées, ou optimise si elles ne le sont pas. L'erreur standard calculée considère les seuils comme fixes.\n<br/>\n<b>Exemple</b></br>\n<code> \nif(require(mvtnorm)){\n    set.seed(12345)\n    data <- rmvnorm(1000, c(0, 0), matrix(c(1, .5, .5, 1), 2, 2))\n    x <- data[,1]\n    y <- data[,2]\n    cor(x, y)  # corrélation échantillon\n    }\n\nif(require(mvtnorm)){\n    x <- cut(x, c(-Inf, .75, Inf))\n    y <- cut(y, c(-Inf, -1, .5, 1.5, Inf))\n    polychor(x, y)  # estimation en 2 étapes\n    }\n\nif(require(mvtnorm)){\n    polychor(x, y, ML=TRUE, std.err=TRUE)  # estimation ML\n    }\n</code> <br/>\n<b>Paquet</b></br>\npolycor</br>\n<b>Aide</b></br>\nPour une aide détaillée, cliquez sur l'icône R en haut à droite de ce dialogue ou exécutez la commande suivante help(polycor, package ='polychor') en créant un bloc de code R en cliquant + dans la fenêtre de sortie           \n    "
  }
}