{
  "title": "Generar Reglas, Formato de Múltiples Líneas",
  "navigation": "Generar Reglas, Formato de Múltiples Líneas",
  "src": "Columnas",
  "idcolname": "Nombre de la columna de ID de transacción",
  "itemcolname": "Nombre de la columna de artículos de transacción",
  "prunerules": "Reglas de poda",
  "graphs": "Mostrar visualizaciones",
  "test3": "Diferencia < 0",
  "txtbox2": "Hipótesis nula (mu)",
  "txtbox1": "Nivel de confianza",
  "label1": "Generar Reglas",
  "rulesobj": "Nombre del objeto de reglas",
  "rulesobjhint": "Este objeto contiene todas las reglas y puede ser especificado en otros diálogos relacionados. es decir, Mostrar Reglas, Graficar Reglas",
  "support": "Valor mínimo de soporte",
  "supphint": "El soporte de un artículo(s) es la fracción de transacciones en el conjunto de datos que contienen ese artículo(s).",
  "confidence": "Valor mínimo de confianza",
  "confhint": "La confianza de una regla es la probabilidad de que sea verdadera para una nueva transacción que contiene los artículos en el LHS de la regla",
  "advoptions": "Opciones Avanzadas",
  "minlen": "Número mínimo de artículos a la izquierda",
  "maxlen": "Número máximo de artículos a la izquierda",
  "sortopt": "Opciones de Ordenación",
  "sortby": "Ordenar por",
  "rd1": "Confianza",
  "rd2": "Aumento",
  "rd3": "Soporte",
  "sortord": "Orden de clasificación",
  "increasing": "Ascendente",
  "decreasing": "Descendente",
  "noofrules": "Número de reglas a mostrar",
  "rulecount": "",
  "fromto": "Mostrar reglas",
  "from": "Desde",
  "to": "Hasta",
  "help": {
    "title": "Generar Reglas, Formato de Múltiples Líneas",
    "r_help": "help(apriori, package='arules')",
    "body": "\n            <b>\n            NOTA: Dependiendo del formato de los datos, elegirás ya sea el 'Formato de datos de cesta' o 'Formato de transacción de múltiples líneas' o Formato de Múltiples Variables. Se proporciona un conjunto separado de diálogos para cada uno de estos formatos de datos. Consulta a continuación para más detalles:\n            </b>\n            <br/><br/>\n            <b>\n            Formato de Datos de Cesta\n            </b>\n            <br/>\n            Con el formato de datos de cesta, todos los artículos en una sola cesta se encuentran en una sola columna en el conjunto de datos. Múltiples artículos están separados por cualquier carácter único como coma(,) , punto y coma (;) o dos puntos (:), etc.\n            <br/>\n            <b>\n            Ejemplo 1\n            </b>\n            <table style=\"border: 1px solid ; border-collapse: collapse;\">\n            <tr>\n              <th style=\"border: 1px solid ; border-collapse: collapse;\">Artículos</th>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">artículo10,artículo20,artículo23,artículo24</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">artículo12,artículo13,artículo43</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">artículo12,artículo14,artículo32</td>\n            </tr>            \n          </table> \n\n          <br/>\n          <b>\n          Ejemplo 2\n          </b>\n          <table style=\"border: 1px solid ; border-collapse: collapse;\">\n          <tr>\n            <th style=\"border: 1px solid ; border-collapse: collapse;\">Artículos Alimentarios</th>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">manzanas,mangos,cerveza</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">leche,pollo,queso</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">manzanas,vino,queso</td>\n          </tr>            \n        </table>    \n        <br/>\n        <br>\n        <b>\n        Formato de Datos de Transacción de Múltiples Líneas\n        </b>\n        <br/>\n        Con el formato de transacción, cada artículo en una sola cesta se representa en una fila separada. Todas las filas que representan artículos en una sola cesta contienen un ID de transacción común. El ID de transacción se captura en una columna separada        \n        <br/>\n        <b>\n        Ejemplo 1\n        </b>\n        <table style=\"border: 1px solid ; border-collapse: collapse;\">\n        <tr>\n          <th style=\"border: 1px solid ; border-collapse: collapse;\">ID</th>\n          <th style=\"border: 1px solid ; border-collapse: collapse;\">Artículos</th>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">Pan</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">Mantequilla</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">Carne</td>\n        </tr>      \n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">Huevos</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">Queso</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">Leche</td>\n        </tr>                              \n      </table> \n      <br/>\n      Así que la cesta 1 contiene pan y mantequilla y la cesta 2 contiene Carne, Huevos, Queso y Leche\n\n      <br/><br/>\n      <b>\n      Formato de Datos de Múltiples Variables\n      </b>\n      <br/>\n      En este formato, cada nivel de una variable en un conjunto de datos representa un artículo. Cada fila del conjunto de datos representa una cesta. Consulta a continuación\n      <br/>\n      <b>\n      Ejemplo 1\n      </b>\n      <table style=\"border: 1px solid ; border-collapse: collapse;\">\n      <tr>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">Productos de Panadería</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">Lácteos </th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">Carne</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">Verduras</th>        \n      </tr>\n      <tr>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">Pan</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">Leche</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">Pollo</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">Tomates</td>\n      </tr>\n      <tr>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">NA</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">Queso</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">NA</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">Cebollas</td>\n      </tr>\n    </table> \n    <br/>\n    La casilla de verificación de reglas de poda te permite podar reglas. Cuando se selecciona, se muestran las reglas redundantes y el modelo podado con las reglas redundantes eliminadas se guarda y se muestra. \n    <br/>\n    Al hacer clic en la casilla de verificación de mostrar visualizaciones, se muestran gráficos. Hemos comentado el  #plot(rule1, method =\"paracoord\",control = list(reorder=TRUE)) ya que puede tardar mucho tiempo en ejecutarse. Puedes pegar la sintaxis y ejecutar el comando manualmente.\n    <br/>\n    <br/>\n    <b>\n    Salida\n    </b>\n    <br/>\n    Los resultados se muestran en formato tabular\n    <br/>\n    Las columnas en la tabla son las siguientes\n    <br/><br/>\n    <b>LHS:</b> Estos representan los artículos en la cesta\n    <br/><br/>\n    <b>RHS:</b> Dado los artículos en la cesta (LHS), el RHS contiene un solo artículo que probablemente será comprado\n    <br/><br/>\n    <b>Soporte:</b> El soporte es la fracción de transacciones en el conjunto de datos que contienen los artículos en el LHS\n    <br/><br/>\n    <b>Confianza:</b> La confianza es la probabilidad condicional de que un cliente que compra artículos en el LHS también comprará el artículo en el RHS\n    <br/><br/>\n    <b>Aumento:</b> Si alguien compra artículos en el LHS, ¿cuál sería el % de probabilidad de que el producto en el RHS aumente? Así que, básicamente, cuánto ha aumentado nuestra confianza de que el RHS será comprado dado que el LHS es comprado. Si el aumento es >1, la presencia de artículos en el LHS ha aumentado la probabilidad de que los artículos en el RHS ocurran en la transacción, si <1, la presencia de artículos en el LHS disminuirá la probabilidad de que los artículos en el RHS, si =1, entonces LHS y RHS son independientes\n    <br/><br/>\n    Para más detalles, consulta \n    <br/><br/>\n    http://infocenter.informationbuilders.com/wf80/index.jsp?topic=%2Fpubdocs%2FRStat16%2Fsource%2Ftopic49.htm\n    <br/><br/>\n    https://discourse.snowplowanalytics.com/t/market-basket-analysis-identifying-products-and-content-that-go-well-together/1132\n    <br/><br/>\n    http://www.listendata.com/2015/12/market-basket-analysis-with-r.html\n    <br/><br/>\n    http://www.salemmarafi.com/code/market-basket-analysis-with-r/\n    <br/><br/>\n\n    <b>Paquete : arules</b> \n    <br/><br/>\n    <b>Descripción</b> \n    <br/>\n    Minar conjuntos de elementos frecuentes, reglas de asociación o hiperejes de asociación utilizando el algoritmo Apriori. El algoritmo Apriori emplea una búsqueda por niveles para conjuntos de elementos frecuentes. La implementación de Apriori utilizada incluye algunas mejoras (por ejemplo, un árbol de prefijos y ordenación de elementos).\n    <br/><br/>\n    <b>Uso</b> \n    <br/>\n    <code>\n    apriori(data, parameter = NULL, appearance = NULL, control = NULL)\n    </code>\n    <br/><br/>\n\n    <b>Argumentos</b><br/>\n    <ul>\n    <li>\n    data: objeto de clase transacciones o cualquier estructura de datos que pueda ser convertida en transacciones (por ejemplo, una matriz binaria o data.frame).\n    </li>\n    <li>\n    parameter: objeto de clase APparameter o lista nombrada. El comportamiento predeterminado es minar reglas con un soporte mínimo de 0.1, una confianza mínima de 0.8, un máximo de 10 artículos (maxlen), y un tiempo máximo para la verificación de subconjuntos de 5 segundos (maxtime).\n    </li>\n    <li>\n    appearance: objeto de clase APappearance o lista nombrada. Con este argumento, la aparición de artículos puede ser restringida (implementa plantillas de reglas). Por defecto, todos los artículos pueden aparecer sin restricciones.\n    </li>\n    <li>\n    control: objeto de clase APcontrol o lista nombrada. Controla el rendimiento algorítmico del algoritmo de minería (ordenación de elementos, informe de progreso (verbose), etc.)\n    </li>\n    </ul>\n    <br/><br/>\n    <b>Detalles</b><br/>\n    Llama a la implementación en C del algoritmo Apriori por Christian Borgelt para minar conjuntos de elementos frecuentes, reglas o hiperejes.\n    <br/><br/>\n\n    <b>Nota</b>\n    Apriori solo crea reglas con un artículo en el RHS (Consecuente)! El valor predeterminado en APparameter para minlen es 1. Esto significa que se crearán reglas con solo un artículo (es decir, un antecedente/LHS vacío) como\n    <br/><br/>\n    <code>{} => {cerveza}</code>\n    <br/><br/>\n    se crearán. Estas reglas significan que no importa qué otros artículos estén involucrados, el artículo en el RHS aparecerá con la probabilidad dada por la confianza de la regla (que es igual al soporte). Si deseas evitar estas reglas, utiliza el argumento parameter=list(minlen=2).\n    <br/><br/>\n    <b>Notas sobre el tiempo de ejecución y el uso de memoria:</b>\n    Si el soporte mínimo se elige demasiado bajo para el conjunto de datos, el algoritmo intentará crear un conjunto extremadamente grande de conjuntos de elementos/reglas. Esto resultará en un tiempo de ejecución muy largo y eventualmente el proceso se quedará sin memoria. Para prevenir esto, la longitud máxima predeterminada de conjuntos de elementos/reglas se restringe a 10 artículos (a través del parámetro elemento maxlen=10) y el tiempo para verificar subconjuntos se limita a 5 segundos (a través de maxtime=5). La salida mostrará si alcanzaste estos límites en la línea de \"verificación de subconjuntos\" de la salida. El límite de tiempo solo se verifica cuando el tamaño del subconjunto aumenta, por lo que puede tardar significativamente más de lo que especificas en maxtime. Establecer maxtime=0 desactiva el límite de tiempo.\n    <br/>Interrumpir la ejecución con Control-C/Esc no se recomienda. La limpieza de memoria se evitará, lo que resultará en una fuga de memoria. Además, las interrupciones solo se verifican cuando el tamaño del subconjunto aumenta, por lo que puede tardar un tiempo hasta que la ejecución realmente se detenga.\n    <br/><br/>\n    <b>Valor</b><br/><br/>\n    Devuelve un objeto de clase reglas o conjuntos de elementos.\n    <br/>\n\t\t\t\n    "
  }
}