{
  "title": "K Vecinos Más Cercanos",
  "navigation": "KNN",
  "dependentvar": "Variable dependiente",
  "independentvars": "Variable(s) independiente(s)",
  "header": "KNN es un clasificador perezoso, no crea un ajuste para predecir más tarde. Se ajusta y evalúa al mismo tiempo. Dividimos el conjunto de datos en conjuntos de entrenamiento y prueba, luego construimos el modelo en el conjunto de datos de entrenamiento, haciendo predicciones en el conjunto de datos de prueba y usamos esas predicciones para mostrar estadísticas de evaluación del modelo.",
  "Seed": "Establecer Semilla",
  "Group2": "Parámetros de ajuste para KNN",
  "noneighbhors": "No. de vecinos (Cuando no se especifica un valor, el valor predeterminado se establece en la raíz cuadrada del número de observaciones en el conjunto de datos)",
  "Group1": "Conjuntos de datos de entrenamiento y prueba",
  "splitPercentage": "Ingrese el porcentaje de división",
  "trainDatasetName": "Ingrese el nombre del conjunto de datos de entrenamiento",
  "testDatasetName": "Ingrese el nombre del conjunto de datos de prueba",
  "predictedValues": "Ingrese el prefijo de variable para los valores predichos. (Debe especificar un prefijo) Las variables con prefijo se crean en el conjunto de datos de prueba.",
  "help": {
    "title": "K Vecinos Más Cercanos",
    "r_help": "help(knn, package ='class')",
    "body": "\n                <b>Descripción</b></br>\nClasificación de k-Vecinos Más Cercanos\n<br/>\n<b>Nota: </b></br>\n1. Los conjuntos de datos de entrenamiento y prueba se crean automáticamente con KNN según el porcentaje de división especificado<br/>\n2. Los valores predichos se almacenan en el conjunto de datos de prueba y se utilizan para calcular estadísticas del modelo, a saber, precisión, kappa, sensibilidad.... La matriz de confusión también se muestra\n<br/>\n<b>Uso</b>\n<br/>\n<code> \nknn(train, test, cl, k = 1, l = 0, prob = FALSE, use.all = TRUE)\n</code> <br/>\n<b>Argumentos</b><br/>\n<ul>\n<li>\ntrain: matriz o marco de datos de los casos del conjunto de entrenamiento.\n</li>\n<li>\ntest: matriz o marco de datos de los casos del conjunto de prueba. Un vector se interpretará como un vector de fila para un solo caso.\n</li>\n<li>\ncl: factor de clasificaciones verdaderas del conjunto de entrenamiento\n</li>\n<li>\nk: número de vecinos considerados.\n</li>\n<li>\nl: voto mínimo para una decisión definitiva, de lo contrario, duda. (Más precisamente, se permiten menos de k-l votos disidentes, incluso si k se incrementa por empates.)\n</li>\n<li>\nprob: Si esto es verdadero, la proporción de los votos para la clase ganadora se devuelve como atributo prob.\n</li>\n<li>\nuse.all: controla el manejo de empates. Si es verdadero, todas las distancias iguales a la k-ésima más grande se incluyen. Si es falso, se elige una selección aleatoria de distancias iguales a la k-ésima para usar exactamente k vecinos.\n</li>\n</ul>\n<b>Valor</b></br>\nFactor de clasificaciones del conjunto de prueba. la duda se devolverá como NA.</br>\n<b>Paquete</b></br>\ncaret;class</br>\n<b>Ayuda</b></br>\nhelp(knn, package ='class')\n                "
  }
}