{
  "title": "Prueba de Chi-cuadrado",
  "navigation": "Prueba de Chi-cuadrado",
  "target": "Variables seleccionadas",
  "proportions": "Prueba contra proporciones iguales o ingrese proporciones para probar. Si su variable es género, deje este control en blanco para probar proporciones iguales. Para probar 20% mujeres, 80% hombres, ingrese 0.2,0.8. Ingrese una proporción para cada nivel. Las proporciones deben sumar 1.",
  "help": {
    "title": "Prueba de Chi-cuadrado",
    "r_help": "help(chisq.test, package=stats)",
    "body": "\n<b>Descripción</b></br>\nchisq.test realiza pruebas de tablas de contingencia chi-cuadradas y pruebas de bondad de ajuste.\n<br/>\n<b>Uso</b>\n<br/>\n<code>\nchisq.test(x, y = NULL, correct = TRUE,\n            p = rep(1/length(x), length(x)), rescale.p = FALSE,\n            simulate.p.value = FALSE, B = 2000)\n</code> <br/>\n<b>Argumentos</b><br/>\n<ul>\n<li>\nx: un vector o matriz numérica. x e y también pueden ser factores.\n</li>\n<li>\ny: un vector numérico; se ignora si x es una matriz. Si x es un factor, y debe ser un factor de la misma longitud.\n</li>\n<li>\ncorrect: un lógico que indica si se debe aplicar la corrección de continuidad al calcular la estadística de prueba para tablas 2 por 2: se resta la mitad de todas las diferencias |O - E|; sin embargo, la corrección no será mayor que las diferencias mismas. No se realiza corrección si simulate.p.value = TRUE.\n</li>\n<li>\np: un vector de probabilidades de la misma longitud que x. Se genera un error si alguna entrada de p es negativa.\n</li>\n<li>\nrescale.p: un escalar lógico; si es TRUE, entonces p se reescala (si es necesario) para sumar 1. Si rescale.p es FALSE, y p no suma 1, se genera un error.\n</li>\n<li>\nsimulate.p.value: un lógico que indica si se deben calcular los valores p mediante simulación de Monte Carlo.\n</li>\n<li>\nB: un entero que especifica el número de réplicas utilizadas en la prueba de Monte Carlo.\n</li>\n</ul>\n<b>Descripción</b><br/>\nSi x es una matriz con una fila o columna, o si x es un vector y y no se da, se realiza una prueba de bondad de ajuste (x se trata como una tabla de contingencia unidimensional). Las entradas de x deben ser enteros no negativos. En este caso, la hipótesis probada es si las probabilidades de la población son iguales a las de p, o son todas iguales si p no se da.\nSi x es una matriz con al menos dos filas y columnas, se toma como una tabla de contingencia bidimensional: las entradas de x deben ser enteros no negativos. De lo contrario, x e y deben ser vectores o factores de la misma longitud; los casos con valores faltantes se eliminan, los objetos se convierten en factores, y se calcula la tabla de contingencia a partir de estos. Luego se realiza la prueba chi-cuadrada de Pearson de la hipótesis nula de que la distribución conjunta de los conteos de celdas en una tabla de contingencia de 2 dimensiones es el producto de los márgenes de fila y columna.<br/>\nSi simulate.p.value es FALSE, el valor p se calcula a partir de la distribución chi-cuadrada asintótica de la estadística de prueba; la corrección de continuidad solo se usa en el caso de 2 por 2 (si correct es TRUE, el valor predeterminado). De lo contrario, el valor p se calcula para una prueba de Monte Carlo (Hope, 1968) con B réplicas.\nEn el caso de la tabla de contingencia, la simulación se realiza mediante muestreo aleatorio del conjunto de todas las tablas de contingencia con márgenes dados, y solo funciona si los márgenes son estrictamente positivos. La corrección de continuidad nunca se usa, y la estadística se cita sin ella. Tenga en cuenta que esta no es la situación de muestreo habitual asumida para la prueba chi-cuadrada, sino más bien la de la prueba exacta de Fisher.<br/>\nEn el caso de la bondad de ajuste, la simulación se realiza mediante muestreo aleatorio de la distribución discreta especificada por p, cada muestra tiene un tamaño n = suma(x). Esta simulación se realiza en R y puede ser lenta.<br/>\n<b>Valor</b></br>\nUna lista con clase \"htest\" que contiene los siguientes componentes:</br>\nstatistic: el valor de la estadística de prueba chi-cuadrada.</br>\nparameter: los grados de libertad de la distribución chi-cuadrada aproximada de la estadística de prueba, NA si el valor p se calcula mediante simulación de Monte Carlo.</br>\np.value: el valor p para la prueba.</br>\nmethod: una cadena de caracteres que indica el tipo de prueba realizada, y si se utilizó simulación de Monte Carlo o corrección de continuidad.</br>\ndata.name: una cadena de caracteres que da el nombre(s) de los datos.</br>\nobserved: los conteos observados.</br>\nexpected: los conteos esperados bajo la hipótesis nula.</br>\nresiduals: los residuos de Pearson, (observado - esperado) / sqrt(esperado).</br>\nstdres: residuos estandarizados, (observado - esperado) / sqrt(V), donde V es la varianza residual de la celda (Agresti, 2007, sección 2.4.5 para el caso en que x es una matriz, n * p * (1 - p) de lo contrario).​​</br>\n<b>Ejemplos</b><br/>\n<code> \n## De Agresti(2007) p.39\nM <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))</br>\ndimnames(M) <- list(gender = c(\"F\", \"M\"),</br>\n                    party = c(\"Demócrata\",\"Independiente\", \"Republicano\"))</br>\n(Xsq <- chisq.test(M))  # Imprime resumen de la prueba</br>\nXsq$observed   # conteos observados (mismo que M)</br>\nXsq$expected   # conteos esperados bajo la nula</br>\nXsq$residuals  # residuos de Pearson</br>\nXsq$stdres     # residuos estandarizados</br>\n</br>\n## Efecto de simular valores p</br>\nx <- matrix(c(12, 5, 7, 7), ncol = 2)</br>\nchisq.test(x)$p.value           # 0.4233</br>\nchisq.test(x, simulate.p.value = TRUE, B = 10000)$p.value</br>\n                                # ¡alrededor de 0.29!</br>\n</code> <br/>\n<b>Paquete</b></br>\nstats</br>\n<b>Ayuda</b></br>\nhelp(chisq.test, package ='caret')      \n"
  }
}