{
  "title": "Reordenar Niveles de Factor por Otra Variable",
  "navigation": "Reordenar por Otra Variable",
  "target": "Seleccionar variable de factor para reordenar",
  "variableToOrderBy": "Variable para ordenar por",
  "label1": "Reordena los niveles de factor basándose en una función aritmética es decir, media, mediana, suma de los valores en otra variable. Selecciona la variable de factor a reordenar, selecciona una variable numérica para calcular la media, mediana o suma. Esto se calcula para cada nivel de la variable de factor. Los niveles se ordenan en función de este cálculo. Puedes sobrescribir variables existentes o crear nuevas variables especificando un prefijo/sufijo. Se crearán nuevas variables con el prefijo/sufijo añadido a los nombres existentes.",
  "function": "Seleccionar una función para ordenar por",
  "label2": "Guardar resultados en una nueva variable o sobrescribir variable existente",
  "rd3": "Especificar un sufijo (Se creará una nueva variable con el sufijo)",
  "txt3": "Ingresar un sufijo",
  "rd2": "Especificar un prefijo (Se creará una nueva variable con el prefijo)",
  "txt4": "Ingresar un prefijo",
  "rd1": "Sobrescribir variable existente",
  "label3": "Especificar un orden",
  "Descending": "Descendente",
  "Ascending": "Ascendente",
  "help": {
    "title": "Reordenar por Otro",
    "r_help": "help(fct_reorder, package =forcats)",
    "body": "\n<b>Descripción</b></br>\nReordena los niveles de factor ordenando a lo largo de otra variable. Los niveles de factor se reordenan basándose en una función aritmética es decir, media, mediana, suma de los valores en otra variable. Selecciona la variable de factor a reordenar, selecciona una variable numérica para calcular la media, mediana o suma. Esto se calcula para cada nivel de la variable de factor. Los niveles se ordenan en función de este cálculo. Los resultados se pueden guardar en la(s) variable(s) existente(s) o puedes crear nuevas variables especificando un prefijo/sufijo. Se crearán nuevas variables con el prefijo/sufijo añadido a los nombres existentes. \n<br/>\n<b>Uso</b>\n<br/>\n<code> \nfct_reorder(.f, .x, .fun = median, ..., .desc = FALSE)\nDataset1$col1 <-forcats::fct_reorder( .f=Dataset1$col1,.x=Dataset1$col2,.fun=median,.desc=TRUE)\n</code> <br/>\n<b>Argumentos</b><br/>\n<ul>\n<li>\n.f: Un factor (o vector de caracteres).\n</li>\n<li>\n.x, .y: Los niveles de f se reordenan de modo que los valores de .fun(.x) (para fct_reorder()) y fun(.x, .y) (para fct_reorder2()) estén en orden ascendente.\n</li>\n<li>\n.fun: n función de resumen. Debe tomar un vector para fct_reorder, y dos vectores para fct_reorder2, y devolver un solo valor.\n</li>\n<li>\n...: Otros argumentos pasados a .fun. Un argumento común es na.rm = TRUE.\n</li>\n<li>\n.desc: ¿Ordenar en orden descendente? Ten en cuenta que el valor predeterminado es diferente entre fct_reorder y fct_reorder2, para coincidir con el orden predeterminado de los factores en la leyenda.\n</li>\n</ul>\n<b>Ejemplos</b></br>\n<code> \nboxplot(Sepal.Width ~ Species, data = iris)<br/>\nboxplot(Sepal.Width ~ fct_reorder(Species, Sepal.Width), data = iris)<br/>\nboxplot(Sepal.Width ~ fct_reorder(Species, Sepal.Width, .desc = TRUE), data = iris)<br/>\nchks <- subset(ChickWeight, as.integer(Chick) < 10)<br/>\nchks <- transform(chks, Chick = fct_shuffle(Chick))<br/>\nif (require(\"ggplot2\")) {<br/>\nggplot(chks, aes(Time, weight, colour = Chick)) +<br/>\n    geom_point() +<br/>\n    geom_line()<br/>\n# Ten en cuenta que las líneas coinciden con el orden en la leyenda<br/>\nggplot(chks, aes(Time, weight, colour = fct_reorder2(Chick, Time, weight))) +<br/>\n    geom_point() +<br/>\n    geom_line() +<br/>\n    labs(colour = \"Chick\")<br/>\n}<br/>\n</code>\n<b>Paquete</b></br>\nforcats</br>\n<b>Ayuda</b></br>\nEscribe la línea de abajo en el editor de sintaxis de BioStat Prime R</br>\nhelp(fct_reorder, package =forcats)\n"
  }
}