{
  "title": "Mapa Mundial",
  "navigation": "Mapa Mundial",
  "region": "Variable con nombres de países:",
  "value": "Variable con valores para el mapa:",
  "colors": "Ingrese el número de colores",
  "zoomByStates": "Ingrese los países a los que desea acercarse, por ejemplo, estados unidos de américa, canadá, méxico",
  "specify_a_title": "Ingrese un título",
  "legend": "Leyenda:",
  "help": {
    "title": "Mapa Mundial",
    "r_help": "help(country_choropleth, package='choroplethr')",
    "body": "\n            <b>Descripción</b></br>\n            Dibuja un mapa mundial y permite acercarse opcionalmente a 1 o más países\n             <br/>\n             <b>Uso</b>\n             <br/>\n             <code> \n            country_choropleth(BSkyDfForMap, title=\"\", legend=\"\", num_colors =1,zoom=NULL)\n             </code> <br/>\n             <b>Argumentos</b><br/>\n             <ul>\n             <li>\n             BSkyDfForMap: Un data.frame con una columna llamada \"region\" y una columna llamada \"value\". Los elementos en la columna \"region\" deben coincidir exactamente con cómo se nombran las regiones en la columna \"region\" en ?country.map. Ejecute el código a continuación en la otra sección para ver las variables en country.map\n             </li>\n             <li>\n             Título: Un título opcional para el mapa.\n             </li>\n             <li>\n             Leyenda: Un nombre opcional para la leyenda.\n             </li>\n             <li>\n             num_colors: El número de colores en el mapa. Un valor de 1 utilizará una escala continua. Un valor en [2, 9] utilizará esa cantidad de colores.\n             </li>\n             <li>\n             zoom: Un vector opcional de países para acercarse. Los elementos de este vector deben coincidir exactamente con los nombres de los países tal como aparecen en la columna \"region\" de ?country.regions\n             </li>\n             </ul>\n             <b>Paquete</b></br>\n             choroplethr;choroplethrMaps;</br>\n             <b>Ayuda</b></br>\n             help(country_choropleth, package='choroplethr')</br>\n             <b>Otro</b></br>\n             <code> \n             # Ejecute el código a continuación para acceder al conjunto de datos state.map<br/>\n             library(choroplethr)<br/>\n             library(choroplethrMaps)<br/>\n             data(country.map)<br/>\n             country.map<br/>\n             </code> <br/>\n    "
  }
}