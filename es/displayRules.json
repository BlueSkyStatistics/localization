{
  "title": "Reglas de visualización",
  "navigation": "Reglas de visualización",
  "rulename": "Ingrese un objeto de reglas existente",
  "dosortingchk": "Ordenar las reglas",
  "sortopt": "Opciones de ordenación",
  "sortby": "Ordenar por",
  "confchk": "Confianza",
  "liftchk": "Elevación",
  "suppchk": "Soporte",
  "sortord": "Orden de clasificación",
  "increasing": "Ascendente",
  "decreasing": "Descendente",
  "noofrules": "Número de reglas a mostrar",
  "rulecount": "",
  "fromto": "Mostrar reglas",
  "from": "Desde",
  "to": "Hasta",
  "help": {
    "title": "Reglas de visualización",
    "r_help": "ayuda(inspect, paquete='arules')",
    "body": "\n            <b>\n\t\t\tPaquete : arulesViz\n\t\t\t</b>\n\t\t\t<br/><br/>\n            <b>\n            1.  inspeccionar\n            </b>\n            <br/><br/>\n\t\t\t<b>\n\t\t\tDescripción\n\t\t\t</b>\n\t\t\t<br/><br/>\n            Proporciona la función genérica inspeccionar y métodos S4 para mostrar asociaciones y transacciones más información adicional formateada para la inspección en línea.\n            <br/><br/>\n\t\t\t<b>\n\t\t\tUso\n\t\t\t</b>\n\t\t\t<br/><br/>\n\t\t\t<code>\n            inspeccionar(x, ...)\n            </code>\n            <br/><br/>\n            <b>Argumentos</b><br/>\n            <ul>\n            <li>\n            x: un conjunto de asociaciones o transacciones o una itemMatrix.\n            </li>\n            <li>\n            ...: se pueden usar argumentos adicionales para personalizar la salida: setStart, setEnd, itemSep y ruleSep. Los elementos se imprimen solo uno por línea en caso de que las líneas de salida se vuelvan muy largas. Esto también se puede controlar directamente usando linebreak.\n            </li>\n            </ul>\n            <br/><br/>\n\n            <b>\n            2. ordenar\n            </b>\n            <br/><br/>\n\n\t\t\t<b>\n\t\t\tDescripción\n\t\t\t</b>\n\t\t\t<br/><br/>\n            Proporciona el método ordenar para ordenar elementos en la clase asociaciones (por ejemplo, conjuntos de ítems o reglas) de acuerdo con el valor de las medidas almacenadas en el slot de calidad de la asociación (por ejemplo, soporte).\n            <br/><br/>\n\t\t\t<b>\n\t\t\tUso\n\t\t\t</b>\n\t\t\t<br/><br/>\n\t\t\t<code>\n            ## Método S4 para la firma 'asociaciones'\n            arules::ordenar(x, decreciente = TRUE, na.último = NA, \n            por = \"soporte\", orden = FALSE, ...)\n            </code>\n            <br/><br/>\n\t\t\t<code>\n            ## Método S4 para la firma 'asociaciones'\n            cabeza(x, n = 6L, por = NULL, decreciente = TRUE, ...)\n            </code>\n            <br/><br/>\n\t\t\t<code>\n            ## Método S4 para la firma 'asociaciones'\n            cola(x, n = 6L, por = NULL, decreciente = TRUE, ...)\n            </code>\n            <br/><br/>                        \n            <b>Argumentos</b><br/>\n            <ul>\n            <li>\n            x: un objeto que se va a ordenar.\n            </li>\n            <li>\n            decreciente: un lógico. ¿Debería la ordenación ser ascendente o descendente? (el valor predeterminado es descendente)\n            </li>\n            <li>\n            na.último: na.último no es compatible con asociaciones. Los NAs siempre se colocan al final.\n            </li>\n            <li>\n            por: una cadena de caracteres que especifica la medida de calidad almacenada en x que se utilizará para ordenar x. Si se especifica un vector de cadenas de caracteres, entonces las cadenas adicionales se utilizan para ordenar x en caso de empates.\n            </li>\n            <li>\n            orden: ¿debería devolverse un vector de orden en lugar de las asociaciones ordenadas?\n            </li>\n            <li>\n            n: un solo entero que indica el número de asociaciones devueltas.\n            </li>\n            <li>\n            ... : Se ignoran otros argumentos.\n            </li>                                    \n            </ul>\n            <br/><br/>     \n            <b> \n            Detalles\n            </b> \n            <br/>\n            ordenar es relativamente lento para grandes conjuntos de asociaciones, ya que tiene que copiar y reorganizar una gran estructura de datos. Tenga en cuenta que ordenar crea una segunda copia del conjunto de asociaciones, lo que puede ser lento y consumir mucha memoria para grandes conjuntos. Con orden = TRUE, se devuelve un vector entero con el orden en lugar de las asociaciones reordenadas.\n            Si solo se necesitan las n principales asociaciones, entonces cabeza usando por funciona más rápido que llamar a ordenar y luego cabeza, ya que lo hace sin copiar y reorganizar todos los datos. cola funciona de la misma manera.\n            <br/><br/>  \n            <b> \n            Valor\n            </b> \n            <br/>\n            Un objeto de la misma clase que x.                  \n    "
  }
}