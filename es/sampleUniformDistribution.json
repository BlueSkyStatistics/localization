{
  "title": "Muestra de Distribución Uniforme",
  "navigation": "Muestra de Distribución Uniforme",
  "entrdsname": "Ingrese el nombre del conjunto de datos",
  "min": "Mínimo",
  "max": "Máximo",
  "lblnoofsamples": "Número de muestras (filas)",
  "lblnoofobsv": "Número de observaciones (columnas)",
  "lblseed": "Semilla",
  "lblAddtoDS": "Agregar al conjunto de datos",
  "chklbl1": "Medias de muestra",
  "chklbl2": "Sumas de muestra",
  "chklbl3": "Desviaciones estándar de muestra",
  "help": {
    "title": "Muestra de Distribución Uniforme",
    "r_help": "help(runif, package=stats)",
    "body": "\n            ​​\n            <b>Descripción</b>\n            <br/>\n            Estas funciones proporcionan información sobre la distribución uniforme en el intervalo de min a max. dunif da la densidad, punif da la función de distribución, qunif da la función cuantil y runif genera desviaciones aleatorias.\n            <br/>\n            <b>Uso</b>\n            <br/>\n            <code>\n                dunif(x, min = 0, max = 1, log = FALSE)\n                <br/>\n                punif(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qunif(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                runif(n, min = 0, max = 1)\n                <br/>\n            </code>\n            <br/>\n            <b>Argumentos</b>\n            <br/>\n            <ul>\n                <li>x, q : vector de cuantiles.</li>\n                \n                \n                <li>p : vector de probabilidades.</li>\n                \n                \n                <li>n : número de observaciones. Si length(n) > 1, se toma la longitud como la cantidad requerida.</li>\n                \n                \n                <li>min, max : límites inferior y superior de la distribución. Deben ser finitos.</li>\n                \n                \n                <li>log, log.p : lógico; si es TRUE, las probabilidades p se dan como log(p).</li>\n                \n                \n                <li>lower.tail : lógico; si es TRUE (por defecto), las probabilidades son P[X ≤ x], de lo contrario, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Detalles</b>\n            <br/>\n            Si min o max no están especificados, asumen los valores predeterminados de 0 y 1 respectivamente.\n            <br/>\n            La distribución uniforme tiene densidad\n            <br/>\n            <code>f(x) = 1/(max-min)</code>\n            <br/>\n            para min ≤ x ≤ max.\n            <br/>\n            Para el caso de u := min == max, se asume el caso límite de X == u, aunque no hay densidad en ese caso y dunif devolverá NaN (la condición de error).\n            <br/>\n            runif no generará ninguno de los valores extremos a menos que max = min o max-min sea pequeño en comparación con min, y en particular no para los argumentos predeterminados.\n            <br/>\n            <br/><b>Valor</b>\n            <br/>\n            dunif da la densidad, punif da la función de distribución, qunif da la función cuantil, y runif genera desviaciones aleatorias.\n            <br/>\n            La longitud del resultado está determinada por n para runif, y es el máximo de las longitudes de los argumentos numéricos para las otras funciones.\n            <br/>\n            Los argumentos numéricos que no son n se reciclan a la longitud del resultado. Solo se utilizan los primeros elementos de los argumentos lógicos.\n            <br/>\n            <br/><b>Nota</b>\n            <br/>\n            Las características de salida de los generadores de números pseudoaleatorios (como la precisión y la periodicidad) varían ampliamente. Consulte .Random.seed para obtener más información sobre los algoritmos de generación de números aleatorios de R.            \n"
  }
}