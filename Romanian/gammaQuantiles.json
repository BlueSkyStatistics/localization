{
  "title": "Quantile Gamma",
  "navigation": "Quantile Gamma",
  "prob": "Introduceți probabilitățile separate prin virgulă. Exemplu: 0.3,0.2,0.5",
  "shape": "Formă",
  "scale": "Scală (rată inversă)",
  "labelSig": "Nivel de semnificație",
  "lowtail": "Coada inferioară",
  "uptail": "Coada superioară",
  "help": {
    "title": "Quantile Gamma",
    "r_help": "help(qgamma, package=stats)",
    "body": "\n            ​​\n            <b>Descriere</b>\n            <br/>\n            Densitate, funcție de distribuție, funcție quantilă și generare aleatorie pentru distribuția Gamma cu parametrii formă și scală.\n            <br/>\n            <b>Utilizare</b>\n            <br/>\n            <code>\n                dgamma(x, shape, rate = 1, scale = 1/rate, log = FALSE)\n                <br/>\n                pgamma(q, shape, rate = 1, scale = 1/rate, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qgamma(p, shape, rate = 1, scale = 1/rate, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rgamma(n, shape, rate = 1, scale = 1/rate)\n                <br/>\n            </code>\n            <br/>\n            <br/>\n            <b>Argumente</b>\n            <br/>\n            <ul>\n                <li></li>\n                <li>x, q : vector de quantile.</li>\n                \n                \n                <li>p : vector de probabilități.</li>\n                \n                \n                <li>n : numărul de observații. Dacă lungimea(n) > 1, lungimea este considerată a fi numărul necesar.</li>\n                \n                \n                <li>rate : o modalitate alternativă de a specifica scală.</li>\n                \n                \n                <li>shape, scale : parametrii de formă și scală. Trebuie să fie pozitivi, scală strict.</li>\n                \n                \n                <li>log, log.p : logic; dacă este TRUE, probabilitățile/densitățile p sunt returnate ca log(p).</li>\n                \n                \n                <li>lower.tail : logic; dacă este TRUE (implicit), probabilitățile sunt P[X ≤ x], altfel, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            Detalii\n            <br/>\n            Dacă scală este omisă, se presupune valoarea implicită de 1.\n            <br/>\n            Distribuția Gamma cu parametrii formă = a și scală = s are densitate\n            <br/>\n            <code>f(x)= 1/(s^a Gamma(a)) x^(a-1) e^-(x/s)</code>\n            <br/>\n            pentru x ≥ 0, a > 0 și s > 0. (Aici Gamma(a) este funcția implementată de gamma() din R și definită în ajutorul său. Rețineți că a = 0 corespunde distribuției triviale cu toată masa în punctul 0.)\n            <br/>\n            Media și varianta sunt <code>E(X) = a*s și Var(X) = a*s^2.</code>\n            <br/>\n            Pericolul cumulativ <code>H(t) = - log(1 - F(t))</code> este\n            <br/>\n            -pgamma(t, ..., lower = FALSE, log = TRUE)\n            <br/>\n            Rețineți că pentru valori mici ale formei (și scală moderată) o mare parte din masa distribuției Gamma este pe valori de x atât de aproape de zero încât vor fi reprezentate ca zero în aritmetica computerizată. Așadar, rgamma poate returna valori care vor fi reprezentate ca zero. (Acest lucru se va întâmpla și pentru valori foarte mari ale scalei, deoarece generarea efectivă se face pentru scală = 1.)\n            <br/>\n            <br/><b>Valoare</b>\n            <br/>\n            dgamma oferă densitatea, pgamma oferă funcția de distribuție, qgamma oferă funcția quantilă, iar rgamma generează deviate aleatoare.\n            <br/>\n            Argumentele invalide vor rezulta în valoarea de returnare NaN, cu un avertisment.\n            <br/>\n            Lungimea rezultatului este determinată de n pentru rgamma și este maximul lungimilor argumentelor numerice pentru celelalte funcții.\n            <br/>\n            Argumentele numerice, altele decât n, sunt reciclate la lungimea rezultatului. Numai primele elemente ale argumentelor logice sunt utilizate.\n            <br/>\n            <br/><b>Notă</b>\n            <br/>\n            Parametrizarea S (Becker et al, 1988) a fost prin formă și rată: S nu avea parametru de scală. Este o eroare să se furnizeze atât scală cât și rată.\n            <br/>\n            pgamma este strâns legată de funcția gamma incompletă. Așa cum este definită de Abramowitz și Stegun 6.5.1 (și de 'Numerical Recipes') aceasta este\n            <br/>\n            <code>P(a,x) = 1/Gamma(a) integral_0^x t^(a-1) exp(-t) dt</code>\n            <br/>\n            P(a, x) este pgamma(x, a). Alți autori (de exemplu Karl Pearson în tabelele sale din 1922) omit factorul de normalizare, definind funcția gamma incompletă γ(a,x) ca gamma(a,x) = integral_0^x t^(a-1) exp(-t) dt, adică, pgamma(x, a) * gamma(a). Alții folosesc funcția gamma incompletă 'superioară',\n            <br/>\n            <code>Gamma(a,x) = integral_x^Inf t^(a-1) exp(-t) dt,</code>\n            <br/>\n            care poate fi calculată prin pgamma(x, a, lower = FALSE) * gamma(a).\n            <br/>\n            Rețineți totuși că pgamma(x, a, ..) necesită în prezent a > 0, în timp ce funcția gamma incompletă este definită și pentru a negative. În acel caz, puteți folosi gamma_inc(a,x) (pentru Γ(a,x)) din pachetul gsl.\n            <br/>\n            Consultați de asemenea https://en.wikipedia.org/wiki/Incomplete_gamma_function, sau http://dlmf.nist.gov/8.2#i.            \n      "
  }
}