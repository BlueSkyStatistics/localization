{
  "title": "Stratifizierte Teilung",
  "navigation": "Stratifizierte Teilung",
  "traindataset": "Geben Sie den Namen des Trainingsdatensatzes ein",
  "testdataset": "Geben Sie den Namen des Testdatensatzes ein",
  "split": "Geben Sie den Teilungsprozentsatz ein",
  "seed": "Setze Seed",
  "dependent": "Variable zur Konstruktion stratifizierter Stichproben",
  "help": {
    "title": "Stratifizierte Teilung",
    "r_help": "help(createDataPartition, package=\"caret\")",
    "body": "\n<b>Beschreibung</b></br>\nEine Reihe von Test-/Trainingspartitionen wird mit createDataPartition erstellt, während createResample eine oder mehrere Bootstrap-Stichproben erstellt. createFolds teilt die Daten in k Gruppen, während createTimeSlices eine Kreuzvalidierungsaufteilung für Zeitreihendaten erstellt. groupKFold teilt die Daten basierend auf einem Gruppierungsfaktor.\n<br/>\n<b>Verwendung</b>\n<br/>\n<code> \ncreateDataPartition(y, times = 1, p = 0.5, list = TRUE, groups = min(5,length(y)))<br/>\ncreateFolds(y, k = 10, list = TRUE, returnTrain = FALSE)<br/>\ncreateTimeSlices(y, initialWindow, horizon = 1, fixedWindow = TRUE,skip = 0)<br/>\ngroupKFold(group, k = length(unique(group)))<br/>\n</code> <br/>\n<b>Argumente</b><br/>\n<ul>\n<li>\ny: ein Vektor von Ergebnissen. Für createTimeSlices sollten diese in chronologischer Reihenfolge sein.\n</li>\n<li>\ntimes: die Anzahl der zu erstellenden Partitionen\n</li>\n<li>\np: der Prozentsatz der Daten, der für das Training verwendet wird\n</li>\n<li>\nlist: logisch - sollten die Ergebnisse in einer Liste (TRUE) oder in einer Matrix mit der Anzahl der Zeilen gleich floor(p * length(y)) und times Spalten sein.\n</li>\n<li>\ngroups: für numerisches y, die Anzahl der Brüche in den Quantilen (siehe unten)\n</li>\n<li>\nk: eine ganze Zahl für die Anzahl der Falten.\n</li>\n<li>\nreturnTrain: ein logisches. Wenn wahr, sind die zurückgegebenen Werte die Stichprobenpositionen, die den während des Trainings verwendeten Daten entsprechen. Dieses Argument funktioniert nur in Verbindung mit list = TRUE\n</li>\n<li>\ninitialWindow: Die anfängliche Anzahl aufeinanderfolgender Werte in jeder Trainingsstichprobe\n</li>\n<li>\nhorizon: die Anzahl aufeinanderfolgender Werte in der Teststichprobe\n</li>\n<li>\nfixedWindow: logisch, wenn FALSCH, beginnen alle Trainingsstichproben bei 1\n</li>\n<li>\nskip: ganzzahlig, wie viele (falls vorhanden) Resamples übersprungen werden sollen, um die Gesamtmenge zu reduzieren\n</li>\n<li>\ngroup: ein Vektor von Gruppen, dessen Länge der Anzahl der Zeilen im Gesamtdatensatz entspricht.\n</li>\n</ul>\n<b>Details</b></br>\nFür Bootstrap-Stichproben wird einfaches zufälliges Sampling verwendet.\nFür andere Datenaufteilungen erfolgt das zufällige Sampling innerhalb der Ebenen von y, wenn y ein Faktor ist, um die Klassendistributionen innerhalb der Aufteilungen auszugleichen.</br>\nFür numerisches y wird die Stichprobe in Gruppenabschnitte basierend auf Perzentilen aufgeteilt und das Sampling erfolgt innerhalb dieser Untergruppen. Für createDataPartition wird die Anzahl der Perzentilen über das Gruppenargument festgelegt. Für createFolds und createMultiFolds wird die Anzahl der Gruppen dynamisch basierend auf der Stichprobengröße und k festgelegt. Bei kleineren Stichprobengrößen führen diese beiden Funktionen möglicherweise keine stratifizierte Aufteilung durch und teilen die Daten höchstens in Quartile auf.</br>\nAußerdem können bei createDataPartition sehr kleine Klassengrößen (<= 3) die Klassen möglicherweise nicht sowohl in den Trainings- als auch in den Testdaten erscheinen.</br>\nFür mehrere k-fache Kreuzvalidierungen werden vollständig unabhängige Falten erstellt. Die Namen der Listenobjekte geben die Faltenmitgliedschaft mit dem Muster \"Foldi.Repj\" an, was den i-ten Abschnitt (von k) des j-ten Kreuzvalidierungssets (von times) bedeutet. Beachten Sie, dass diese Funktion createFolds mit list = TRUE und returnTrain = TRUE aufruft.</br>\nHyndman und Athanasopoulos (2013) diskutieren Techniken zur rollierenden Vorhersageursprung, die die Trainings- und Testsets zeitlich verschieben. createTimeSlices kann die Indizes für diese Art der Aufteilung erstellen.</br>\nFür die Gruppen-k-fache Kreuzvalidierung werden die Daten so aufgeteilt, dass keine Gruppe sowohl in den Modellierungs- als auch in den Holdout-Sets enthalten ist. Eine oder mehrere Gruppen könnten ausgeschlossen werden, abhängig vom Wert von k.</br>\n<b>Wert</b><br/>\nEine Liste oder Matrix von Zeilenpositionsganzzahlen, die den Trainingsdaten entsprechen. Für createTimeSlices werden die Unterstichproben nach dem Endindex jeder Trainingsunterstichprobe benannt.</br>\n<b>Pakete</b></br>\ncaret</br>\nklaR</br>\n<b>Hilfe</b></br>\nhelp(createDataPartition, package=\"caret\")\n        "
  }
}