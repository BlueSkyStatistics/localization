{
  "title": "Poisson-Schwanzwahrscheinlichkeiten",
  "navigation": "Poisson-Schwanzwahrscheinlichkeiten",
  "varvals": "Geben Sie die Variablenwerte durch ein Komma getrennt ein. Beispiel: 3,0.5",
  "lambda": "Mittelwert",
  "labelSig": "Signifikanzniveau",
  "lowtail": "Unterer Schwanz",
  "uptail": "Oberer Schwanz",
  "help": {
    "title": "Poisson-Schwanzwahrscheinlichkeiten",
    "r_help": "hilfe(ppois, paket=stats)",
    "body": "\n\n            <b>Beschreibung</b>\n            <br/>\n            Dichte, Verteilungsfunktion, Quantilsfunktion und Zufallszahlengenerierung für die Poisson-Verteilung mit dem Parameter lambda.\n            <br/>\n            <b>Verwendung</b>\n            <br/>\n            <code>\n                dpois(x, lambda, log = FALSE)\n                <br/>\n                ppois(q, lambda, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qpois(p, lambda, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rpois(n, lambda)\n                <br/>\n            </code>\n            <br/>\n            <b>Argumente</b>\n            <br/>\n            <ul>\n                <li>x : Vektor von (nicht-negativen ganzen) Quantilen.</li>\n                \n                \n                <li>q : Vektor von Quantilen.</li>\n                \n                \n                <li>p : Vektor von Wahrscheinlichkeiten.</li>\n                \n                \n                <li>n : Anzahl der zurückzugebenden Zufallswerte.</li>\n                \n                \n                <li>lambda : Vektor von (nicht-negativen) Mittelwerten.</li>\n                \n                \n                <li>log, log.p : logisch; wenn TRUE, werden die Wahrscheinlichkeiten p als log(p) angegeben.</li>\n                \n                \n                <li>lower.tail : logisch; wenn TRUE (Standard), sind die Wahrscheinlichkeiten P[X ≤ x], andernfalls P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Details</b>\n            <br/>\n            Die Poisson-Verteilung hat die Dichte\n            <br/>\n            <code>p(x) = λ^x exp(-λ)/x!</code>\n            <br/>\n            für x = 0, 1, 2, … . Der Mittelwert und die Varianz sind E(X) = Var(X) = λ.\n            <br/>\n            Beachten Sie, dass λ = 0 wirklich ein Grenzfall ist (0^0 = 1 setzen), was zu einer Punktmasse bei 0 führt, siehe auch das Beispiel.\n            <br/>\n            Wenn ein Element von x keine ganze Zahl ist, ist das Ergebnis von dpois null, mit einer Warnung. p(x) wird mit Loader's Algorithmus berechnet, siehe die Referenz in dbinom.\n            <br/>\n            Das Quantil ist rechts kontinuierlich: qpois(p, lambda) ist die kleinste ganze Zahl x, so dass P(X ≤ x) ≥ p.\n            <br/>\n            Wenn lower.tail = FALSE gesetzt ist, können viel genauere Ergebnisse erzielt werden, wenn der Standardwert lower.tail = TRUE 1 zurückgeben würde, siehe das Beispiel unten.\n            <br/>\n            <br/><b>Wert</b>\n            <br/>\n            dpois gibt die (log) Dichte zurück, ppois gibt die (log) Verteilungsfunktion zurück, qpois gibt die Quantilsfunktion zurück, und rpois generiert Zufallsabweichungen.\n            <br/>\n            Ungültige lambda führen zu einem Rückgabewert NaN, mit einer Warnung.\n            <br/>\n            Die Länge des Ergebnisses wird durch n für rpois bestimmt und ist das Maximum der Längen der numerischen Argumente für die anderen Funktionen.\n            <br/>\n            Die numerischen Argumente, die nicht n sind, werden auf die Länge des Ergebnisses wiederverwendet. Nur die ersten Elemente der logischen Argumente werden verwendet.            \n      "
  }
}