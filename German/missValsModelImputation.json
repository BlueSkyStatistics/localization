{
  "title": "Fehlende Werte imputieren (Mit einem Modell)",
  "navigation": "Modellimputation",
  "depVar": "Wählen Sie eine Variable aus, für die fehlende Werte imputiert werden sollen (Dies ist die abhängige Variable im Modell)",
  "label1": "Bewegen Sie die unabhängigen Variablen in die Formel-Builder-Steuerung, um eine Formel zu erstellen. Fahren Sie mit der Maus über die Symbole im Formel-Builder für Hilfe",
  "formula": "Das Bewegen mehrerer Variablen mit der Schaltfläche 'Bewegen' verwendet einen Standardtrennzeichen von +, was unabhängige Variablen ohne Interaktionstermine anzeigt. Klicken Sie auf das Symbol, um ein Modell mit Interaktionstermen zu erstellen.",
  "independent": "Unabhängige Variablen (eine oder mehrere)",
  "modeltype": "Wählen Sie ein Modell zur Imputation fehlender Werte",
  "modelParam": "Modellparameter angeben",
  "help": {
    "title": "Fehlende Werte imputieren (Mit einem Modell)",
    "r_help": "help(impute_lm, package='simputation')",
    "body": "\n            <b>Beschreibung</b></br>\n            Zuerst konstruieren wir ein Modell, wobei die Variable, für die Werte imputiert werden sollen, als abhängige Variable dient.</br> \n            Dann verwenden wir das konstruierte Modell, um Werte vorherzusagen und fehlende Werte in der abhängigen Variable durch die vorhergesagten Werte zu ersetzen.</br>\n            Das Paket simputation bietet eine Reihe von gängigen Methoden zur einfachen Imputation, jede mit einer ähnlichen einfachen\n            Schnittstelle. Die folgende Imputationsmethodik wird unterstützt.</br>\n            • lineare Regression</br>\n            • robuste lineare Regression</br>\n            • Ridge/Elasticnet/Lasso-Regression</br>\n            • CART-Modelle (Entscheidungsbäume)</br>\n            • Zufallswald</br>\n            • Multivariate Imputation</br>\n            • Imputation basierend auf dem Erwartungs-Maximierungs-Algorithmus</br>\n            • missForest (iterative Zufallswaldimputation)</br>\n            • Spenderimputation (einschließlich verschiedener Spenderpool-Spezifikationen)</br>\n            • k-nächste Nachbarn (basierend auf Gowers Distanz)</br>\n            • sequenzielle Hotdeck (LOCF, NOCB)</br>\n            • zufälliges Hotdeck</br>\n            • Vorhersage-Mittelabgleich</br>\n            • Modellbasiert (optional [nicht]parametrischen zufälligen Residuen hinzufügen)</br>\n            • Andere</br>\n            (gruppenweise) Medianimputation (optionale zufällige Residuen)</br>\n            Proxy-Imputation: Kopieren Sie eine andere Variable oder verwenden Sie eine einfache Transformation, um imputierte Werte zu berechnen.</br>\n            <br/>\n            <b>Verwendung</b>\n            <br/>\n            Ein Aufruf an eine Imputationsfunktion hat die folgende Struktur.</br>\n            impute_ModelType(data, formula, [modell-spezifische Optionen])</br>\n            Die Ausgabe ähnelt dem Datenargument, mit dem Unterschied, dass leere Werte imputiert werden (wo möglich) unter Verwendung des angegebenen Modells.</br>\n            Das Formelargument gibt die zu imputierenden Variablen, die Modellspezifikation für <model> und möglicherweise die Gruppierung des Datensatzes an. </br>\n            Die Struktur eines Formelobjekts ist wie folgt:</br>\n            VARIABLE_TO_IMPUTE_MISSINGVALUES ~ MODEL_SPECIFICATION [ | GROUPING ]</br>\n            wobei der Teil zwischen [] optional ist.</br></br>\n            Siehe Beispiele unten und den Hilfebereich, um Details zur Konstruktion einer Formel zu sehen. </br>\n            In den Beispielen unten ist dependent_var die Variable, die imputiert werden soll.</br>\n            Beispiel 1 (keine Interaktionstermine): dependent_var ~ independent_var1 + independent_var2...</br>\n            Beispiel 2 (mit Interaktionstermen): dependent_var ~ independent_var1 + independent_var2 + independent_var1:independent_var2</br></br>\n            <code> \n            #Für lineare Regression</br>\n            dataset_name <- impute_lm(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            # Für robuste lineare Regression unter Verwendung des Modells M-Schätzung im Paket MASS</br>\n            dataset_name <- impute_rlm(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ## Für Ridge-Regression unter Verwendung des Modells Ridge/Elasticnet/Lasso im Paket glmnet</br>\n            dataset_name <- impute_en(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ## Für CART (Entscheidungsbäume) unter Verwendung des Modells CART im Paket rpart</br>\n            dataset_name <- impute_cart(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ## Für RandomForest unter Verwendung des Modells Zufallswald im Paket randomForest</br>\n            dataset_name <- impute_rf(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ##Für multivariate Imputation basierend auf dem Erwartungs-Maximierungs-Algorithmus im Paket norm</br>\n            dataset_name <- impute_em(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            ##Für multivariate Imputation basierend auf missForest (=iterative Zufallswaldimputation) im Paket missForest</br>\n            dataset_name <- impute_mf(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ##Spenderimputation (einschließlich verschiedener Spenderpool-Spezifikationen), k-nächste Nachbarn (basierend auf Gowers Distanz) im VIM-Paket</br>\n            dataset_name <- impute_knn(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ##Spenderimputation (einschließlich verschiedener Spenderpool-Spezifikationen), sequenzielle Hotdeck (LOCF, NOCB) im VIM-Paket</br>\n            dataset_name <- impute_shd(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br></br>\n            \n            ##Spenderimputation (einschließlich verschiedener Spenderpool-Spezifikationen), zufälliges Hotdeck im VIM-Paket</br>\n            dataset_name <- impute_rhd(dataset_name, dependent_var ~ independent_var1 + independent_var2...)</br>\n            </code> <br/>\n            <b>Paket</b></br>\n            simputation und andere Pakete basierend auf der gewählten Imputationsmethode. Siehe oben</br>\n            <b>Hilfe</b></br>\n            Für detaillierte Hilfe klicken Sie auf das R-Symbol in der oberen rechten Ecke dieses Dialogüberlagerung oder führen Sie den folgenden Befehl aus help(impute_lm, package='simputation'), indem Sie einen R-Code-Chunk erstellen, indem Sie + im Ausgabefenster klicken</br>\n            <b>Nützliche URLs</b></br>\n            https://cran.r-project.org/web/packages/simputation/vignettes/intro.html\n            "
  }
}