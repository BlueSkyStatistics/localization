{
  "title": "규칙 생성, 다중 행 형식",
  "navigation": "규칙 생성, 다중 행 형식",
  "src": "열",
  "idcolname": "거래 ID 열 이름",
  "itemcolname": "거래 항목 열 이름",
  "prunerules": "규칙 다듬기",
  "graphs": "시각화 표시",
  "test3": "차이 < 0",
  "txtbox2": "영가설 (mu)",
  "txtbox1": "신뢰 수준",
  "label1": "규칙 생성",
  "rulesobj": "규칙 객체 이름",
  "rulesobjhint": "이 객체는 모든 규칙을 보유하며 다른 관련 대화 상자에서 지정할 수 있습니다. 예: 규칙 표시, 규칙 플롯",
  "support": "최소 지지 값",
  "supphint": "항목의 지지는 데이터 세트에서 해당 항목을 포함하는 거래의 비율입니다.",
  "confidence": "최소 신뢰 값",
  "confhint": "규칙의 신뢰는 규칙의 LHS에 있는 항목을 포함하는 새로운 거래에 대해 그것이 참일 가능성입니다.",
  "advoptions": "고급 옵션",
  "minlen": "왼쪽의 최소 항목 수",
  "maxlen": "왼쪽의 최대 항목 수",
  "sortopt": "정렬 옵션",
  "sortby": "정렬 기준",
  "rd1": "신뢰도",
  "rd2": "향상도",
  "rd3": "지지",
  "sortord": "정렬 순서",
  "increasing": "오름차순",
  "decreasing": "내림차순",
  "noofrules": "표시할 규칙 수",
  "rulecount": "",
  "fromto": "규칙 표시",
  "from": "부터",
  "to": "까지",
  "help": {
    "title": "규칙 생성, 다중 행 형식",
    "r_help": "help(apriori, package='arules')",
    "body": "\n            <b>\n            주의: 데이터 형식에 따라 '바구니 데이터 형식' 또는 '다중 행 거래 형식' 또는 '다변량 형식' 중 하나를 선택해야 합니다. 이러한 데이터 형식 각각에 대해 별도의 대화 상자가 제공됩니다. 자세한 내용은 아래를 참조하십시오:\n            </b>\n            <br/><br/>\n            <b>\n            바구니 데이터 형식\n            </b>\n            <br/>\n            바구니 데이터 형식에서는 단일 바구니의 모든 항목이 데이터 세트의 단일 열에 포함됩니다. 여러 항목은 쉼표(,) , 세미콜론(;) 또는 콜론(:)과 같은 단일 문자로 구분됩니다.\n            <br/>\n            <b>\n            예 1\n            </b>\n            <table style=\"border: 1px solid ; border-collapse: collapse;\">\n            <tr>\n              <th style=\"border: 1px solid ; border-collapse: collapse;\">항목</th>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item10,item20,item23,item24</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item13,item43</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item14,item32</td>\n            </tr>            \n          </table> \n\n          <br/>\n          <b>\n          예 2\n          </b>\n          <table style=\"border: 1px solid ; border-collapse: collapse;\">\n          <tr>\n            <th style=\"border: 1px solid ; border-collapse: collapse;\">식품 항목</th>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">사과,망고,맥주</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">우유,닭고기,치즈</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">사과,와인,치즈</td>\n          </tr>            \n        </table>    \n        <br/>\n        <br>\n        <b>\n        다중 행 거래 데이터 형식\n        </b>\n        <br/>\n        거래 형식에서는 단일 바구니의 모든 항목이 별도의 행으로 표현됩니다. 단일 바구니의 항목을 나타내는 모든 행은 공통 거래 ID를 포함합니다. 거래 ID는 별도의 열에 캡처됩니다.        \n        <br/>\n        <b>\n        예 1\n        </b>\n        <table style=\"border: 1px solid ; border-collapse: collapse;\">\n        <tr>\n          <th style=\"border: 1px solid ; border-collapse: collapse;\">ID</th>\n          <th style=\"border: 1px solid ; border-collapse: collapse;\">항목</th>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">빵</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">버터</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">고기</td>\n        </tr>      \n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">계란</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">치즈</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">우유</td>\n        </tr>                              \n      </table> \n      <br/>\n      따라서 바구니 1에는 빵과 버터가 포함되고 바구니 2에는 고기, 계란, 치즈 및 우유가 포함됩니다.\n\n      <br/><br/>\n      <b>\n      다변량 데이터 형식\n      </b>\n      <br/>\n      이 형식에서는 데이터 세트의 변수의 각 수준이 항목을 나타냅니다. 데이터 세트의 각 행은 바구니를 나타냅니다. 아래를 참조하십시오.\n      <br/>\n      <b>\n      예 1\n      </b>\n      <table style=\"border: 1px solid ; border-collapse: collapse;\">\n      <tr>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">제과류</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">유제품</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">고기</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">채소</th>        \n      </tr>\n      <tr>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">빵</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">우유</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">닭고기</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">토마토</td>\n      </tr>\n      <tr>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">해당 없음</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">치즈</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">해당 없음</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">양파</td>\n      </tr>\n    </table> \n    <br/>\n    규칙 다듬기 체크박스를 선택하면 규칙을 다듬을 수 있습니다. 선택하면 중복 규칙이 표시되고 중복 규칙이 제거된 다듬기 모델이 저장되고 표시됩니다. \n    <br/>\n    시각화 표시 체크박스를 클릭하면 그래프가 표시됩니다. #plot(rule1, method =\"paracoord\",control = list(reorder=TRUE))는 실행하는 데 오랜 시간이 걸릴 수 있으므로 주석 처리했습니다. 구문을 붙여넣고 명령을 수동으로 실행할 수 있습니다.\n    <br/>\n    <br/>\n    <b>\n    출력\n    </b>\n    <br/>\n    결과는 표 형식으로 표시됩니다.\n    <br/>\n    표의 열은 아래와 같습니다.\n    <br/><br/>\n    <b>LHS:</b> 이는 바구니의 항목을 나타냅니다.\n    <br/><br/>\n    <b>RHS:</b> 바구니의 항목(LHS)을 고려할 때, RHS는 구매할 가능성이 있는 단일 항목을 포함합니다.\n    <br/><br/>\n    <b>지지:</b> 지지는 데이터 세트에서 LHS의 항목을 포함하는 거래의 비율입니다.\n    <br/><br/>\n    <b>신뢰도:</b> 신뢰도는 LHS의 항목을 구매하는 고객이 RHS의 항목도 구매할 것이라는 조건부 확률입니다.\n    <br/><br/>\n    <b>향상도:</b> 누군가 LHS의 항목을 구매하면 RHS의 제품을 구매할 확률이 얼마나 증가할까요? 즉, LHS가 구매되었을 때 RHS가 구매될 확률이 얼마나 증가했는지를 나타냅니다. 향상도가 >1이면 LHS의 항목이 RHS의 항목이 거래에서 발생할 확률을 증가시켰음을 의미하고, <1이면 LHS의 항목이 RHS의 항목의 확률을 낮추며, =1이면 LHS와 RHS는 독립적입니다.\n    <br/><br/>\n    자세한 내용은 \n    <br/><br/>\n    http://infocenter.informationbuilders.com/wf80/index.jsp?topic=%2Fpubdocs%2FRStat16%2Fsource%2Ftopic49.htm\n    <br/><br/>\n    https://discourse.snowplowanalytics.com/t/market-basket-analysis-identifying-products-and-content-that-go-well-together/1132\n    <br/><br/>\n    http://www.listendata.com/2015/12/market-basket-analysis-with-r.html\n    <br/><br/>\n    http://www.salemmarafi.com/code/market-basket-analysis-with-r/\n    <br/><br/>\n\n    <b>패키지: arules</b> \n    <br/><br/>\n    <b>설명</b> \n    <br/>\n    Apriori 알고리즘을 사용하여 빈번한 항목 집합, 연관 규칙 또는 연관 하이퍼엣지를 마이닝합니다. Apriori 알고리즘은 빈번한 항목 집합에 대한 레벨별 검색을 수행합니다. 사용된 Apriori의 구현에는 일부 개선 사항(예: 접두사 트리 및 항목 정렬)이 포함됩니다.\n    <br/><br/>\n    <b>사용법</b> \n    <br/>\n    <code>\n    apriori(data, parameter = NULL, appearance = NULL, control = NULL)\n    </code>\n    <br/><br/>\n\n    <b>인수</b><br/>\n    <ul>\n    <li>\n    data: 거래 클래스의 객체 또는 거래로 변환할 수 있는 데이터 구조(예: 이진 행렬 또는 데이터 프레임).\n    </li>\n    <li>\n    parameter: APparameter 클래스의 객체 또는 명명된 목록. 기본 동작은 최소 지지 0.1, 최소 신뢰 0.8, 최대 10 항목(maxlen)으로 규칙을 마이닝하는 것입니다.\n    </li>\n    <li>\n    appearance: APappearance 클래스의 객체 또는 명명된 목록. 이 인수를 사용하면 항목 외관을 제한할 수 있습니다(규칙 템플릿 구현). 기본적으로 모든 항목은 제한 없이 나타날 수 있습니다.\n    </li>\n    <li>\n    control: APcontrol 클래스의 객체 또는 명명된 목록. 마이닝 알고리즘의 알고리즘 성능을 제어합니다(항목 정렬, 진행 보고(자세히), 등).\n    </li>\n    </ul>\n    <br/><br/>\n    <b>세부정보</b><br/>\n    C 구현을 호출하여 빈번한 항목 집합, 규칙 또는 하이퍼엣지를 마이닝합니다.\n    <br/><br/>\n\n    <b>참고</b>\n    Apriori는 RHS(결과)에 하나의 항목만 있는 규칙을 생성합니다! APparameter의 기본값에서 minlen은 1입니다. 이는 빈 선행 조건(LHS)과 같은 단일 항목이 있는 규칙이 생성됨을 의미합니다.\n    <br/><br/>\n    <code>{} => {맥주}</code>\n    <br/><br/>\n    이러한 규칙은 다른 항목이 포함되더라도 RHS의 항목이 규칙의 신뢰도(지지와 같음)로 주어진 확률로 나타날 것임을 의미합니다. 이러한 규칙을 피하려면 인수 parameter=list(minlen=2)를 사용하십시오.\n    <br/><br/>\n    <b>실행 시간 및 메모리 사용에 대한 주의:</b>\n    최소 지지가 데이터 세트에 대해 너무 낮게 선택되면 알고리즘이 매우 큰 항목 집합/규칙 세트를 생성하려고 시도합니다. 이로 인해 실행 시간이 매우 길어지고 결국 프로세스가 메모리 부족으로 종료됩니다. 이를 방지하기 위해 기본 최대 항목 집합/규칙 길이는 10개 항목으로 제한되며(maxlen=10) 부분 집합 확인 시간은 5초로 제한됩니다(maxtime=5). 출력은 \"부분 집합 확인\" 행에서 이러한 한계에 도달했는지 여부를 보여줍니다. 시간 제한은 부분 집합 크기가 증가할 때만 확인되므로 maxtime에서 지정한 것보다 훨씬 더 오랜 시간이 걸릴 수 있습니다. maxtime=0으로 설정하면 시간 제한이 비활성화됩니다.\n    <br/> \n    Control-C/Esc로 실행을 중단하는 것은 권장되지 않습니다. 메모리 정리가 방지되어 메모리 누수가 발생합니다. 또한 인터럽트는 부분 집합 크기가 증가할 때만 확인되므로 실행이 실제로 중지될 때까지 시간이 걸릴 수 있습니다.\n    <br/><br/>\n    <b>값</b><br/><br/>\n    규칙 또는 항목 집합 클래스의 객체를 반환합니다.\n    <br/>\n\t\t\t\n    "
  }
}