{
  "title": "F 분포 플롯",
  "navigation": "F 분포 플롯",
  "dfnumerator": "분자 자유도",
  "dfdenominator": "분모 자유도",
  "pdenfun": "밀도 함수 플롯",
  "pdstfun": "분포 함수 플롯",
  "lblregions": "밀도 함수 아래의 영역을 선택적으로 지정하려면",
  "xvals": "x 값",
  "quantiles": "분위수",
  "lblRegFill": "채울 영역 (하나 또는 두 개를 지정하거나 비워 두세요)",
  "lblreg1": "영역 1 :",
  "lblreg2": "영역 2 :",
  "lblregfrm": "부터",
  "lblregto": "까지",
  "lblregcol": "색상",
  "lblLegPos": "범례의 위치",
  "toprt": "오른쪽 상단",
  "toplt": "왼쪽 상단",
  "topmid": "상단 중앙",
  "help": {
    "title": "F 분포 플롯",
    "r_help": "help(qf, package=stats)",
    "body": "\n            ​​\n            <b>설명</b>\n            <br/>\n            F 분포의 밀도, 분포 함수, 분위수 함수 및 난수 생성 (df1 및 df2 자유도와 선택적 비중심 매개변수 ncp).\n            <br/>\n            <b>사용법</b>\n            <br/>\n            <code>\n                df(x, df1, df2, ncp, log = FALSE)\n                <br/>\n                pf(q, df1, df2, ncp, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qf(p, df1, df2, ncp, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rf(n, df1, df2, ncp)\n                <br/>\n            </code>\n            <br/>\n            <b>인수</b>\n            <br/>\n            <ul>\n                <li>x, q : 분위수 벡터.</li>\n                \n                \n                <li>p : 확률 벡터.</li>\n                \n                \n                <li>n : 관측치 수. 길이(n) > 1인 경우, 길이는 필요한 수로 간주됩니다.</li>\n                \n                \n                <li>df1, df2 : 자유도. Inf가 허용됩니다.</li>\n                \n                \n                <li>ncp : 비중심 매개변수. 생략하면 중심 F가 가정됩니다.</li>\n                \n                \n                <li>log, log.p : 논리적; TRUE인 경우, 확률 p는 log(p)로 제공됩니다.</li>\n                \n                \n                <li>lower.tail : 논리적; TRUE(기본값)인 경우, 확률은 P[X ≤ x], 그렇지 않으면 P[X > x]입니다.</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>세부사항</b>\n            <br/>\n            df1 = n1 및 df2 = n2 자유도를 가진 F 분포는 밀도가 있습니다.\n            <br/>\n            <code>f(x) = Γ((n1 + n2)/2) / (Γ(n1/2) Γ(n2/2)) (n1/n2)^(n1/2) x^(n1/2 - 1) (1 + (n1/n2) x)^-(n1 + n2)/2</code>\n            <br/>\n            x > 0인 경우.\n            <br/>\n            이는 n1 및 n2 독립 표준 정규 분포의 평균 제곱 비율의 분포이며, 따라서 두 개의 독립 카이제곱 변량 각각이 자유도로 나누어진 비율입니다. 정규 분포와 m개의 독립 정규 분포의 제곱 평균 제곱의 비율은 Student's t_m 분포를 가지며, t_m 변량의 제곱은 1 및 m 자유도에서 F 분포를 가집니다.\n            <br/>\n            비중심 F 분포는 다시 단위 분산의 독립 정규 분포의 평균 제곱 비율이지만, 분자에 있는 값은 0이 아닌 평균을 가질 수 있으며 ncp는 평균의 제곱합입니다. 비중심 분포에 대한 추가 세부정보는 Chisquare를 참조하십시오.\n            <br/>\n            <br/><b>값</b>\n            <br/>\n            df는 밀도를 제공하고, pf는 분포 함수를 제공하며, qf는 분위수 함수를 제공하고, rf는 난수 변량을 생성합니다.\n            <br/>\n            잘못된 인수는 NaN 반환 값과 경고를 초래합니다.\n            <br/>\n            결과의 길이는 rf의 n에 의해 결정되며, 다른 함수의 경우 수치 인수의 최대 길이입니다.\n            <br/>\n            n 이외의 수치 인수는 결과의 길이에 맞게 재활용됩니다. 논리적 인수의 첫 번째 요소만 사용됩니다.\n            <br/>\n            <br/><b>참고</b>\n            <br/>\n            ncp = 0을 제공하면 비중심 분포에 대한 알고리즘이 사용되며, 이는 ncp가 생략된 경우 사용되는 알고리즘과 동일하지 않습니다. 이는 ncp 값이 0에 매우 가까운 극단적인 경우에 일관된 동작을 제공하기 위함입니다.\n            <br/>\n            0이 아닌 ncp에 대한 코드는 주로 중간 값의 ncp에 대해 사용되도록 설계되었으며, 특히 큰 값에 대해서는 꼬리에서 매우 정확하지 않을 것입니다."
  }
}