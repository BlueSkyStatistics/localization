{
  "title": "순서형 요인/서수로 변환",
  "navigation": "순서형 요인/서수로",
  "trg": "순서형 요인/서수로 변환할 변수",
  "help": {
    "title": "순서형 요인/서수로 변환",
    "r_help": "help(factor, package=base)",
    "body": "\n<b>설명</b></br>\nfactor 함수는 순서형 요인/서수 변수를 생성하는 데 사용됩니다. 요인 수준은 순서가 있는 것으로 가정됩니다. \n<br/>\n<b>사용법</b>\n<br/>\n<code>\nfactor(x = character(),  ordered = TRUE)\n</code> <br/>\n<b>인수</b><br/>\n<ul>\n<li>\nx: 일반적으로 적은 수의 고유한 값을 가지는 데이터 벡터입니다.\n</li>\n<li>\nlevels:\tx가 가질 수 있는 값(문자열로)의 선택적 벡터입니다. 기본값은 as.character(x)가 취한 고유한 값의 집합으로, x의 증가 순서로 정렬됩니다. 이 집합은 sort(unique(x))보다 작게 지정할 수 있습니다.\n</li>\n<li>\nlabels:\t수준에 대한 선택적 문자 벡터(제외된 항목을 제거한 후 levels와 동일한 순서) 또는 길이가 1인 문자 문자열입니다.\n</li>\n<li>\nexclude: 수준 집합을 형성할 때 제외할 값의 벡터입니다. 이는 x와 동일한 유형이어야 하며, 필요시 강제 변환됩니다.\n</li>\n<li>\nordered: 수준이 주어진 순서대로 정렬되어야 하는지 여부를 결정하는 논리 플래그입니다.\n</li>\n<li>\nnmax: 수준의 수에 대한 상한; '세부정보'를 참조하십시오.\n</li>\n<li>\n...(ordered(.)): ordered 자체를 제외한 위의 항목 중 하나입니다.\n</li>\n<li>\nifany: (NA 수준을 추가하려면 사용되는 경우에만, 즉 any(is.na(x))인 경우).\n</li>\n</ul>\n<b>세부정보</b></br>\n벡터 x의 유형은 제한되지 않습니다. 단지 as.character 메서드가 있어야 하며 정렬 가능해야 합니다 (sort.list에 의해).<br/>\n순서형 요인은 클래스만 다를 뿐 요인과 다르지 않지만, 메서드와 모델 적합 함수는 두 클래스를 매우 다르게 처리합니다.<br/>\n벡터의 인코딩은 다음과 같이 이루어집니다. 먼저 exclude의 모든 값이 levels에서 제거됩니다. 만약 x[i]가 levels[j]와 같다면, 결과의 i번째 요소는 j가 됩니다. levels에서 x[i]에 대한 일치가 발견되지 않으면 (제외된 값에 대해 발생할 수 있음) 결과의 i번째 요소는 NA로 설정됩니다.<br/>\n일반적으로 결과의 속성으로 사용되는 'levels'는 exclude에서 제거한 후의 축소된 수준 집합이지만, labels를 제공함으로써 변경할 수 있습니다. 이는 수준에 대한 새로운 레이블 집합이거나, 경우에 따라 수준이 해당 문자 문자열과 시퀀스 번호가 추가된 것입니다.<br/>\nfactor(x, exclude = NULL)는 사용되지 않는 수준이 없는 한 요인에 대해 아무 작업도 수행하지 않습니다: 이 경우 축소된 수준 집합을 가진 요인이 반환됩니다. exclude가 사용되면 x와 동일한 수준 집합을 가진 요인이어야 하거나 제외할 수준에 대한 코드 집합이어야 합니다.<br/>\n요인의 코드는 NA를 포함할 수 있습니다. 숫자 x의 경우 exclude = NULL로 설정하여 NA를 추가 수준으로 만듭니다 (출력 시 <NA>로 표시됨); 기본적으로 이는 마지막 수준입니다.<br/>\nNA가 수준인 경우, 누락된 코드(누락된 수준의 코드와는 반대)를 설정하는 방법은 할당의 왼쪽에서 is.na를 사용하는 것입니다 (예: is.na(f)[i] <- TRUE; is.na 내부에서 인덱싱은 작동하지 않음). 이러한 상황에서 누락된 값은 현재 <NA>로 인쇄됩니다. 즉, NA 수준의 항목과 동일합니다.<br/>\nis.factor는 일반적입니다: 특정 객체 클래스에 대한 메서드를 작성할 수 있습니다. InternalMethods를 참조하십시오.<br/>\nlevels가 제공되지 않으면 unique가 호출됩니다. 요인은 일반적으로 수준의 수가 적기 때문에, 큰 벡터 x의 경우 nmax를 고유 값의 수에 대한 상한으로 제공하는 것이 유용합니다.<br/>\n<b>값</b><br/>\nfactor는 x의 길이와 모드 문자가 있는 \"levels\" 속성을 가진 정수 코드 집합을 가진 \"factor\" 클래스의 객체를 반환합니다. 인수 ordered가 true인 경우(또는 ordered()가 사용된 경우) 결과는 c(\"ordered\", \"factor\") 클래스가 됩니다.<br/>\nfactor를 순서형 또는 비순서형 요인에 적용하면 발생하는 수준만 있는 요인이 반환됩니다: 이를 달성하는 보다 투명한 방법은 [.factor를 참조하십시오.\nis.factor는 인수가 요인 유형인지 여부에 따라 TRUE 또는 FALSE를 반환합니다. 따라서 is.ordered는 인수가 순서형 요인일 때 TRUE를 반환하고 그렇지 않으면 FALSE를 반환합니다.<br/>\nas.factor는 인수를 요인으로 강제 변환합니다. 이는 factor의 축약형입니다.<br/>\nas.ordered(x)는 x가 순서형인 경우 x를 반환하고, 그렇지 않으면 ordered(x)를 반환합니다.<br/>\naddNA는 NA를 추가 수준으로 변환하여 요인을 수정합니다 (예: NA 값이 테이블에서 계산되도록).<br/>\n<b>패키지</b></br>\nbase</br>\n<b>도움말</b></br>\nhelp(factor, package =base)\n"
  }
}