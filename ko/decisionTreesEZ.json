{
  "title": "결정 트리",
  "navigation": "결정 트리",
  "TxtTreeName": "모델 이름 입력",
  "TreeGenChkbox": "트리가 이미 존재하는 경우 재생성하지 않기",
  "dependent": "종속 변수",
  "independent": "독립 변수(들)",
  "weights": "조사 가중치",
  "TxtMinSplit": "최소 분할",
  "minBucket": "최소 버킷",
  "TxtCP": "복잡성 매개변수",
  "maxDepth": "최대 깊이",
  "PruneTreeChkbox": "트리 가지치기",
  "rd0": "가지치기 하지 않기",
  "rd1": "최적 복잡성 매개변수 사용",
  "rd2": "복잡성 매개변수 지정",
  "TxtCPPrune": "복잡성 매개변수 입력",
  "PlotCVChkbox": "교차 검증 플롯",
  "PlotRSQRChkbox": "R-제곱 플롯",
  "OptvarPlots": "플롯",
  "OptvarPreprune": "사전 가지치기",
  "OptvarPrune": "트리 가지치기",
  "help": {
    "title": "결정 트리",
    "r_help": "help(rpart, package ='rpart')",
    "body": "\n                <b>참고</b></br>\n                종속 변수는 팩터, 서열, 문자열, 논리 및 숫자일 수 있습니다.</br>\n                독립 변수는 팩터, 서열, 문자열, 논리 및 숫자일 수 있습니다.</br></br>\n                <b>설명</b></br>\n                재귀 분할 및 회귀 트리 모델 적합\n                <br/>\n                <b>사용법</b>\n                <br/>\n                <code> \n                rpart(formula, data, weights, subset, na.action = na.rpart, method,\n                      model = FALSE, x = FALSE, y = TRUE, parms, control, cost, ...)\n                </code> <br/>\n                <b>인수</b><br/>\n                <ul>\n                <li>\n                formula: 응답이 있지만 상호작용 항이 없는 공식입니다. 데이터 프레임인 경우 모델 프레임으로 사용됩니다 (모델 프레임 참조).\n                </li>\n                <li>\n                data: 공식에서 명명된 변수를 해석할 데이터 프레임입니다.\n                </li>\n                <li>\n                weights: 선택적 사례 가중치입니다.\n                </li>\n                <li>\n                subset: 데이터의 행 중 일부만 적합에 사용해야 한다고 말하는 선택적 표현식입니다.\n                </li>\n                <li>\n                na.action: 기본 동작은 y가 누락된 모든 관측치를 삭제하지만, 하나 이상의 예측 변수가 누락된 관측치는 유지합니다.\n                </li>\n                <li>\n                method: \"anova\", \"poisson\", \"class\" 또는 \"exp\" 중 하나입니다. 방법이 누락된 경우 루틴은 지능적으로 추측하려고 합니다. y가 생존 객체인 경우 method = \"exp\"로 가정하고, y가 2개의 열을 가진 경우 method = \"poisson\"으로 가정하며, y가 팩터인 경우 method = \"class\"로 가정하고, 그렇지 않으면 method = \"anova\"로 가정합니다. 특히 향후 함수에 더 많은 기준이 추가될 수 있으므로 방법을 직접 지정하는 것이 가장 현명합니다.\n                또는 method는 init, split 및 eval이라는 이름의 함수 목록일 수 있습니다. 예제는 소스의 'tests/usersplits.R' 파일과 '사용자 작성 분할 함수'의 비네트에서 제공됩니다.\n                </li>\n                <li>\n                model: 논리적일 경우: 결과에 모델 프레임의 복사본을 유지합니까? 모델에 대한 입력 값이 모델 프레임(이전 rpart 함수 호출에서 온 것일 가능성이 높음)인 경우 이 프레임이 사용되며 새 데이터를 구성하지 않습니다.\n                </li>\n                <li>\n                x: 결과에 x 행렬의 복사본을 유지합니다.\n                </li>\n                <li>\n                y: 결과에 종속 변수의 복사본을 유지합니다. 누락된 경우 모델이 제공되면 기본값은 FALSE입니다.\n                </li>\n                <li>\n                parms: 분할 함수에 대한 선택적 매개변수입니다.<br/>\n                Anova 분할에는 매개변수가 없습니다.<br/>\n                Poisson 분할에는 단일 매개변수, 즉 비율의 사전 분포의 변동 계수가 있습니다. 기본값은 1입니다.<br/>\n                Exponential 분할은 Poisson과 동일한 매개변수를 가집니다.<br/>\n                분류 분할의 경우 목록에는 다음이 포함될 수 있습니다: 사전 확률 벡터(구성 요소 사전), 손실 행렬(구성 요소 손실) 또는 분할 지수(구성 요소 분할). 사전은 양수여야 하며 합계는 1이어야 합니다. 손실 행렬은 대각선에 0이 있어야 하며 비대각선 요소는 양수여야 합니다. 분할 지수는 지니 또는 정보일 수 있습니다. 기본 사전은 데이터 수에 비례하며, 손실은 기본적으로 1이며, 분할은 기본적으로 지니입니다.<br/>\n                </li>\n                <li>\n                control: rpart 알고리즘의 세부 사항을 제어하는 옵션 목록입니다. rpart.control을 참조하십시오.\n                </li>\n                <li>\n                cost: 모델의 각 변수에 대한 비음수 비용 벡터입니다. 기본값은 모든 변수에 대해 1입니다. 이는 분할을 고려할 때 적용될 스케일링으로, 변수를 기준으로 분할의 개선은 해당 비용으로 나누어져 어떤 분할을 선택할지 결정합니다.\n                </li>\n                <li>\n                ...: rpart.control에 대한 인수도 rpart 호출에서 지정할 수 있습니다. 유효한 인수 목록과 대조하여 확인됩니다.\n                </li>\n                </ul>\n                <b>세부정보</b></br>\n                이는 주로 대체 변수를 처리하는 방식에서 tree 함수와 다릅니다. 대부분의 세부 사항은 Breiman et. al (1984)를 상당히 밀접하게 따릅니다. R 패키지 tree는 tree의 재구현을 제공합니다.\n                <b>값</b></br>\n                rpart 클래스의 객체입니다. rpart.object를 참조하십시오.</br>\n                <b>참고문헌</b></br>\n                Breiman L., Friedman J. H., Olshen R. A., and Stone, C. J. (1984) 분류 및 회귀 트리. Wadsworth.</br>\n                <b>참조</b></br>\n                rpart.control, rpart.object, summary.rpart, print.rpart</br>\n                <b>예제</b></br>\n                fit <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis)</br>\n                fit2 <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis,\n                              parms = list(prior = c(.65,.35), split = \"information\"))</br>\n                fit3 <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis,\n                              control = rpart.control(cp = 0.05))</br>\n                par(mfrow = c(1,2), xpd = NA) # 그렇지 않으면 일부 장치에서 텍스트가 잘립니다.</br>\n                plot(fit)</br>\n                text(fit, use.n = TRUE)</br>\n                plot(fit2)</br>\n                text(fit2, use.n = TRUE)</br>\n                <b>패키지</b></br>\n                rpart;rpart.plot;partykit</br>\n                <b>도움말</b></br>\n                help(rpart, package ='rpart')</br></br>\n                <b>설명</b></br>\n                Rpart 적합 제어. rpart 적합의 측면을 제어하는 다양한 매개변수.\n                <br/>\n                <b>사용법</b>\n                <br/>\n                <code> \n                rpart.control(minsplit = 20, minbucket = round(minsplit/3), cp = 0.01, \n                              maxcompete = 4, maxsurrogate = 5, usesurrogate = 2, xval = 10,\n                              surrogatestyle = 0, maxdepth = 30, ...)\n                </code> <br/>\n                <b>인수</b><br/>\n                <ul>\n                <li>\n                minsplit: 분할을 시도하기 위해 노드에 존재해야 하는 최소 관측 수입니다.\n                </li>\n                <li>\n                minbucket: 모든 단말 <leaf> 노드의 최소 관측 수입니다. minbucket 또는 minsplit 중 하나만 지정된 경우, 코드는 minsplit을 minbucket*3으로 또는 minbucket을 minsplit/3으로 설정합니다.\n                </li>\n                <li>\n                cp: 복잡성 매개변수입니다. 전체 적합의 부족을 cp의 계수로 감소시키지 않는 분할은 시도되지 않습니다. 예를 들어, anova 분할의 경우, 이는 각 단계에서 전체 R-제곱이 cp만큼 증가해야 함을 의미합니다. 이 매개변수의 주요 역할은 가치가 없는 분할을 가지치기하여 컴퓨팅 시간을 절약하는 것입니다. 본질적으로 사용자는 프로그램에 cp로 적합을 개선하지 않는 분할은 교차 검증에 의해 가지치기될 가능성이 높으므로 프로그램이 이를 추구할 필요가 없다고 알립니다.\n                </li>\n                <li>\n                maxcompete: 출력에 유지되는 경쟁 분할의 수입니다. 어떤 분할이 선택되었는지뿐만 아니라 어떤 변수가 두 번째, 세 번째로 선택되었는지 아는 것이 유용합니다.\n                </li>\n                <li>\n                maxsurrogate: 출력에 유지되는 대체 분할의 수입니다. 이것이 0으로 설정되면 계산 시간이 줄어들며, 대체 분할 검색에 약 절반의 계산 시간이 사용됩니다.\n                </li>\n                <li>\n                usesurrogate: 분할 과정에서 대체 변수를 사용하는 방법입니다. 0은 표시만 의미합니다; 기본 분할 규칙에 대한 누락된 값이 있는 관측치는 트리 아래로 더 이상 전송되지 않습니다. 1은 기본 변수를 누락한 피험자를 분할하기 위해 대체 변수를 순서대로 사용합니다; 모든 대체 변수가 누락된 경우 관측치는 분할되지 않습니다. 값 2는 모든 대체 변수가 누락된 경우 관측치를 다수 방향으로 전송합니다. 값 0은 tree의 동작에 해당하며, 2는 Breiman et.al (1984)의 권장 사항에 해당합니다.\n                </li>\n                <li>\n                xval: 교차 검증의 수입니다.\n                </li>\n                <li>\n                surrogatestyle: 최상의 대체 변수를 선택하는 방법을 제어합니다. 0(기본값)으로 설정하면 프로그램은 잠재적 대체 변수에 대한 올바른 분류의 총 수를 사용하고, 1로 설정하면 대체 변수의 누락되지 않은 값에 대해 계산된 올바른 비율을 사용합니다. 첫 번째 옵션은 누락된 값이 많은 공변량에 대해 더 심각하게 패널티를 부과합니다.\n                </li>\n                <li>\n                maxdepth: 최종 트리의 모든 노드의 최대 깊이를 설정합니다. 루트 노드는 깊이 0으로 계산됩니다. 30보다 큰 값은 32비트 머신에서 의미 없는 결과를 제공합니다.\n                </li>\n                <li>\n                ...: 다른 인수를 처리합니다.\n                </li>\n                </ul>\n                <b>값</b></br>\n                옵션을 포함하는 목록입니다.\n                      "
  }
}