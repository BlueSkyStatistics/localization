{
  "title": "데이터셋 비교",
  "navigation": "데이터셋 비교",
  "in1label": "첫 번째 데이터셋 선택",
  "in2label": "두 번째 데이터셋 선택",
  "defcomplabel": "기본적으로 비교는 행별로 수행됩니다. 더 많은 옵션은 ID 옵션을 참조하세요.",
  "numtolcontrolslabel": "수치 변수 허용 오차",
  "numabsolutelabel": "부호 없는 수치 차이",
  "numpercentlabel": "부호 없는 백분율 차이",
  "numtolvallabel": "차이의 최대값 (백분율의 경우 0-1이어야 함)",
  "intasnumlabel": "정수 변수를 비교에서 수치 변수로 취급",
  "facttolcontrolslabel": "팩터 변수 허용 오차",
  "factnonelabel": "기본 레벨과 레이블 모두 비교",
  "factlevelslabel": "기본 레벨만 비교",
  "factlabelslabel": "기본 레이블만 비교",
  "factascharlabel": "팩터 변수를 비교에서 문자 변수로 취급",
  "chartolcontrolslabel": "문자 변수 허용 오차",
  "charnonelabel": "텍스트를 있는 그대로 취급",
  "charcaselabel": "대소문자 차이 무시",
  "chartrimlabel": "앞뒤 공백 차이 무시",
  "charbothlabel": "대소문자와 공백 차이 모두 무시",
  "varnametolcontrolslabel": "변수 이름 허용 오차",
  "varnamenonelabel": "변수 이름을 있는 그대로 취급",
  "varnamedotslabel": "변수 이름에서 점, 밑줄 및 공백을 동등하게 취급",
  "varnamecaselabel": "변수 이름에서 대소문자 무시",
  "varnamebothlabel": "변수 이름에서 대소문자 및 점, 밑줄, 공백을 동등하게 취급",
  "idoptionslabel": "ID 옵션",
  "bylabel": "병합할 공통 열 이름이 있는 경우, 열 이름을 따옴표로 묶어 쉼표로 구분하여 입력하세요 (예: 'country', 'region')",
  "bydifflabel": "병합이 수행되는 열 이름이 각 데이터셋에서 다를 경우",
  "byxlabel": "병합을 위한 첫 번째 데이터셋의 열 이름을 따옴표로 묶어 쉼표로 구분하여 입력하세요 (예: 'nations', 'location')",
  "byylabel": "병합을 위한 두 번째 데이터셋의 열 이름을 따옴표로 묶어 쉼표로 구분하여 입력하세요 (예: 'country', 'location')",
  "help": {
    "title": "데이터셋 비교",
    "r_help": "help(comparedf, package ='arsenal')",
    "body": "\n두 개의 데이터셋을 비교하고 그 사이의 차이를 보고합니다. SAS의 PROC COMPARE 절차와 유사합니다.\n<br/><br/><br/>\n<b>수치 변수 허용 오차 옵션</b>\n<br/><br/>\n<b>부호 없는 수치 차이 (기본값)</b>\n<br/>\n두 값이 다른지 여부를 절대값 차이를 취하여 최대 차이 값보다 큰지 테스트하여 평가합니다.\n<br/>\n<b>예:</b> age = 18.5 vs. age = 18.8\n<br/>\ndifference = | 18.5 - 18.8 | = | -0.3 | = 0.3\n<br/><br/>\n<b>부호 없는 백분율 차이</b>\n<br/>\n두 값이 다른지 여부를 백분율 차이의 절대값을 취하여 최대 차이 값보다 큰지 테스트하여 평가합니다.\n<br/>\n<b>예:</b> age = 18.5 vs. age = 18.8\n<br/>\ndifference = | 18.5 - 18.8 | / 18.8 = | -0.3 | / 18.8 = 0.3 / 18.8 = 0.0160\n<br/><br/>\n<b>차이의 최대값 (기본값은 비어 있음)</b>\n<br/>\n비어 있으면 값은 동일해야 합니다 (시스템에서 최선의 감지). 그렇지 않으면 차이가 충분히 크다고 간주되는 0보다 큰 값을 입력하세요.\n<br/>\n<b>예 1 (수치 차이):</b> age = 18.5 vs. age = 18.8 및 최대값 = 0.2\n<br/>\ndifference = | 18.5 - 18.8 | = | -0.3 | = 0.3 이므로 0.3 > 0.2, 이는 다르다고 표시됩니다.\n<br/><br/>\n<b>예 2 (수치 차이):</b> age = 18.5 vs. age = 18.6 및 최대값 = 0.2\n<br/>\ndifference = | 18.5 - 18.6 | = | -0.1 | = 0.1 이므로 0.1 < 0.2, 이는 다르지 않다고 표시됩니다.\n<br/><br/>\n<b>예 1 (백분율 차이):</b> age = 18.5 vs. age = 18.8 및 최대값 = 0.01\n<br/>\ndifference = | 18.5 - 18.8 | / 18.8 = | -0.3 | / 18.8 = 0.3 / 18.8 = 0.0160 이므로 0.016 > 0.01, 이는 다르다고 표시됩니다.\n<br/><br/>\n<b>예 2 (백분율 차이):</b> age = 18.5 vs. age = 18.8 및 최대값 = 0.01\n<br/>\ndifference = | 18.5 - 18.6 | / 18.8 = | -0.1 | / 18.8 = 0.1 / 18.8 = 0.0005 이므로 0.0005 < 0.01, 이는 다르지 않다고 표시됩니다.\n<br/><br/>\n<b>정수 변수를 수치 변수로 취급하여 비교</b>\n<br/>\n정수 클래스의 변수를 수치 클래스의 변수와 비교해야 합니까? 외부 소스(예: Excel)에서 데이터를 읽어올 때 서로 다른 클래스의 변수가 발생할 수 있습니다.\n<br/>\n<b>예:</b> age (정수) = c(18, 33, 45) vs. age (수치) = c(18.6, 33.4, 45.1)\n<br/>\n이 두 변수의 값을 데이터셋 간에 비교하려면 이 상자를 체크하세요. 기본적으로 시스템은 동일한 클래스의 수치 변수만 비교합니다.\n<br/><br/><br/>\n<b>팩터 변수 허용 오차 옵션</b>\n<br/><br/>\n<b>기본 레벨과 레이블 모두 비교 (기본값)</b>\n<br/>\n변수 간에 저장된 값(1,2,3)과 레이블(경미함, 중간, 심각함)을 모두 비교합니다.\n<br/>\n<b>예 1:</b> disease (1 = 경미함, 2 = 중간, 3 = 심각함) vs. disease (1 = 경미함, 2 = 심각함)\n<br/>\n이 두 변수는 1번째 변수에서 2 = 중간이지만 2번째 변수에서 2 = 심각함이므로 다르다고 간주됩니다.\n<br/><br/>\n<b>예 2:</b> disease (1 = 경미함, 2 = 중간, 3 = 심각함) vs. disease (1 = 경미함, 2 = 중간, 3 = sev)\n<br/>\n이 두 변수는 1번째 변수에서 3 = 심각함이지만 2번째 변수에서 3 = sev이므로 다르다고 간주됩니다.\n<br/><br/>\n<b>기본 레벨만 비교</b>\n<br/>\n팩터 변수 간에 기본 레벨(1,2,3)만 비교합니다.\n<br/>\n<b>예 1:</b> disease (1 = 경미함, 2 = 중간, 3 = 심각함) vs. disease (1 = 경미함, 2 = 심각함)\n<br/>\n이 두 변수는 1번째 변수의 기본 값 1,2,3이 2번째 변수의 값 1,2와 동일하므로 다르지 않다고 간주됩니다.\n<br/><br/>\n<b>예 2:</b> disease (1 = 경미함, 2 = 중간, 3 = 심각함) vs. disease (1 = 경미함, 2 = 중간, 3 = sev)\n<br/>\n이 두 변수는 1번째 변수에서 3 = 심각함이지만 2번째 변수에서 3 = sev이므로 다르다고 간주됩니다.\n<br/><br/>\n<b>기본 레이블만 비교</b>\n<br/>\n팩터 변수 간에 기본 레이블(경미함, 중간, 심각함)만 비교합니다.\n<br/>\n<b>예 1:</b> disease (1 = 경미함, 2 = 중간, 3 = 심각함) vs. disease (1 = 경미함, 2 = 심각함)\n<br/>\n이 두 변수는 레이블이 동일하므로 다르지 않다고 간주됩니다.\n<br/><br/>\n<b>예 2:</b> disease (1 = 경미함, 2 = 중간, 3 = 심각함) vs. disease (1 = 경미함, 2 = 중간, 3 = sev)\n<br/>\n이 두 변수는 1번째 변수에서 3 = 심각함이지만 2번째 변수에서 3 = sev이므로 레이블이 다르다고 간주됩니다.\n<br/><br/>\n<b>팩터 변수를 문자 변수로 취급하여 비교</b>\n<br/>\n비교를 위해 팩터를 레이블을 사용하여 문자 변수로 변환해야 하는지 체크하세요. 서로 다른 소스에서 데이터를 읽어올 때 불일치하는 클래스가 발생할 수 있습니다.\n<br/>\n<b>예:</b> disease (1 = 경미함, 2 = 중간, 3 = 심각함) vs. disease (문자형으로 경미함, 중간, 심각함)\n<br/>\n이 변수들을 비교하려면 첫 번째 변수를 문자 변수로 변환하기 위해 상자를 체크하세요.\n<br/><br/><br/>\n<b>문자 변수 허용 오차 옵션</b>\n<br/><br/>\n<b>텍스트를 있는 그대로 취급 (기본값)</b>\n<br/>\n텍스트는 제공된 대로 정확하게 비교되며, 공백이나 대소문자 차이를 포함합니다.\n<br/>\n<b>예 (여기서 .은 공백을 의미):</b> name = John vs. name = john\n<br/>\n이들은 J가 j와 다르므로 다릅니다.\n<br/><br/>\n<b>대소문자 차이 무시</b>\n<br/>\n비교할 때 대소문자 차이를 무시합니다.\n<br/>\n<b>예 (여기서 .은 공백을 의미):</b> name = John vs. name = john\n<br/>\n이들은 이제 J가 j와 다르지 않으므로 다르지 않습니다.\n<br/><br/>\n<b>앞뒤 공백 차이 무시</b>\n<br/>\n비교하기 전에 모든 앞뒤 공백을 제거합니다.\n<br/>\n<b>예 (여기서 .은 공백을 의미):</b> name = john vs. name = john...\n<br/>\n기본적으로 john은 john...과 다르지만 이 옵션을 선택하면 john = john...이 됩니다. 왜냐하면 ...이 비교 전에 제거되기 때문입니다.\n<br/><br/>\n<b>대소문자와 공백 차이 모두 무시</b>\n<br/>\n위에서 설명한 대소문자와 공백을 모두 무시합니다.\n<br/><br/><br/>\n<b>변수 이름 허용 오차 옵션</b>\n<br/><br/>\n<b>변수 이름을 있는 그대로 취급 (기본값)</b>\n<br/>\n대소문자, 공백, 점 및 밑줄은 변수가 다르다는 것을 의미합니다.\n<br/>\n<b>예:</b> Variable = Age는 Variable = age와 비교되지 않습니다.\n<br/><br/>\n<b>점, 밑줄 및 공백을 변수 이름에서 동등하게 취급</b>\n<br/>\n변수 이름에서 점, 밑줄 및 공백을 무시합니다.\n<br/>\n<b>예:</b> Variable = Age.dx는 이 옵션을 선택하면 Age_dx와 비교됩니다. 기본적으로 이들은 동일한 변수로 취급되지 않습니다.\n<br/><br/>\n<b>대소문자 무시</b>\n<br/>\n변수 이름에서 대소문자 차이를 무시합니다.\n<br/>\n<b>예:</b> Variable = Age는 Variable = age와 비교됩니다.\n<br/><br/>\n<b>대소문자 및 점, 밑줄, 공백을 변수 이름에서 동등하게 취급</b>\n<br/>\n위에서 설명한 대소문자, 점, 밑줄 및 공백 차이를 모두 무시합니다.\n<br/>\n<b>예:</b> Variable = Age.dx는 Variable = age_dx와 비교됩니다.\n<br/><br/>\n<b>필수 R 패키지:</b> arsenal\n\t\t\t"
  }
}