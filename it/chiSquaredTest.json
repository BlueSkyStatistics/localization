{
  "title": "Test Chi-quadrato",
  "navigation": "Test Chi-quadrato",
  "target": "Variabili selezionate",
  "proportions": "Test contro proporzioni uguali o inserisci proporzioni da testare. Se la tua variabile è il genere, lascia questo controllo vuoto per testare proporzioni uguali. Per testare il 20% di femmine e l'80% di maschi, inserisci 0.2,0.8. Inserisci una proporzione per ogni livello. Le proporzioni devono totalizzare 1.",
  "help": {
    "title": "Test Chi-quadrato",
    "r_help": "help(chisq.test, package=stats)",
    "body": "\n<b>Descrizione</b></br>\nchisq.test esegue test di contingenza chi-quadrato e test di bontà di adattamento.\n<br/>\n<b>Utilizzo</b>\n<br/>\n<code>\nchisq.test(x, y = NULL, correct = TRUE,\n            p = rep(1/length(x), length(x)), rescale.p = FALSE,\n            simulate.p.value = FALSE, B = 2000)\n</code> <br/>\n<b>Argomenti</b><br/>\n<ul>\n<li>\nx: un vettore o matrice numerica. x e y possono anche essere entrambi fattori.\n</li>\n<li>\ny: un vettore numerico; ignorato se x è una matrice. Se x è un fattore, y dovrebbe essere un fattore della stessa lunghezza.\n</li>\n<li>\ncorrect: un logico che indica se applicare la correzione di continuità quando si calcola la statistica del test per tabelle 2 per 2: viene sottratta una metà da tutte le differenze |O - E|; tuttavia, la correzione non sarà maggiore delle differenze stesse. Nessuna correzione viene effettuata se simulate.p.value = TRUE.\n</li>\n<li>\np: un vettore di probabilità della stessa lunghezza di x. Viene fornito un errore se qualsiasi voce di p è negativa.\n</li>\n<li>\nrescale.p: un logico scalare; se TRUE, allora p viene ridimensionato (se necessario) per sommare a 1. Se rescale.p è FALSE e p non somma a 1, viene fornito un errore.\n</li>\n<li>\nsimulate.p.value: un logico che indica se calcolare i valori p tramite simulazione Monte Carlo.\n</li>\n<li>\nB: un intero che specifica il numero di repliche utilizzate nel test Monte Carlo.\n</li>\n</ul>\n<b>Descrizione</b><br/>\nSe x è una matrice con una riga o colonna, o se x è un vettore e y non è fornito, viene eseguito un test di bontà di adattamento (x è trattato come una tabella di contingenza unidimensionale). Le voci di x devono essere interi non negativi. In questo caso, l'ipotesi testata è se le probabilità della popolazione siano uguali a quelle in p, o siano tutte uguali se p non è fornito.\nSe x è una matrice con almeno due righe e colonne, viene considerata come una tabella di contingenza bidimensionale: le voci di x devono essere interi non negativi. Altrimenti, x e y devono essere vettori o fattori della stessa lunghezza; i casi con valori mancanti vengono rimossi, gli oggetti vengono forzati a fattori e la tabella di contingenza viene calcolata da questi. Quindi viene eseguito il test chi-quadrato di Pearson dell'ipotesi nulla che la distribuzione congiunta dei conteggi delle celle in una tabella di contingenza 2-dimensionale sia il prodotto dei margini di riga e colonna.<br/>\nSe simulate.p.value è FALSE, il valore p viene calcolato dalla distribuzione chi-quadrato asintotica della statistica del test; la correzione di continuità viene utilizzata solo nel caso 2 per 2 (se correct è TRUE, il predefinito). Altrimenti, il valore p viene calcolato per un test Monte Carlo (Hope, 1968) con B repliche.\nNel caso della tabella di contingenza, la simulazione viene eseguita campionando casualmente dall'insieme di tutte le tabelle di contingenza con margini dati e funziona solo se i margini sono strettamente positivi. La correzione di continuità non viene mai utilizzata e la statistica è citata senza di essa. Nota che questa non è la solita situazione di campionamento assunta per il test chi-quadrato, ma piuttosto quella per il test esatto di Fisher.<br/>\nNel caso della bontà di adattamento, la simulazione viene eseguita campionando casualmente dalla distribuzione discreta specificata da p, ogni campione avendo dimensione n = somma(x). Questa simulazione viene eseguita in R e potrebbe essere lenta.<br/>\n<b>Valore</b></br>\nUna lista con classe \"htest\" contenente i seguenti componenti:</br>\nstatistic: il valore della statistica del test chi-quadrato.</br>\nparameter: i gradi di libertà della distribuzione chi-quadrato approssimativa della statistica del test, NA se il valore p è calcolato tramite simulazione Monte Carlo.</br>\np.value: il valore p per il test.</br>\nmethod: una stringa carattere che indica il tipo di test eseguito e se è stata utilizzata la simulazione Monte Carlo o la correzione di continuità.</br>\ndata.name: una stringa carattere che fornisce il nome(i) dei dati.</br>\nobserved: i conteggi osservati.</br>\nexpected: i conteggi attesi sotto l'ipotesi nulla.</br>\nresiduals: i residui di Pearson, (osservato - atteso) / sqrt(atteso).</br>\nstdres: residui standardizzati, (osservato - atteso) / sqrt(V), dove V è la varianza residua delle celle (Agresti, 2007, sezione 2.4.5 per il caso in cui x è una matrice, n * p * (1 - p) altrimenti).​​</br>\n<b>Esempi</b><br/>\n<code> \n## Da Agresti(2007) p.39\nM <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))</br>\ndimnames(M) <- list(gender = c(\"F\", \"M\"),</br>\n                    party = c(\"Democratico\",\"Indipendente\", \"Repubblicano\"))</br>\n(Xsq <- chisq.test(M))  # Stampa il riepilogo del test</br>\nXsq$observed   # conteggi osservati (stesso di M)</br>\nXsq$expected   # conteggi attesi sotto il nullo</br>\nXsq$residuals  # residui di Pearson</br>\nXsq$stdres     # residui standardizzati</br>\n</br>\n## Effetto della simulazione dei valori p</br>\nx <- matrix(c(12, 5, 7, 7), ncol = 2)</br>\nchisq.test(x)$p.value           # 0.4233</br>\nchisq.test(x, simulate.p.value = TRUE, B = 10000)$p.value</br>\n                                # circa 0.29!</br>\n</code> <br/>\n<b>Pacchetto</b></br>\nstats</br>\n<b>Aiuto</b></br>\nhelp(chisq.test, package ='caret')      \n"
  }
}