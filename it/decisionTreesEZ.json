{
  "title": "Alberi decisionali",
  "navigation": "Alberi decisionali",
  "TxtTreeName": "Inserisci il nome del modello",
  "TreeGenChkbox": "Non rigenerare se l'albero esiste già",
  "dependent": "Variabile dipendente",
  "independent": "Variabile(i) indipendente(i)",
  "weights": "Pesi del sondaggio",
  "TxtMinSplit": "Divisione minima",
  "minBucket": "Cestino minimo",
  "TxtCP": "Parametro di complessità",
  "maxDepth": "Profondità massima",
  "PruneTreeChkbox": "Potare l'albero",
  "rd0": "Non potare",
  "rd1": "Usa il parametro di complessità ottimale",
  "rd2": "Specifica il parametro di complessità",
  "TxtCPPrune": "Inserisci il parametro di complessità",
  "PlotCVChkbox": "Traccia la convalida incrociata",
  "PlotRSQRChkbox": "Traccia R-quadrato",
  "OptvarPlots": "Grafici",
  "OptvarPreprune": "Prepotatura",
  "OptvarPrune": "Potare l'albero",
  "help": {
    "title": "Alberi decisionali",
    "r_help": "help(rpart, package ='rpart')",
    "body": "\n                <b>Nota</b></br>\n                Le variabili dipendenti possono essere fattori, ordinali, stringhe, logiche e numeriche</br>\n                Le variabili indipendenti possono essere fattori, ordinali, stringhe, logiche e numeriche</br></br>\n                <b>Descrizione</b></br>\n                Adatta un modello di Albero di Partizionamento Ricorsivo e di Regressione\n                <br/>\n                <b>Utilizzo</b>\n                <br/>\n                <code> \n                rpart(formula, data, weights, subset, na.action = na.rpart, method,\n                      model = FALSE, x = FALSE, y = TRUE, parms, control, cost, ...)\n                </code> <br/>\n                <b>Argomenti</b><br/>\n                <ul>\n                <li>\n                formula: una formula, con una risposta ma senza termini di interazione. Se questo è un data frame, viene preso come il modello frame (vedi model.frame).\n                </li>\n                <li>\n                data: un data frame opzionale in cui interpretare le variabili nominate nella formula.\n                </li>\n                <li>\n                weights: pesi opzionali per i casi.\n                </li>\n                <li>\n                subset: espressione opzionale che indica che solo un sottoinsieme delle righe dei dati dovrebbe essere utilizzato nell'adattamento.\n                </li>\n                <li>\n                na.action: l'azione predefinita elimina tutte le osservazioni per cui y è mancante, ma mantiene quelle in cui uno o più predittori sono mancanti.\n                </li>\n                <li>\n                method: uno tra \"anova\", \"poisson\", \"class\" o \"exp\". Se il metodo è mancante, la routine cerca di fare un'ipotesi intelligente. Se y è un oggetto di sopravvivenza, allora si assume method = \"exp\", se y ha 2 colonne si assume method = \"poisson\", se y è un fattore si assume method = \"class\", altrimenti si assume method = \"anova\". È più saggio specificare direttamente il metodo, specialmente poiché potrebbero essere aggiunti più criteri alla funzione in futuro.\n                Alternativamente, il metodo può essere un elenco di funzioni chiamate init, split ed eval. Esempi sono forniti nel file 'tests/usersplits.R' nelle sorgenti, e nei vignette 'Funzioni di Divisione Scritte dagli Utenti'.\n                </li>\n                <li>\n                model: se logico: mantenere una copia del modello frame nel risultato? Se il valore di input per il modello è un modello frame (probabilmente da una chiamata precedente alla funzione rpart), allora questo frame viene utilizzato anziché costruire nuovi dati.\n                </li>\n                <li>\n                x: mantenere una copia della matrice x nel risultato.\n                </li>\n                <li>\n                y: mantenere una copia della variabile dipendente nel risultato. Se mancante e il modello è fornito, questo predefinisce a FALSE.\n                </li>\n                <li>\n                parms: parametri opzionali per la funzione di divisione.<br/>\n                La divisione Anova non ha parametri.<br/>\n                La divisione Poisson ha un singolo parametro, il coefficiente di variazione della distribuzione a priori sui tassi. Il valore predefinito è 1.<br/>\n                La divisione Esponenziale ha lo stesso parametro della Poisson.<br/>\n                Per la divisione di classificazione, l'elenco può contenere uno dei seguenti: il vettore delle probabilità a priori (componente prior), la matrice di perdita (componente loss) o l'indice di divisione (componente split). I priori devono essere positivi e sommare a 1. La matrice di perdita deve avere zeri sulla diagonale e elementi positivi fuori diagonale. L'indice di divisione può essere gini o informazione. I priori predefiniti sono proporzionali ai conteggi dei dati, le perdite predefinite sono 1 e la divisione predefinita è gini.<br/>\n                </li>\n                <li>\n                control: un elenco di opzioni che controllano i dettagli dell'algoritmo rpart. Vedi rpart.control.\n                </li>\n                <li>\n                cost: un vettore di costi non negativi, uno per ciascuna variabile nel modello. Predefinito a uno per tutte le variabili. Questi sono scalamenti da applicare quando si considerano le divisioni, quindi il miglioramento sulla divisione su una variabile è diviso per il suo costo nel decidere quale divisione scegliere.\n                </li>\n                <li>\n                ...: gli argomenti a rpart.control possono anche essere specificati nella chiamata a rpart. Vengono controllati rispetto all'elenco degli argomenti validi.\n                </li>\n                </ul>\n                <b>Dettagli</b></br>\n                Questo differisce dalla funzione tree in S principalmente nella gestione delle variabili surrogate. In molti dettagli segue Breiman et. al (1984) piuttosto da vicino. Il pacchetto R tree fornisce una re-implementazione di tree.\n                <b>Valore</b></br>\n                Un oggetto di classe rpart. Vedi rpart.object.</br>\n                <b>Riferimenti</b></br>\n                Breiman L., Friedman J. H., Olshen R. A., e Stone, C. J. (1984) Classification and Regression Trees. Wadsworth.</br>\n                <b>Vedi anche</b></br>\n                rpart.control, rpart.object, summary.rpart, print.rpart</br>\n                <b>Esempi</b></br>\n                fit <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis)</br>\n                fit2 <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis,\n                              parms = list(prior = c(.65,.35), split = \"information\"))</br>\n                fit3 <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis,\n                              control = rpart.control(cp = 0.05))</br>\n                par(mfrow = c(1,2), xpd = NA) # altrimenti su alcuni dispositivi il testo viene tagliato</br>\n                plot(fit)</br>\n                text(fit, use.n = TRUE)</br>\n                plot(fit2)</br>\n                text(fit2, use.n = TRUE)</br>\n                <b>Pacchetto</b></br>\n                rpart;rpart.plot;partykit</br>\n                <b>Aiuto</b></br>\n                help(rpart, package ='rpart')</br></br>\n                <b>Descrizione</b></br>\n                Controllo per gli adattamenti Rpart. Vari variabili che controllano aspetti dell'adattamento rpart.\n                <br/>\n                <b>Utilizzo</b>\n                <br/>\n                <code> \n                rpart.control(minsplit = 20, minbucket = round(minsplit/3), cp = 0.01, \n                              maxcompete = 4, maxsurrogate = 5, usesurrogate = 2, xval = 10,\n                              surrogatestyle = 0, maxdepth = 30, ...)\n                </code> <br/>\n                <b>Argomenti</b><br/>\n                <ul>\n                <li>\n                minsplit: il numero minimo di osservazioni che devono esistere in un nodo affinché una divisione venga tentata.\n                </li>\n                <li>\n                minbucket: il numero minimo di osservazioni in qualsiasi nodo terminale <leaf>. Se solo uno tra minbucket o minsplit è specificato, il codice imposta minsplit a minbucket*3 o minbucket a minsplit/3, a seconda dei casi.\n                </li>\n                <li>\n                cp: parametro di complessità. Qualsiasi divisione che non riduce il complessivo difetto di adattamento di un fattore cp non viene tentata. Ad esempio, con la divisione anova, questo significa che il R-quadrato complessivo deve aumentare di cp ad ogni passo. Il ruolo principale di questo parametro è risparmiare tempo di calcolo potando le divisioni che non sono ovviamente utili. Essenzialmente, l'utente informa il programma che qualsiasi divisione che non migliora l'adattamento di cp sarà probabilmente potata dalla convalida incrociata, e che quindi il programma non deve perseguirla.\n                </li>\n                <li>\n                maxcompete: il numero di divisioni concorrenti mantenute nell'output. È utile sapere non solo quale divisione è stata scelta, ma anche quale variabile è arrivata seconda, terza, ecc.\n                </li>\n                <li>\n                maxsurrogate: il numero di divisioni surrogate mantenute nell'output. Se questo è impostato a zero, il tempo di calcolo sarà ridotto, poiché circa metà del tempo di calcolo (al di fuori della configurazione) è utilizzato nella ricerca di divisioni surrogate.\n                </li>\n                <li>\n                usesurrogate: come utilizzare i surrogate nel processo di divisione. 0 significa visualizzare solo; un'osservazione con un valore mancante per la regola di divisione primaria non viene inviata ulteriormente nell'albero. 1 significa utilizzare i surrogate, in ordine, per dividere i soggetti che mancano la variabile primaria; se tutti i surrogate sono mancanti, l'osservazione non viene divisa. Per il valore 2, se tutti i surrogate sono mancanti, inviare quindi l'osservazione nella direzione della maggioranza. Un valore di 0 corrisponde all'azione dell'albero, e 2 alle raccomandazioni di Breiman et.al (1984).\n                </li>\n                <li>\n                xval: numero di convalide incrociate.\n                </li>\n                <li>\n                surrogatestyle: controlla la selezione di un miglior surrogate. Se impostato a 0 (predefinito) il programma utilizza il numero totale di classificazioni corrette per una potenziale variabile surrogate, se impostato a 1 utilizza la percentuale corretta, calcolata sui valori non mancanti del surrogate. La prima opzione penalizza più severamente le covariate con un gran numero di valori mancanti.\n                </li>\n                <li>\n                maxdepth: Imposta la profondità massima di qualsiasi nodo dell'albero finale, con il nodo radice conteggiato come profondità 0. Valori superiori a 30 rpart daranno risultati senza senso su macchine a 32 bit.\n                </li>\n                <li>\n                ...: raccogliere altri argomenti.\n                </li>\n                </ul>\n                <b>Valore</b></br>\n                Un elenco contenente le opzioni. \n                      "
  }
}