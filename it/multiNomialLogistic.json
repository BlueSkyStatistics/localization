{
  "title": "Logit Multinomiale",
  "navigation": "Logit Multinomiale",
  "modelname": "Inserisci il nome del modello",
  "dependent": "Variabile dipendente",
  "independent": "Variabile(i) indipendente(i)",
  "generateplotchk": "Traccia i residui vs adattati, Q-Q normale, scala-locazione e residui vs leva",
  "destination2": "Specifica una variabile con pesi",
  "help": {
    "title": "Logit Multinomiale",
    "r_help": "help(multinom, package=nnet)",
    "body": "\n            <b>Descrizione</b></br>\n            Adatta modelli log-lineari multinomiali tramite reti neurali.\n            <br/>\n            <b>Utilizzo</b>\n            <br/>\n            <code> \n            multinom(formula, data, weights, subset, na.action,<br/>\n                     contrasts = NULL, Hess = FALSE, summ = 0, censored = FALSE,<br/>\n                     model = FALSE, ...)<br/>\n            </code> <br/>\n            <b>Argomenti</b><br/>\n            <ul>\n            <li>\n            formula: un'espressione di formula come per i modelli di regressione, della forma risposta ~ predittori. La risposta deve essere un fattore o una matrice con K colonne, che sarà interpretata come conteggi per ciascuna delle K classi. Un modello log-lineare è adattato, con coefficienti zero per la prima classe. Un offset può essere incluso: dovrebbe essere una matrice numerica con K colonne se la risposta è sia una matrice con K colonne o un fattore con K >= 2 classi, o un vettore numerico per un fattore di risposta con 2 livelli. Vedi la documentazione di formula() per ulteriori dettagli.\n            </li>\n            <li>\n            data: un data frame opzionale in cui interpretare le variabili che compaiono nella formula.\n            </li>\n            <li>\n            weights: pesi opzionali per i casi nell'adattamento.\n            </li>\n            <li>\n            subset: espressione che indica quale sottoinsieme delle righe dei dati dovrebbe essere utilizzato nell'adattamento. Tutte le osservazioni sono incluse per impostazione predefinita.\n            </li>\n            <li>\n            na.action: una funzione per filtrare i dati mancanti.\n            </li>\n            <li>\n            contrasts: un elenco di contrasti da utilizzare per alcuni o tutti i fattori che compaiono come variabili nella formula del modello.\n            </li>\n            <li>\n            Hess: logico per indicare se la matrice hessiana (la matrice di informazione osservata/attesa) dovrebbe essere restituita.\n            </li>\n            <li>\n            summ: intero; se diverso da zero riassumi eliminando righe duplicate e aggiusta i pesi. I metodi 1 e 2 differiscono in velocità (2 utilizza C); il metodo 3 combina anche righe con lo stesso X e Y diversi, il che cambia la base per la devianza.\n            </li>\n            <li>\n            censored: Se Y è una matrice con K colonne, interpreta le voci come uno per le classi possibili, zero per le classi impossibili, piuttosto che come conteggi.\n            </li>\n            <li>\n            model: logico. Se vero, il frame del modello è salvato come componente modello dell'oggetto restituito.\n            </li>\n            <li>\n            ... argomenti aggiuntivi per nnet\n            </li>\n            </ul>\n            <b>Dettagli</b></br>\n            multinom chiama nnet. Le variabili a destra della formula dovrebbero essere approssimativamente scalate a [0,1] o l'adattamento sarà lento o potrebbe non convergere affatto.</br>\n            <b>Valore</b><br/>\n            Un oggetto nnet con componenti aggiuntivi:<br/>\n            <li>\n            deviance: la devianza residua, rispetto al modello saturo completo (che spiega esattamente le osservazioni individuali). Inoltre, meno due volte il log-verosimiglianza.\n            </li>\n            <li>\n            edf: il numero (effettivo) di gradi di libertà utilizzati dal modello\n            </li>\n            <li>\n            AIC: l'AIC per questo adattamento.\n            </li>\n            <li>\n            Hessian: (se Hess è vero).\n            </li>\n            <li>\n            model: (se model è vero).\n            </li>\n            <b>Esempi</b><br/>\n            <code> \n            options(contrasts = c(\"contr.treatment\", \"contr.poly\"))<br/>\n            library(MASS)<br/>\n            example(birthwt)<br/>\n            (bwt.mu <- multinom(low ~ ., bwt))<br/>\n            </code>\n            <b>Pacchetto</b></br>\n            nnet</br>\n            <b>Aiuto</b></br>\n            Per aiuto dettagliato clicca sull'icona R in alto a destra di questo overlay di dialogo o esegui il seguente comando help(multinom, package=nnet) creando un blocco di codice R cliccando + nella finestra di output\n           "
  }
}