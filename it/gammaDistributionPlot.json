{
  "title": "Grafico della distribuzione Gamma",
  "navigation": "Grafico della distribuzione Gamma",
  "shape": "Forma",
  "scale": "Scala (tasso inverso)",
  "pdenfun": "Grafico della funzione di densità",
  "pdstfun": "Grafico della funzione di distribuzione",
  "lblregions": "Specifica facoltativamente le regioni sotto la funzione di densità tramite",
  "xvals": "valori x",
  "quantiles": "quantili",
  "lblRegFill": "Regioni da riempire (specifica una o due, o lascia vuoto)",
  "lblreg1": "Regione 1 :",
  "lblreg2": "Regione 2 :",
  "lblregfrm": "Da",
  "lblregto": "A",
  "lblregcol": "Colore",
  "lblLegPos": "Posizione della legenda",
  "toprt": "In alto a destra",
  "toplt": "In alto a sinistra",
  "topmid": "In alto al centro",
  "help": {
    "title": "Grafico della distribuzione Gamma",
    "r_help": "help(qgamma, package=stats)",
    "body": "\n            ​​\n            <b>Descrizione</b>\n            <br/>\n            Funzione di densità, funzione di distribuzione, funzione quantile e generazione casuale per la distribuzione Gamma con parametri forma e scala.\n            <br/>\n            <b>Utilizzo</b>\n            <br/>\n            <code>\n                dgamma(x, shape, rate = 1, scale = 1/rate, log = FALSE)\n                <br/>\n                pgamma(q, shape, rate = 1, scale = 1/rate, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qgamma(p, shape, rate = 1, scale = 1/rate, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rgamma(n, shape, rate = 1, scale = 1/rate)\n                <br/>\n            </code>\n            <br/>\n            <b>Argomenti</b>\n            <br/>\n            <ul>\n                <li></li>\n                <li>x, q : vettore di quantili.</li>\n                \n                \n                <li>p : vettore di probabilità.</li>\n                \n                \n                <li>n : numero di osservazioni. Se length(n) > 1, la lunghezza è presa come quella richiesta.</li>\n                \n                \n                <li>rate : un modo alternativo per specificare la scala.</li>\n                \n                \n                <li>shape, scale : parametri di forma e scala. Devono essere positivi, la scala rigorosamente.</li>\n                \n                \n                <li>log, log.p : logico; se TRUE, le probabilità/densità p vengono restituite come log(p).</li>\n                \n                \n                <li>lower.tail : logico; se TRUE (predefinito), le probabilità sono P[X ≤ x], altrimenti, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            Dettagli\n            <br/>\n            Se la scala è omessa, assume il valore predefinito di 1.\n            <br/>\n            La distribuzione Gamma con parametri shape = a e scale = s ha densità\n            <br/>\n            <code>f(x)= 1/(s^a Gamma(a)) x^(a-1) e^-(x/s)</code>\n            <br/>\n            per x ≥ 0, a > 0 e s > 0. (Qui Gamma(a) è la funzione implementata dalla gamma() di R e definita nella sua guida. Nota che a = 0 corrisponde alla distribuzione triviale con tutta la massa al punto 0.)\n            <br/>\n            La media e la varianza sono <code>E(X) = a*s e Var(X) = a*s^2.</code>\n            <br/>\n            Il rischio cumulativo <code>H(t) = - log(1 - F(t))</code> è\n            <br/>\n            -pgamma(t, ..., lower = FALSE, log = TRUE)\n            <br/>\n            Nota che per valori piccoli di forma (e scala moderata) una grande parte della massa della distribuzione Gamma è su valori di x così vicini a zero che saranno rappresentati come zero nell'aritmetica computerizzata. Quindi rgamma potrebbe restituire valori che saranno rappresentati come zero. (Questo accadrà anche per valori molto grandi di scala poiché la generazione effettiva è fatta per scala = 1.)\n            <br/>\n            <br/><b>Valore</b>\n            <br/>\n            dgamma fornisce la densità, pgamma fornisce la funzione di distribuzione, qgamma fornisce la funzione quantile e rgamma genera deviate casuali.\n            <br/>\n            Argomenti non validi restituiranno un valore NaN, con un avviso.\n            <br/>\n            La lunghezza del risultato è determinata da n per rgamma, ed è il massimo delle lunghezze degli argomenti numerici per le altre funzioni.\n            <br/>\n            Gli argomenti numerici diversi da n vengono riciclati alla lunghezza del risultato. Solo i primi elementi degli argomenti logici vengono utilizzati.\n            <br/>\n            <br/><b>Nota</b>\n            <br/>\n            La parametrizzazione S (Becker et al, 1988) era tramite forma e tasso: S non aveva un parametro di scala. È un errore fornire sia la scala che il tasso.\n            <br/>\n            pgamma è strettamente correlato alla funzione gamma incompleta. Come definito da Abramowitz e Stegun 6.5.1 (e da 'Numerical Recipes') questo è\n            <br/>\n            <code>P(a,x) = 1/Gamma(a) integrale_0^x t^(a-1) exp(-t) dt</code>\n            <br/>\n            P(a, x) è pgamma(x, a). Altri autori (ad esempio Karl Pearson nei suoi tavoli del 1922) omettono il fattore di normalizzazione, definendo la funzione gamma incompleta γ(a,x) come gamma(a,x) = integrale_0^x t^(a-1) exp(-t) dt, cioè, pgamma(x, a) * gamma(a). Altri ancora usano la funzione gamma incompleta 'superiore',\n            <br/>\n            <code>Gamma(a,x) = integrale_x^Inf t^(a-1) exp(-t) dt,</code>\n            <br/>\n            che può essere calcolata da pgamma(x, a, lower = FALSE) * gamma(a).\n            <br/>\n            Nota però che pgamma(x, a, ..) attualmente richiede a > 0, mentre la funzione gamma incompleta è definita anche per a negativi. In quel caso, puoi usare gamma_inc(a,x) (per Γ(a,x)) dal pacchetto gsl.\n            <br/>\n            Vedi anche https://en.wikipedia.org/wiki/Incomplete_gamma_function, o http://dlmf.nist.gov/8.2#i.            \n"
  }
}