{
  "title": "Divisione Stratificata",
  "navigation": "Divisione Stratificata",
  "traindataset": "Inserisci il nome del dataset di addestramento",
  "testdataset": "Inserisci il nome del dataset di test",
  "split": "Inserisci la percentuale di divisione",
  "seed": "Imposta il seme",
  "dependent": "Variabile da cui costruire campioni stratificati",
  "help": {
    "title": "Divisione Stratificata",
    "r_help": "help(createDataPartition, package=\"caret\")",
    "body": "\n<b>Descrizione</b></br>\nUna serie di partizioni di test/allenamento vengono create utilizzando createDataPartition mentre createResample crea uno o più campioni bootstrap. createFolds divide i dati in k gruppi mentre createTimeSlices crea una divisione di cross-validation per i dati di serie. groupKFold divide i dati in base a un fattore di raggruppamento.\n<br/>\n<b>Utilizzo</b>\n<br/>\n<code> \ncreateDataPartition(y, times = 1, p = 0.5, list = TRUE, groups = min(5,length(y)))<br/>\ncreateFolds(y, k = 10, list = TRUE, returnTrain = FALSE)<br/>\ncreateTimeSlices(y, initialWindow, horizon = 1, fixedWindow = TRUE,skip = 0)<br/>\ngroupKFold(group, k = length(unique(group)))<br/>\n</code> <br/>\n<b>Argomenti</b><br/>\n<ul>\n<li>\ny: un vettore di risultati. Per createTimeSlices, questi dovrebbero essere in ordine cronologico.\n</li>\n<li>\ntimes: il numero di partizioni da creare\n</li>\n<li>\np: la percentuale di dati che va all'addestramento\n</li>\n<li>\nlist: logico - i risultati devono essere in un elenco (TRUE) o in una matrice con il numero di righe pari a floor(p * length(y)) e colonne di times.\n</li>\n<li>\ngroups: per y numerico, il numero di intervalli nei quantili (vedi sotto)\n</li>\n<li>\nk: un intero per il numero di fold.\n</li>\n<li>\nreturnTrain: un logico. Quando vero, i valori restituiti sono le posizioni dei campioni corrispondenti ai dati utilizzati durante l'addestramento. Questo argomento funziona solo in combinazione con list = TRUE\n</li>\n<li>\ninitialWindow: Il numero iniziale di valori consecutivi in ogni campione di set di addestramento\n</li>\n<li>\nhorizon: il numero di valori consecutivi nel campione di set di test\n</li>\n<li>\nfixedWindow: logico, se FALSE, tutti i campioni di addestramento iniziano a 1\n</li>\n<li>\nskip: intero, quanti (se presenti) campioni da riassumere saltare per ridurre la quantità totale\n</li>\n<li>\ngroup: un vettore di gruppi la cui lunghezza corrisponde al numero di righe nel set di dati complessivo.\n</li>\n</ul>\n<b>Dettagli</b></br>\nPer i campioni bootstrap, viene utilizzato un campionamento casuale semplice.\nPer altre divisioni dei dati, il campionamento casuale viene effettuato all'interno dei livelli di y quando y è un fattore nel tentativo di bilanciare le distribuzioni delle classi all'interno delle divisioni.</br>\nPer y numerico, il campione è diviso in sezioni di gruppi basate sui percentili e il campionamento viene effettuato all'interno di questi sottogruppi. Per createDataPartition, il numero di percentili è impostato tramite l'argomento groups. Per createFolds e createMultiFolds, il numero di gruppi è impostato dinamicamente in base alla dimensione del campione e a k. Per dimensioni di campione più piccole, queste due funzioni potrebbero non effettuare una divisione stratificata e, al massimo, divideranno i dati in quartili.</br>\nInoltre, per createDataPartition, classi di dimensioni molto piccole (<= 3) potrebbero non apparire sia nei dati di addestramento che in quelli di test.</br>\nPer la validazione incrociata k-fold multipla, vengono creati fold completamente indipendenti. I nomi degli oggetti dell'elenco denoteranno l'appartenenza al fold utilizzando il modello \"Foldi.Repj\" che significa la sezione ith (di k) del jth set di validazione incrociata (di times). Nota che questa funzione chiama createFolds con list = TRUE e returnTrain = TRUE.</br>\nHyndman e Athanasopoulos (2013) discutono tecniche di origine di previsione rolling che spostano i set di addestramento e test nel tempo. createTimeSlices può creare gli indici per questo tipo di divisione.</br>\nPer la validazione incrociata k-fold di gruppo, i dati vengono divisi in modo tale che nessun gruppo sia contenuto sia nei set di modellazione che in quelli di holdout. Uno o più gruppi potrebbero essere esclusi, a seconda del valore di k.</br>\n<b>Valore</b><br/>\nUn elenco o matrice di interi di posizione delle righe corrispondenti ai dati di addestramento. Per createTimeSlices, i sottocampioni sono nominati dall'indice finale di ciascun sottocampione di addestramento.</br>\n<b>Pacchetto</b></br>\ncaret</br>\nklaR</br>\n<b>Aiuto</b></br>\nhelp(createDataPartition, package=\"caret\")\n        "
  }
}