{
  "title": "Converti in fattore ordinato(e)/Ordinal",
  "navigation": "A fattore ordinato/Ordinal",
  "trg": "Variabili da convertire in fattore ordinato/ordinal",
  "help": {
    "title": "Converti in fattore ordinato(e)/Ordinal",
    "r_help": "help(factor, package=base)",
    "body": "\n<b>Descrizione</b></br>\nLa funzione factor è utilizzata per una variabile di fattore ordinato/ordinal. I livelli del fattore sono considerati ordinati. \n<br/>\n<b>Utilizzo</b>\n<br/>\n<code>\nfactor(x = character(),  ordered = TRUE)\n</code> <br/>\n<b>Argomenti</b><br/>\n<ul>\n<li>\nx: un vettore di dati, di solito con un numero ridotto di valori distinti.\n</li>\n<li>\nlevels:\tvettore opzionale dei valori (come stringhe di caratteri) che x potrebbe aver assunto. Il valore predefinito è l'insieme unico di valori assunti da as.character(x), ordinato in ordine crescente di x. Nota che questo insieme può essere specificato come più piccolo di sort(unique(x)).\n</li>\n<li>\nlabels:\tvettore di caratteri opzionale di etichette per i livelli (nello stesso ordine dei livelli dopo aver rimosso quelli in exclude), o una stringa di caratteri di lunghezza 1.\n</li>\n<li>\nexclude: Un vettore di valori da escludere quando si forma l'insieme dei livelli. Questo dovrebbe essere dello stesso tipo di x e sarà forzato se necessario.\n</li>\n<li>\nordered: flag logico per determinare se i livelli devono essere considerati ordinati (nell'ordine fornito).\n</li>\n<li>\nnmax: un limite superiore sul numero di livelli; vedere 'Dettagli'.\n</li>\n<li>\n...(in ordered(.)): qualsiasi dei precedenti, ad eccezione di ordered stesso.\n</li>\n<li>\nifany: (aggiungi un livello NA solo se viene utilizzato, cioè se any(is.na(x)).\n</li>\n</ul>\n<b>Dettagli</b></br>\nIl tipo del vettore x non è ristretto; deve solo avere un metodo as.character e essere ordinabile (da sort.list).<br/>\nI fattori ordinati differiscono dai fattori solo nella loro classe, ma i metodi e le funzioni di adattamento del modello trattano le due classi in modo piuttosto diverso.<br/>\nLa codifica del vettore avviene come segue. Prima tutti i valori in exclude vengono rimossi dai livelli. Se x[i] è uguale a levels[j], allora l'elemento i-esimo del risultato è j. Se non viene trovata corrispondenza per x[i] in levels (cosa che accadrà per i valori esclusi) allora l'elemento i-esimo del risultato è impostato su NA.<br/>\nNormalmente i 'livelli' utilizzati come attributo del risultato sono l'insieme ridotto di livelli dopo aver rimosso quelli in exclude, ma questo può essere alterato fornendo etichette. Questo dovrebbe essere un insieme di nuove etichette per i livelli, o una stringa di caratteri, nel qual caso i livelli sono quella stringa di caratteri con un numero di sequenza aggiunto.<br/>\nfactor(x, exclude = NULL) applicato a un fattore è un'operazione no-operation a meno che non ci siano livelli non utilizzati: in quel caso, viene restituito un fattore con l'insieme di livelli ridotto. Se exclude viene utilizzato, dovrebbe anche essere un fattore con lo stesso insieme di livelli di x o un insieme di codici per i livelli da escludere.<br/>\nI codici di un fattore possono contenere NA. Per un x numerico, impostare exclude = NULL per rendere NA un livello extra (stampa come <NA>); per impostazione predefinita, questo è l'ultimo livello.<br/>\nSe NA è un livello, il modo per impostare un codice come mancante (a differenza del codice del livello mancante) è utilizzare is.na sul lato sinistro di un'assegnazione (come in is.na(f)[i] <- TRUE; l'indicizzazione all'interno di is.na non funziona). In tali circostanze, i valori mancanti vengono attualmente stampati come <NA>, cioè identici alle voci di livello NA.<br/>\nis.factor è generico: puoi scrivere metodi per gestire classi specifiche di oggetti, vedere InternalMethods.<br/>\nDove levels non è fornito, viene chiamato unique. Poiché i fattori tipicamente hanno un numero piuttosto ridotto di livelli, per vettori x grandi è utile fornire nmax come limite superiore sul numero di valori unici.<br/>\n<b>Valore</b><br/>\nfactor restituisce un oggetto di classe \"factor\" che ha un insieme di codici interi della lunghezza di x con un attributo \"levels\" di modalità carattere e unici (!anyDuplicated(.)) voci. Se l'argomento ordered è true (o viene utilizzato ordered()), il risultato ha classe c(\"ordered\", \"factor\").<br/>\nApplicare factor a un fattore ordinato o non ordinato restituisce un fattore (dello stesso tipo) con solo i livelli che si verificano: vedere anche [.factor per un modo più trasparente per ottenere questo.\nis.factor restituisce TRUE o FALSE a seconda che il suo argomento sia di tipo fattore o meno. Di conseguenza, is.ordered restituisce TRUE quando il suo argomento è un fattore ordinato e FALSE altrimenti.<br/>\nas.factor costringe il suo argomento a un fattore. È una forma abbreviata di factor.<br/>\nas.ordered(x) restituisce x se questo è ordinato, e ordered(x) altrimenti.<br/>\naddNA modifica un fattore trasformando NA in un livello extra (in modo che i valori NA siano conteggiati nelle tabelle, ad esempio).<br/>\n<b>Pacchetto</b></br>\nbase</br>\n<b>Aiuto</b></br>\nhelp(factor, package =base)\n"
  }
}