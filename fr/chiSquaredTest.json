{
  "title": "Test du Chi-carré",
  "navigation": "Test du Chi-carré",
  "target": "Variables sélectionnées",
  "proportions": "Test contre des proportions égales ou entrez des proportions à tester. Si votre variable est le sexe, laissez ce contrôle vide pour tester des proportions égales. Pour tester 20 % de femmes, 80 % d'hommes, entrez 0.2,0.8. Entrez une proportion pour chaque niveau. Les proportions doivent totaliser 1.",
  "help": {
    "title": "Test du Chi-carré",
    "r_help": "help(chisq.test, package=stats)",
    "body": "\n<b>Description</b></br>\nchisq.test effectue des tests de tableau de contingence du chi-carré et des tests d'ajustement.\n<br/>\n<b>Utilisation</b>\n<br/>\n<code>\nchisq.test(x, y = NULL, correct = TRUE,\n            p = rep(1/length(x), length(x)), rescale.p = FALSE,\n            simulate.p.value = FALSE, B = 2000)\n</code> <br/>\n<b>Arguments</b><br/>\n<ul>\n<li>\nx : un vecteur ou une matrice numérique. x et y peuvent également être des facteurs.\n</li>\n<li>\ny : un vecteur numérique ; ignoré si x est une matrice. Si x est un facteur, y doit être un facteur de la même longueur.\n</li>\n<li>\ncorrect : un booléen indiquant s'il faut appliquer une correction de continuité lors du calcul de la statistique de test pour les tableaux 2 par 2 : une moitié est soustraite de toutes les différences |O - E| ; cependant, la correction ne sera pas plus grande que les différences elles-mêmes. Aucune correction n'est effectuée si simulate.p.value = TRUE.\n</li>\n<li>\np : un vecteur de probabilités de la même longueur que x. Une erreur est donnée si une entrée de p est négative.\n</li>\n<li>\nrescale.p : un scalaire booléen ; si TRUE, alors p est redimensionné (si nécessaire) pour totaliser 1. Si rescale.p est FALSE, et que p ne totalise pas 1, une erreur est donnée.\n</li>\n<li>\nsimulate.p.value : un booléen indiquant s'il faut calculer les p-values par simulation de Monte Carlo.\n</li>\n<li>\nB : un entier spécifiant le nombre de répliques utilisées dans le test de Monte Carlo.\n</li>\n</ul>\n<b>Description</b><br/>\nSi x est une matrice avec une ligne ou une colonne, ou si x est un vecteur et que y n'est pas donné, alors un test d'ajustement est effectué (x est traité comme un tableau de contingence unidimensionnel). Les entrées de x doivent être des entiers non négatifs. Dans ce cas, l'hypothèse testée est que les probabilités de la population sont égales à celles de p, ou sont toutes égales si p n'est pas donné.\nSi x est une matrice avec au moins deux lignes et colonnes, elle est considérée comme un tableau de contingence bidimensionnel : les entrées de x doivent être des entiers non négatifs. Sinon, x et y doivent être des vecteurs ou des facteurs de la même longueur ; les cas avec des valeurs manquantes sont supprimés, les objets sont contraints à des facteurs, et le tableau de contingence est calculé à partir de ceux-ci. Ensuite, le test du chi-carré de Pearson est effectué sur l'hypothèse nulle selon laquelle la distribution conjointe des comptes de cellules dans un tableau de contingence 2 dimensions est le produit des marginals de ligne et de colonne.<br/>\nSi simulate.p.value est FALSE, la p-value est calculée à partir de la distribution asymptotique du chi-carré de la statistique de test ; la correction de continuité n'est utilisée que dans le cas 2 par 2 (si correct est TRUE, par défaut). Sinon, la p-value est calculée pour un test de Monte Carlo (Hope, 1968) avec B répliques.\nDans le cas du tableau de contingence, la simulation est effectuée par échantillonnage aléatoire à partir de l'ensemble de tous les tableaux de contingence avec des marginals donnés, et ne fonctionne que si les marginals sont strictement positifs. La correction de continuité n'est jamais utilisée, et la statistique est citée sans elle. Notez que ce n'est pas la situation d'échantillonnage habituelle supposée pour le test du chi-carré mais plutôt celle du test exact de Fisher.<br/>\nDans le cas de l'ajustement, la simulation est effectuée par échantillonnage aléatoire à partir de la distribution discrète spécifiée par p, chaque échantillon étant de taille n = somme(x). Cette simulation est effectuée en R et peut être lente.<br/>\n<b>Valeur</b></br>\nUne liste avec la classe \"htest\" contenant les composants suivants :</br>\nstatistic : la valeur de la statistique de test du chi-carré.</br>\nparameter : les degrés de liberté de la distribution du chi-carré approximatif de la statistique de test, NA si la p-value est calculée par simulation de Monte Carlo.</br>\np.value : la p-value pour le test.</br>\nmethod : une chaîne de caractères indiquant le type de test effectué, et si la simulation de Monte Carlo ou la correction de continuité a été utilisée.</br>\ndata.name : une chaîne de caractères donnant le(s) nom(s) des données.</br>\nobserved : les comptes observés.</br>\nexpected : les comptes attendus sous l'hypothèse nulle.</br>\nresiduals : les résidus de Pearson, (observé - attendu) / sqrt(attendu).</br>\nstdres : résidus standardisés, (observé - attendu) / sqrt(V), où V est la variance résiduelle de cellule (Agresti, 2007, section 2.4.5 pour le cas où x est une matrice, n * p * (1 - p) sinon).​​</br>\n<b>Exemples</b><br/>\n<code> \n## D'après Agresti(2007) p.39\nM <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))</br>\ndimnames(M) <- list(gender = c(\"F\", \"M\"),</br>\n                    party = c(\"Démocrate\",\"Indépendant\", \"Républicain\"))</br>\n(Xsq <- chisq.test(M))  # Imprime le résumé du test</br>\nXsq$observed   # comptes observés (même que M)</br>\nXsq$expected   # comptes attendus sous le nul</br>\nXsq$residuals  # résidus de Pearson</br>\nXsq$stdres     # résidus standardisés</br>\n</br>\n## Effet de la simulation des p-values</br>\nx <- matrix(c(12, 5, 7, 7), ncol = 2)</br>\nchisq.test(x)$p.value           # 0.4233</br>\nchisq.test(x, simulate.p.value = TRUE, B = 10000)$p.value</br>\n                                # environ 0.29!</br>\n</code> <br/>\n<b>Package</b></br>\nstats</br>\n<b>Aide</b></br>\nhelp(chisq.test, package ='caret')      \n"
  }
}