{
  "title": "Forêt Aléatoire",
  "label1": "La forêt aléatoire peut être exécutée en mode supervisé ou non supervisé. Pour fonctionner en mode non supervisé, ne spécifiez pas de variable dépendante.",
  "navigation": "Forêt Aléatoire",
  "modelname": "Entrez le nom du modèle",
  "dependentvar": "Variable dépendante",
  "independentvars": "Variable(s) indépendante(s)",
  "ntree": "Nombre d'arbres",
  "mtry": "mtry",
  "proximity": "Proximité:",
  "newds": "Spécifiez le nom du jeu de données pour stocker la proximité:",
  "predictor": "Enregistrer les valeurs prédites:",
  "newcolname": "Spécifiez le nouveau nom de colonne pour les valeurs prédites:",
  "help": {
    "title": "Forêt Aléatoire",
    "r_help": "help(randomForest,package='randomForest')",
    "body": "\n                <b>Description</b></br>\nrandomForest implémente l'algorithme de forêt aléatoire de Breiman (basé sur le code Fortran original de Breiman et Cutler) pour la classification et la régression. Il peut également être utilisé en mode non supervisé pour évaluer les proximités entre les points de données.\n<br/>\n<b>Utilisation</b>\n<br/>\n<code> \nrandomForest(x, y=NULL,  ntree=500, importance=FALSE, proximity, ...)\n</code> <br/>\n<b>Arguments</b><br/>\n<ul>\n<li>\nx : Un cadre de données ou une matrice de prédicteurs, ou une formule décrivant le modèle à ajuster (pour la méthode d'impression, un objet randomForest).\n</li>\n<li>\ny: Un vecteur de réponse. Si un facteur, la classification est supposée, sinon la régression est supposée. Si omis, randomForest fonctionnera en mode non supervisé.\n</li>\n<li>\nntree : Nombre d'arbres à faire pousser. Cela ne doit pas être réglé sur un nombre trop petit, pour s'assurer que chaque ligne d'entrée est prédite au moins quelques fois.\n</li>\n<li>\nimportance : La pertinence des prédicteurs doit-elle être évaluée ? \n</li>\n<li>\nproximity : La mesure de proximité entre les lignes doit-elle être calculée ?\n</li>\n<li>\n... : paramètres optionnels à passer à la fonction de bas niveau randomForest.default.\n</li>\n</ul>\n<b>Valeur</b><br/>\nUn objet de classe randomForest, qui est une liste avec les composants suivants :<br/>\ncall: l'appel original à randomForest<br/>\ntype: l'un de régression, classification ou non supervisée.<br/>\npredicted: les valeurs prédites des données d'entrée basées sur des échantillons hors sac.<br/>\nimportance:\ta matrice avec nclass + 2 (pour la classification) ou deux (pour la régression) colonnes. Pour la classification, les premières colonnes nclass sont les mesures spécifiques à la classe calculées comme la diminution moyenne de la précision. La nclass + 1ère colonne est la diminution moyenne de la précision sur toutes les classes. La dernière colonne est la diminution moyenne de l'indice de Gini. Pour la régression, la première colonne est la diminution moyenne de la précision et la seconde la diminution moyenne du MSE. Si importance=FALSE, la dernière mesure est toujours renvoyée sous forme de vecteur.<br/>\nimportanceSD: Les « erreurs standards » de la mesure d'importance basée sur la permutation. Pour la classification, une matrice p par nclass + 1 correspondant aux premières nclass + 1 colonnes de la matrice d'importance. Pour la régression, un vecteur de longueur p.<br/>\nlocalImp: une matrice p par n contenant les mesures d'importance au cas par cas, l'élément [i,j] étant l'importance de la i-ème variable pour le j-ème cas. NULL si localImp=FALSE.<br/>\nntree: nombre d'arbres cultivés.<br/>\nmtry: nombre de prédicteurs échantillonnés pour la division à chaque nœud.<br/>\nforest: (une liste qui contient toute la forêt ; NULL si randomForest est exécuté en mode non supervisé ou si keep.forest=FALSE.<br/>\nerr.rate: (classification uniquement) vecteur des taux d'erreur de la prédiction sur les données d'entrée, l'élément i étant le taux d'erreur (OOB) pour tous les arbres jusqu'à l'i-ème.<br/>\nconfusion: (classification uniquement) la matrice de confusion de la prédiction (basée sur les données OOB).<br/>\nvotes: (classification uniquement) une matrice avec une ligne pour chaque point de données d'entrée et une colonne pour chaque classe, donnant la fraction ou le nombre de « votes » (OOB) du forêt aléatoire.<br/>\noob.times: nombre de fois que les cas sont « hors sac » (et donc utilisés pour calculer l'estimation de l'erreur OOB)<br/>\nproximity: si proximity=TRUE lorsque randomForest est appelé, une matrice de mesures de proximité entre les entrées (basée sur la fréquence à laquelle des paires de points de données sont dans les mêmes nœuds terminaux).<br/>\nmse\t: (régression uniquement) vecteur des erreurs quadratiques moyennes : somme des résidus au carré divisée par n.<br/>\nrsq\t: (régression uniquement) « pseudo R-carré » : 1 - mse / Var(y).<br/>\ntest: si un ensemble de test est donné (via les arguments xtest ou ytest supplémentaires), ce composant est une liste qui contient les valeurs prédites correspondantes, err.rate, confusion, votes (pour la classification) ou prédites, mse et rsq (pour la régression) pour l'ensemble de test. Si proximity=TRUE, il y a aussi un composant, proximité, qui contient la proximité entre l'ensemble de test ainsi que la proximité entre les données de test et d'entraînement.<br/>\n<b>Paquet</b></br>\nrandomForest​;BlueSky</br>\n<b>Aide</b></br>\nPour une aide détaillée, cliquez sur l'icône R en haut à droite de cette superposition de dialogue ou exécutez la commande suivante dans l'éditeur de syntaxe R</br>\nhelp(randomForest,package='randomForest')\n                "
  }
}