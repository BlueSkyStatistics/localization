{
  "title": "Modèle de Crédit Partiel",
  "navigation": "Modèle de Crédit Partiel",
  "modelname": "Entrez le nom du modèle",
  "destinationvars": "Variable(s) de destination",
  "estimationlbl": "Estimation",
  "rad1": "Utiliser l'estimation CML",
  "chk1": "Calculer l'erreur standardisée",
  "chk2": "Normaliser les paramètres pour que la somme soit (0)",
  "rad2": "Utiliser l'estimation MML",
  "help": {
    "title": "Modèle de Crédit Partiel",
    "r_help": "help(PCM, package='eRm')",
    "body": "\n            <b>Description</b>\n            <br/>\n            Génère des estimations de paramètres pour un modèle de crédit partiel\n            <br/><br/>\n            Pour l'estimation CML, nous invoquons eRm::PCM pour calculer les estimations de paramètres d'un modèle de crédit partiel pour des réponses d'items polytomiques.\n            <br/><br/>\n            Pour l'estimation MML, nous invoquons tam.mml avec les paramètres appropriés, voir ci-dessous \n            <br/><br/>\n            <b>Utilisation pour l'estimation CML</b>\n            <br/>\n            <code>\n            eRm::PCM(X,se=FALSE,sum0=FALSE) \n            </code>    \n            <br/><br/>\n            <b>Arguments</b>\n            <br/>       \n            <ul>\n\n            <li>\n            X:  Matrice de données d'entrée 0/1 ou cadre de données ; les lignes représentent des individus, les colonnes représentent des items. Les valeurs manquantes sont insérées comme NA.\n            </li>\n            <li>\n            W:  Matrice de conception pour le modèle de Rasch. Si omis, la fonction calculera W automatiquement.\n            </li>\n            <li>\n            se: Si TRUE, les erreurs standards sont calculées.\n            </li>\n            <li>\n            sum0: Si TRUE, les paramètres sont normés pour que la somme soit 0 en spécifiant un W approprié. Si FALSE, le premier paramètre est restreint à 0.\n            </li>\n            <li>\n            etaStart: Un vecteur de valeurs de départ pour les paramètres eta peut être spécifié. Si manquant, le vecteur 0 est utilisé.\n            </li>\n            </ul>\n            <br/><br/><br/>\n            <b>Utilisation pour l'estimation MML</b>\n            <br/>\n            <code>\n            tam.mml(resp,irtmodel=\"PCM\",verbose=FALSE )\n            </code>\n            <br/><br/>\n            <b>Arguments</b>\n            <br/>             \n            <ul>\n            <li>\n            resp: Cadre de données avec des réponses d'items polytomiques k=0,...,K. Les réponses manquantes doivent être déclarées comme NA.\n            </li>\n            <li>\n            irtmodel: Pour des pentes d'items fixes (dans tam.mml), les options incluent PCM (modèle de crédit partiel), PCM2 (modèle de crédit partiel avec paramétrisation ConQuest 'item+item*step') et RSM (modèle d'échelle de notation ; la paramétrisation ConQuest 'item+step'). \n            <br/>\n            Pour des pentes d'items estimées (disponibles uniquement dans tam.mml.2pl), les options sont 2PL (toutes les pentes des catégories d'items sont estimées ; Modèle de Réponse d'Item Nominal), GPCM (modèle de crédit partiel généralisé dans lequel chaque item obtient un et un seul paramètre de pente par dimension) et 2PL.groups (sous-ensembles d'items obtiennent les mêmes estimations de pentes d'items) et une matrice de conception E sur les pentes d'items dans le modèle de crédit partiel généralisé (GPCM.design, voir Exemples). Notez que les pentes d'items ne peuvent pas être estimées avec des conceptions facettées en utilisant la fonction tam.mml.mfr. Cependant, il est facile d'utiliser des matrices de conception prédéfinies et d'appliquer certaines restrictions à tam.mml.2pl.\n            </li>\n            <li>\n            verbose: Logique indiquant si la sortie doit être imprimée pendant les itérations. \n            </li>\n            </ul>\n            <br/><br/>\n            <b>Paquets</b>\n            <br/>\n            TAM, eRm\n            <br/><br/>\n            <b>Aide</b>\n            <br/>\n            help(PCM, package='eRm')\n            <br/>\n            help(tam.mml, package='TAM')\n"
  }
}