{
  "title": "Régression Logistique",
  "navigation": "Logistique, avancé",
  "modelname": "Entrez le nom du modèle",
  "dependent": "Variable dépendante",
  "independent": "Variable(s) indépendante(s)",
  "generateplotchk": "Tracer les résidus vs ajustés, normal Q-Q, échelle-localisation et résidus vs levier",
  "destination2": "Spécifiez une variable avec des poids",
  "help": {
    "title": "Régression Logistique",
    "r_help": "help(glm, package ='stats')",
    "body": "\n<b>Description</b></br>\nConstruit un modèle de régression logistique binaire en utilisant un constructeur de formule. Nous utilisons la fonction glm en passant le paramètre family =binomial(link='logit'). Nous affichons un résumé du modèle, des tableaux d'analyse de variance et le R2 de McFadden.<br/>\nVous pouvez évaluer le modèle en sélectionnant le modèle créé dans le coin supérieur droit de l'écran principal de l'application et en sélectionnant le bouton Évaluer. Vous pouvez choisir d'afficher une matrice de confusion et une courbe ROC<br/>\nLe nom du modèle par défaut est Logistic1 que vous pouvez changer.<br/><br/>\nREMARQUE : Lors de la spécification d'une variable contenant des poids, soyez conscient que puisque nous utilisons l'option na.exclude pour construire le modèle, toutes les valeurs NA sont automatiquement supprimées des variables dépendantes et indépendantes.<br/> \nCela peut provoquer un décalage car les valeurs NA ne sont PAS automatiquement supprimées de la variable de poids. <br/>\nDans cette situation, vous verrez l'erreur les longueurs de variable diffèrent (trouvé pour (poids))<br/>\nPour résoudre cette erreur, allez à Variables>Valeurs Manquantes>Supprimer les NAs et sélectionnez les variables dépendantes, indépendantes et la variable de poids pour supprimer les valeurs manquantes et reconstruire le modèle.<br/>\n<br/>\n<b>Utilisation</b>\n<br/>\n<code> \nmodelname <- glm(dependentVariable ~ var1+var2+var3...,family =binomial(link='logit'),data=datasetName)\n#Résumé du modèle<br/>\nsummary(modelname)<br/>\n#Affichage du tableau Anova<br/>\nanova(modelname)<br/>\n#Tracer les résidus vs. ajustés, normal Q-Q, échelle-localisation, résidus vs. levier<br/>\nplot(modelname)<br/>\n#R2 de McFadden<br/>\npR2(Logistic1)<br/>\n#rapport de cotes et intervalle de confiance à 95%<br/>\nexp(cbind(OR=coef(Logistic1), confint(Logistic1,level=0.95)))<br/>\n#Tracer le modèle<br/>\nplot(Logistic1)<br/>\n</code> <br/>\n<b>Arguments</b><br/>\n<ul>\n<li>\ndepVar: Nom de la variable dépendante.  Si nous avons un ensemble de données voitures, avec une variable classe que nous voulons prédire (la variable dépendante est la classe) entrez classe\n</li>\n<li>\nindepVars: Noms des variables indépendantes, séparées par +. Si nous avons un ensemble de données voitures, avec la variable indépendante puissance, taille du moteur, spécifiez puissance+taille du moteur). Les variables catégorielles sont automatiquement codées en variables fictives.​\n</li>\n<li>\ndata: Nom du dataframe. Lorsque vous ouvrez des cadres de données ou des ensembles de données par exemple csv, fichiers Excel, fichiers SAS dans BioStat Prime, ils sont nommés Dataset1, Dataset2, Dataset3 Donc entrez data=Dataset1​\n</li>\n</ul>\n<b>Package</b></br>\nglm</br>\n<b>Aide</b></br>\nhelp(glm, package ='stats')</br>\n<b>Références</b></br>\nhttps://datascienceplus.com/perform-logistic-regression-in-r/</br>\nhttps://www.machinelearningplus.com/machine-learning/logistic-regression-tutorial-examples-r/</br>\n<b>Autre</b></br>\nCliquez sur l'icône d'aide R pour obtenir une aide détaillée R​</br>\n\t\t\t"
  }
}