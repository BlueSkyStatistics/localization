{
  "title": "Exemple de distribution de Poisson",
  "navigation": "Exemple de distribution de Poisson",
  "entrdsname": "Entrez le nom du jeu de données",
  "lambda": "Moyenne",
  "lblnoofsamples": "Nombre d'échantillons (lignes)",
  "lblnoofobsv": "Nombre d'observations (colonnes)",
  "lblseed": "Graine",
  "lblAddtoDS": "Ajouter au jeu de données",
  "chklbl1": "Moyennes d'échantillons",
  "chklbl2": "Sommes d'échantillons",
  "chklbl3": "Écarts-types d'échantillons",
  "help": {
    "title": "Exemple de distribution de Poisson",
    "r_help": "help(rpois, package=stats)",
    "body": "\n\n            <b>Description</b>\n            <br/>\n            Densité, fonction de distribution, fonction quantile et génération aléatoire pour la distribution de Poisson avec le paramètre lambda.\n            <br/>\n            <b>Utilisation</b>\n            <br/>\n            <code>\n                dpois(x, lambda, log = FALSE)\n                <br/>\n                ppois(q, lambda, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qpois(p, lambda, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rpois(n, lambda)\n                <br/>\n            </code>\n            <br/>\n            <b>Arguments</b>\n            <br/>\n            <ul>\n                <li>x : vecteur de quantiles (entiers non négatifs).</li>\n                \n                \n                <li>q : vecteur de quantiles.</li>\n                \n                \n                <li>p : vecteur de probabilités.</li>\n                \n                \n                <li>n : nombre de valeurs aléatoires à retourner.</li>\n                \n                \n                <li>lambda : vecteur de moyennes (non négatives).</li>\n                \n                \n                <li>log, log.p : logique; si TRUE, les probabilités p sont données sous forme de log(p).</li>\n                \n                \n                <li>lower.tail : logique; si TRUE (par défaut), les probabilités sont P[X ≤ x], sinon P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Détails</b>\n            <br/>\n            La distribution de Poisson a une densité\n            <br/>\n            <code>p(x) = λ^x exp(-λ)/x!</code>\n            <br/>\n            pour x = 0, 1, 2, … . La moyenne et la variance sont E(X) = Var(X) = λ.\n            <br/>\n            Notez que λ = 0 est vraiment un cas limite (en posant 0^0 = 1) entraînant une masse ponctuelle à 0, voir aussi l'exemple.\n            <br/>\n            Si un élément de x n'est pas un entier, le résultat de dpois est zéro, avec un avertissement. p(x) est calculé en utilisant l'algorithme de Loader, voir la référence dans dbinom.\n            <br/>\n            Le quantile est à droite continu : qpois(p, lambda) est le plus petit entier x tel que P(X ≤ x) ≥ p.\n            <br/>\n            En réglant lower.tail = FALSE, il est possible d'obtenir des résultats beaucoup plus précis lorsque la valeur par défaut, lower.tail = TRUE, renverrait 1, voir l'exemple ci-dessous.\n            <br/>\n            <br/><b>Valeur</b>\n            <br/>\n            dpois donne la densité (log), ppois donne la fonction de distribution (log), qpois donne la fonction quantile, et rpois génère des déviations aléatoires.\n            <br/>\n            Une lambda invalide entraînera un retour NaN, avec un avertissement.\n            <br/>\n            La longueur du résultat est déterminée par n pour rpois, et est le maximum des longueurs des arguments numériques pour les autres fonctions.\n            <br/>\n            Les arguments numériques autres que n sont recyclés à la longueur du résultat. Seuls les premiers éléments des arguments logiques sont utilisés.            \n"
  }
}