{
  "title": "Diagramă de tulpină și frunză",
  "navigation": "Tulpină și frunză",
  "Destination": "Selectați variabila de graficat",
  "label1": "Cifra frunzei",
  "label2": "Părți pe tulpină",
  "label3": "Stilul tulpinilor împărțite",
  "label4": "Opțiuni",
  "Value": "Introduceți o valoare",
  "Automatic": "Automat",
  "EnterValue": "Specificați valoarea",
  "StemAutomatic": "Automat",
  "SpecifyStemValue": "Specificați valoarea",
  "StemValue": "Introduceți o valoare",
  "Tukey": "Tukey",
  "Repeated": "Cifrele tulpinii repetate",
  "Trim": "Tăiați valorile atipice",
  "Depths": "Arată adâncimile",
  "NegativeLeaves": "Inversare frunze negative",
  "help": {
    "title": "Diagramă de tulpină și frunză",
    "r_help": "help(stem.leaf, package='aplpack')",
    "body": "\n            <b>Descriere</b></br>\n            afișare tulpină și frunză și afișare tulpină și frunză față în față\n            Creează o afișare clasică (\"stil Tukey\") a tulpinii și frunzei / afișare tulpină și frunză față în față.\n            <br/>\n            <b>Utilizare</b>\n            <br/>\n            <code> \n            stem.leaf(data, unit, m, Min, Max, rule.line = c(\"Dixon\", \"Velleman\", \"Sturges\"),\n                style = c(\"Tukey\", \"bare\"), trim.outliers = TRUE, depths = TRUE,\n                reverse.negative.leaves = TRUE, na.rm = FALSE, printresult = TRUE)<br/><br/>\n            stem.leaf.backback(x,y, unit, m, Min, Max, rule.line = c(\"Dixon\", \"Velleman\", \n                \"Sturges\"), style = c(\"Tukey\", \"bare\"), trim.outliers = TRUE, \n                depths = TRUE, reverse.negative.leaves = TRUE, na.rm = FALSE,\n                printresult=TRUE, show.no.depths = FALSE, add.more.blanks = 0,\n                back.to.back = TRUE)\n            </code> <br/>\n            <b>Argumente</b><br/>\n            <ul>\n            <li>\n            data: un vector numeric de date\n            </li>\n            <li>\n            x: primul set de date pentru stem.leaf.backback\n            </li>\n            <li>\n            y: al doilea set de date pentru stem.leaf.backback\n            </li>\n            <li>\n            unit: unitatea frunzei, ca o putere de 10 (de exemplu, 100, .01); dacă unitatea lipsește, unitatea este aleasă de stem.leaf.\n            </li>\n            <li>\n            m: numărul de părți (1, 2 sau 5) în care fiecare tulpină va fi separată; dacă lipsește m, numărul de părți/tulpină (m) este ales de stem.leaf.\n            </li>\n            <li>\n            Min: cea mai mică valoare non-atipică; omiteți pentru alegerea automată.\n            </li>\n            <li>\n            Max: cea mai mare valoare non-atipică; omiteți pentru alegerea automată.\n            </li>\n            <li>\n            rule.line: regula de utilizat pentru alegerea numărului dorit de linii în afișare; \"Dixon\" = 10*log10(n); \"Velleman\" = 2*sqrt(n); \"Sturges\" = 1 + log2(n); valoarea implicită este \"Dixon\".\n            </li>\n            <li>\n            style: \"Tukey\" (implicit) pentru tulpini împărțite \"stil Tukey\"; \"bare\" pentru tulpini împărțite care repetă pur și simplu cifrele tulpinii.\n            </li>\n            <li>\n            trim.outliers: dacă este TRUE (implicit), valorile atipice sunt plasate pe tulpinile LO și HI.\n            </li>\n            <li>\n            depths: dacă este TRUE (implicit), imprimă o coloană de \"adâncimi\" la stânga tulpinilor; adâncimea tulpinii care conține mediana este numărul de tulpini închis între paranteze.\n            </li>\n            <li>\n            reverse.negative.leaves: dacă este TRUE (implicit), inversează direcția frunzelor pe tulpinile negative (deci, de exemplu, frunza 9 vine înaintea frunzei 8, etc.).\n            </li>\n            <li>\n            na.rm: dacă este TRUE, valorile \"NA\" sunt eliminate; altfel, numărul de NAs este numărat.\n            </li>\n            <li>\n            printresult: dacă este TRUE, ieșirea afișării tulpină și frunză este afișată prin cat.\n            </li>\n            <li>\n            show.no.depths: dacă este TRUE, nu se imprimă adâncimi.\n            </li>\n            <li>\n            add.more.blanks: numărul de spații goale care se adaugă pe lângă frunze.\n            </li>\n            <li>\n            back.to.back: dacă este FALSE, se construiesc două afișări paralele de tulpină și frunză.\n            </li>\n            </ul>\n            <b>Detalii</b></br>\n            Spre deosebire de funcția stem din pachetul de bază, stem.leaf produce afișări clasice de tulpină și frunză, așa cum este descris în Analiza Exploratorie a Datelor a lui Tukey. Funcția stem.leaf.backback creează afișări de tulpină și frunză față în față.\n            <br/>\n            <b>Valoare</b></br>\n            Afișarea tulpinii și frunzei calculate este imprimată. În mod invizibil, stem.leaf returnează afișarea tulpinii și frunzei ca o listă care conține elementele info (legendă), display (afișarea tulpinii și frunzei ca vector de caractere), lower (valori foarte mici), upper (valori foarte mari), depths (vector de adâncimi), stem (informații despre tulpină ca vector) și leaves (vector de frunze).</br>\n            <b>Exemple</b></br>\n            stem.leaf(co2)\n            stem.leaf.backback(co2[1:120],co2[121:240])</br>\n            stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE)</br>\n            stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE,\n                               add.more.blanks = 3, show.no.depths = TRUE)</br>\n            stem.leaf.backback(rivers[-(1:30)],rivers[1:30], back.to.back = FALSE, unit=10, m=5, \n                               Min=200, Max=900, add.more.blanks = 20, show.no.depths = TRUE)</br>\n            <b>Pachet</b></br>\n            aplpack</br>\n            <b>Ajutor</b></br>\n            help(stem.leaf, package=aplpack)</br>\n    "
  }
}