{
  "title": "Împărțire Stratificată",
  "navigation": "Împărțire Stratificată",
  "traindataset": "Introduceți numele setului de date pentru antrenament",
  "testdataset": "Introduceți numele setului de date pentru testare",
  "split": "Introduceți procentajul de împărțire",
  "seed": "Setați semințele",
  "dependent": "Variabila din care se construiesc eșantioanele stratificate",
  "help": {
    "title": "Împărțire Stratificată",
    "r_help": "help(createDataPartition, package=\"caret\")",
    "body": "\n<b>Descriere</b></br>\nO serie de împărțiri test/antrenament sunt create folosind createDataPartition, în timp ce createResample creează unul sau mai multe eșantioane bootstrap. createFolds împarte datele în k grupuri, în timp ce createTimeSlices creează o împărțire de validare încrucișată pentru datele de serie. groupKFold împarte datele pe baza unui factor de grupare.\n<br/>\n<b>Utilizare</b>\n<br/>\n<code> \ncreateDataPartition(y, times = 1, p = 0.5, list = TRUE, groups = min(5,length(y)))<br/>\ncreateFolds(y, k = 10, list = TRUE, returnTrain = FALSE)<br/>\ncreateTimeSlices(y, initialWindow, horizon = 1, fixedWindow = TRUE,skip = 0)<br/>\ngroupKFold(group, k = length(unique(group)))<br/>\n</code> <br/>\n<b>Argumente</b><br/>\n<ul>\n<li>\ny: un vector de rezultate. Pentru createTimeSlices, acestea ar trebui să fie în ordine cronologică.\n</li>\n<li>\ntimes: numărul de împărțiri de creat\n</li>\n<li>\np: procentajul de date care merge la antrenament\n</li>\n<li>\nlist: logic - rezultatele ar trebui să fie într-o listă (TRUE) sau o matrice cu numărul de rânduri egal cu floor(p * length(y)) și coloane de times.\n</li>\n<li>\ngroups: pentru y numeric, numărul de intervale în cuantile (vezi mai jos)\n</li>\n<li>\nk: un întreg pentru numărul de folduri.\n</li>\n<li>\nreturnTrain: un logic. Când este adevărat, valorile returnate sunt pozițiile eșantionului corespunzătoare datelor utilizate în timpul antrenamentului. Acest argument funcționează doar împreună cu list = TRUE\n</li>\n<li>\ninitialWindow: Numărul inițial de valori consecutive în fiecare eșantion de set de antrenament\n</li>\n<li>\nhorizon: numărul de valori consecutive în eșantionul de set de testare\n</li>\n<li>\nfixedWindow: logic, dacă este FALSE, toate eșantioanele de antrenament încep de la 1\n</li>\n<li>\nskip: întreg, câte (dacă există) eșantioane săriți pentru a subția cantitatea totală\n</li>\n<li>\ngroup: un vector de grupuri a căror lungime se potrivește cu numărul de rânduri din setul de date general.\n</li>\n</ul>\n<b>Detalii</b></br>\nPentru eșantioanele bootstrap, se folosește eșantionare aleatoare simplă.\nPentru alte împărțiri de date, eșantionarea aleatoare se face în cadrul nivelurilor lui y atunci când y este un factor, în încercarea de a echilibra distribuțiile de clasă în cadrul împărțirilor.</br>\nPentru y numeric, eșantionul este împărțit în secțiuni de grupuri pe baza percentilelor, iar eșantionarea se face în cadrul acestor subgrupuri. Pentru createDataPartition, numărul de percentile este setat prin argumentul groups. Pentru createFolds și createMultiFolds, numărul de grupuri este setat dinamic pe baza dimensiunii eșantionului și k. Pentru dimensiuni mai mici ale eșantionului, aceste două funcții pot să nu facă împărțiri stratificate și, în cel mai bun caz, vor împărți datele în quartile.</br>\nDe asemenea, pentru createDataPartition, dimensiunile foarte mici ale claselor (<= 3) pot să nu apară în ambele date de antrenament și testare.</br>\nPentru validarea încrucișată k-fold multiplă, se creează folduri complet independente. Numele obiectelor din listă vor denota apartenența la fold folosind modelul \"Foldi.Repj\", ceea ce înseamnă secțiunea ith (din k) a setului jth de validare încrucișată (din times). Rețineți că această funcție apelează createFolds cu list = TRUE și returnTrain = TRUE.</br>\nHyndman și Athanasopoulos (2013) discută tehnici de prognoză cu origine rulantă care mută seturile de antrenament și testare în timp. createTimeSlices poate crea indicii pentru acest tip de împărțire.</br>\nPentru validarea încrucișată k-fold de grup, datele sunt împărțite astfel încât niciun grup să nu fie conținut în ambele seturi de modelare și de reținere. Unul sau mai multe grupuri ar putea fi lăsate deoparte, în funcție de valoarea lui k.</br>\n<b>Valoare</b><br/>\nO listă sau matrice de întregi de poziție a rândurilor corespunzătoare datelor de antrenament. Pentru createTimeSlices, sub-eșantioanele sunt numite după indicele final al fiecărui sub-eșantion de antrenament.</br>\n<b>Pachet</b></br>\ncaret</br>\nklaR</br>\n<b>Ajutor</b></br>\nhelp(createDataPartition, package=\"caret\")\n        "
  }
}