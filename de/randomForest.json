{
  "title": "Zufallswald",
  "label1": "Der Zufallswald kann im überwachten oder unüberwachten Modus ausgeführt werden. Um im unüberwachten Modus zu arbeiten, geben Sie keine abhängige Variable an.",
  "navigation": "Zufallswald",
  "modelname": "Modellnamen eingeben",
  "dependentvar": "Abhängige Variable",
  "independentvars": "Unabhängige Variable(n)",
  "ntree": "Anzahl der Bäume",
  "mtry": "mtry",
  "proximity": "Nähe:",
  "newds": "Geben Sie den Datensatznamen an, um die Nähe zu speichern:",
  "predictor": "Vorhergesagte Werte speichern:",
  "newcolname": "Geben Sie den neuen Spaltennamen für die vorhergesagten Werte an:",
  "help": {
    "title": "Zufallswald",
    "r_help": "help(randomForest,package='randomForest')",
    "body": "\n                <b>Beschreibung</b></br>\nrandomForest implementiert Breimans Zufallswaldalgorithmus (basierend auf Breiman und Cutlers ursprünglichem Fortran-Code) für Klassifikation und Regression. Es kann auch im unüberwachten Modus verwendet werden, um die Nähe zwischen Datenpunkten zu bewerten.\n<br/>\n<b>Verwendung</b>\n<br/>\n<code> \nrandomForest(x, y=NULL,  ntree=500, importance=FALSE, proximity, ...)\n</code> <br/>\n<b>Argumente</b><br/>\n<ul>\n<li>\nx : Ein Datenrahmen oder eine Matrix von Prädiktoren oder eine Formel, die das zu fitierende Modell beschreibt (für die Druckmethode ein randomForest-Objekt).\n</li>\n<li>\ny: Ein Antwortvektor. Wenn ein Faktor, wird Klassifikation angenommen, andernfalls wird Regression angenommen. Wenn weggelassen, wird randomForest im unüberwachten Modus ausgeführt.\n</li>\n<li>\nntree : Anzahl der zu wachsenden Bäume. Dies sollte nicht auf eine zu kleine Zahl gesetzt werden, um sicherzustellen, dass jede Eingabezeile mindestens ein paar Mal vorhergesagt wird.\n</li>\n<li>\nimportance : Soll die Wichtigkeit der Prädiktoren bewertet werden? \n</li>\n<li>\nproximity : Soll das Maß für die Nähe zwischen den Zeilen berechnet werden?\n</li>\n<li>\n... : optionale Parameter, die an die niedrigstufige Funktion randomForest.default übergeben werden.\n</li>\n</ul>\n<b>Wert</b><br/>\nEin Objekt der Klasse randomForest, das eine Liste mit den folgenden Komponenten ist:<br/>\ncall: der ursprüngliche Aufruf an randomForest<br/>\ntype: eine von Regression, Klassifikation oder unüberwacht.<br/>\npredicted: die vorhergesagten Werte der Eingabedaten basierend auf Out-of-Bag-Proben.<br/>\nimportance:\ta Matrix mit nclass + 2 (für Klassifikation) oder zwei (für Regression) Spalten. Für die Klassifikation sind die ersten nclass-Spalten die klassen-spezifischen Maße, die als mittlere Abnahme der Genauigkeit berechnet werden. Die nclass + 1. Spalte ist die mittlere Abnahme der Genauigkeit über alle Klassen. Die letzte Spalte ist die mittlere Abnahme des Gini-Index. Für die Regression ist die erste Spalte die mittlere Abnahme der Genauigkeit und die zweite die mittlere Abnahme des MSE. Wenn importance=FALSE, wird das letzte Maß dennoch als Vektor zurückgegeben.<br/>\nimportanceSD: Die „Standardfehler“ des auf Permutation basierenden Wichtigkeitsmaßes. Für die Klassifikation eine p mal nclass + 1 Matrix, die den ersten nclass + 1 Spalten der Wichtigkeitsmatrix entspricht. Für die Regression ein Vektor der Länge p.<br/>\nlocalImp: eine p mal n Matrix, die die fallweise Wichtigkeitsmaße enthält, wobei das [i,j]-Element die Wichtigkeit der i-ten Variablen für den j-ten Fall ist. NULL, wenn localImp=FALSE.<br/>\nntree: Anzahl der gewachsenen Bäume.<br/>\nmtry: Anzahl der Prädiktoren, die für die Aufteilung an jedem Knoten ausgewählt werden.<br/>\nforest: (eine Liste, die den gesamten Wald enthält; NULL, wenn randomForest im unüberwachten Modus ausgeführt wird oder wenn keep.forest=FALSE.<br/>\nerr.rate: (nur Klassifikation) Vektor der Fehlerquoten der Vorhersage auf den Eingabedaten, wobei das i-te Element die (OOB) Fehlerquote für alle Bäume bis zum i-ten ist.<br/>\nconfusion: (nur Klassifikation) die Verwirrungsmatrix der Vorhersage (basierend auf OOB-Daten).<br/>\nvotes: (nur Klassifikation) eine Matrix mit einer Zeile für jeden Eingabedatenpunkt und einer Spalte für jede Klasse, die den Anteil oder die Anzahl der (OOB) „Stimmen“ aus dem Zufallswald angibt.<br/>\noob.times: Anzahl der Fälle, die „out-of-bag“ sind (und somit zur Berechnung der OOB-Fehlerabschätzung verwendet werden)<br/>\nproximity: wenn proximity=TRUE, wenn randomForest aufgerufen wird, eine Matrix der Nähe zwischen den Eingaben (basierend auf der Häufigkeit, mit der Paare von Datenpunkten in denselben terminalen Knoten sind).<br/>\nmse\t: (nur Regression) Vektor der mittleren quadratischen Fehler: Summe der quadrierten Residuen geteilt durch n.<br/>\nrsq\t: (nur Regression) „Pseudo R-Quadrat“: 1 - mse / Var(y).<br/>\ntest: wenn ein Testset gegeben ist (durch die xtest- oder zusätzlich ytest-Argumente), ist diese Komponente eine Liste, die die entsprechenden vorhergesagten Werte, err.rate, Verwirrung, Stimmen (für Klassifikation) oder vorhergesagte Werte, mse und rsq (für Regression) für das Testset enthält. Wenn proximity=TRUE, gibt es auch eine Komponente, proximity, die die Nähe zwischen dem Testset sowie die Nähe zwischen Test- und Trainingsdaten enthält.<br/>\n<b>Pakete</b></br>\nrandomForest​;BlueSky</br>\n<b>Hilfe</b></br>\nFür detaillierte Hilfe klicken Sie auf das R-Symbol in der oberen rechten Ecke dieses Dialogüberlagerung oder führen Sie den folgenden Befehl im R-Syntax-Editor aus</br>\nhelp(randomForest,package='randomForest')\n                "
  }
}