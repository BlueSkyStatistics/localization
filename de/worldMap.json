{
  "title": "Weltkarte",
  "navigation": "Weltkarte",
  "region": "Variable mit Ländernamen:",
  "value": "Variable mit Werten zur Karte:",
  "colors": "Geben Sie die Anzahl der Farben ein",
  "zoomByStates": "Geben Sie die Länder ein, in die Sie hineinzoomen möchten, z.B. Vereinigte Staaten von Amerika, Kanada, Mexiko",
  "specify_a_title": "Geben Sie einen Titel ein",
  "legend": "Legende:",
  "help": {
    "title": "Weltkarte",
    "r_help": "hilfe(country_choropleth, paket='choroplethr')",
    "body": "\n            <b>Beschreibung</b></br>\n            Zeichnet eine Weltkarte und ermöglicht es Ihnen, optional in 1 oder mehrere Länder hinein zu zoomen\n             <br/>\n             <b>Verwendung</b>\n             <br/>\n             <code> \n            country_choropleth(BSkyDfForMap, title=\"\", legend=\"\", num_colors =1,zoom=NULL)\n             </code> <br/>\n             <b>Argumente</b><br/>\n             <ul>\n             <li>\n             BSkyDfForMap: Ein data.frame mit einer Spalte namens \"region\" und einer Spalte namens \"value\". Elemente in der Spalte \"region\" müssen genau mit den Namen der Regionen in der Spalte \"region\" in ?country.map übereinstimmen. Führen Sie den Code unten im anderen Abschnitt aus, um die Variablen in country.map zu sehen\n             </li>\n             <li>\n             Titel: Ein optionaler Titel für die Karte.\n             </li>\n             <li>\n             Legende: Ein optionaler Name für die Legende.\n             </li>\n             <li>\n             num_colors: Die Anzahl der Farben auf der Karte. Ein Wert von 1 verwendet eine kontinuierliche Skala. Ein Wert in [2, 9] verwendet so viele Farben.\n             </li>\n             <li>\n             zoom: Ein optionaler Vektor von Ländern, in die hinein gezoomt werden soll. Elemente dieses Vektors müssen genau mit den Namen der Länder übereinstimmen, wie sie in der Spalte \"region\" von ?country.regions erscheinen\n             </li>\n             </ul>\n             <b>Paket</b></br>\n             choroplethr;choroplethrMaps;</br>\n             <b>Hilfe</b></br>\n             hilfe(country_choropleth, paket='choroplethr')</br>\n             <b>Sonstiges</b></br>\n             <code> \n             # Führen Sie den Code unten aus, um auf das state.map-Dataset zuzugreifen<br/>\n             library(choroplethr)<br/>\n             library(choroplethrMaps)<br/>\n             data(country.map)<br/>\n             country.map<br/>\n             </code> <br/>\n    "
  }
}