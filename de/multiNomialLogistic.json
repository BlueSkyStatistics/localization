{
  "title": "Multinomial Logit",
  "navigation": "Multinomial Logit",
  "modelname": "Modellnamen eingeben",
  "dependent": "Abhängige Variable",
  "independent": "Unabhängige Variable(n)",
  "generateplotchk": "Residuen gegen Fitted, normales Q-Q, Skalen-Standort und Residuen gegen Hebelwirkung plotten",
  "destination2": "Geben Sie eine Variable mit Gewichten an",
  "help": {
    "title": "Multinomial Logit",
    "r_help": "help(multinom, package=nnet)",
    "body": "\n            <b>Beschreibung</b></br>\n            Passt multinomiale log-lineare Modelle über neuronale Netze an.\n            <br/>\n            <b>Verwendung</b>\n            <br/>\n            <code> \n            multinom(formula, data, weights, subset, na.action,<br/>\n                     contrasts = NULL, Hess = FALSE, summ = 0, censored = FALSE,<br/>\n                     model = FALSE, ...)<br/>\n            </code> <br/>\n            <b>Argumente</b><br/>\n            <ul>\n            <li>\n            formula: ein Formel-Ausdruck wie für Regressionsmodelle, in der Form response ~ predictors. Die Antwort sollte ein Faktor oder eine Matrix mit K Spalten sein, die als Zählungen für jede der K Klassen interpretiert wird. Ein log-lineares Modell wird angepasst, mit Koeffizienten null für die erste Klasse. Ein Offset kann enthalten sein: es sollte eine numerische Matrix mit K Spalten sein, wenn die Antwort entweder eine Matrix mit K Spalten oder ein Faktor mit K >= 2 Klassen ist, oder ein numerischer Vektor für einen Antwortfaktor mit 2 Ebenen. Siehe die Dokumentation von formula() für weitere Details.\n            </li>\n            <li>\n            data: ein optionales Datenrahmen, in dem die in der Formel vorkommenden Variablen interpretiert werden.\n            </li>\n            <li>\n            weights: optionale Fallgewichte beim Anpassen.\n            </li>\n            <li>\n            subset: Ausdruck, der angibt, welcher Teil der Zeilen der Daten im Fit verwendet werden soll. Alle Beobachtungen sind standardmäßig enthalten.\n            </li>\n            <li>\n            na.action: eine Funktion zur Filterung fehlender Daten.\n            </li>\n            <li>\n            contrasts: eine Liste von Kontrasten, die für einige oder alle Faktoren verwendet werden, die als Variablen in der Modellformel erscheinen.\n            </li>\n            <li>\n            Hess: logisch, ob die Hessian (die beobachtete/erwartete Informationsmatrix) zurückgegeben werden soll.\n            </li>\n            <li>\n            summ: ganzzahlig; wenn ungleich null, zusammenfassen, indem doppelte Zeilen gelöscht und Gewichte angepasst werden. Methoden 1 und 2 unterscheiden sich in der Geschwindigkeit (2 verwendet C); Methode 3 kombiniert auch Zeilen mit dem gleichen X und unterschiedlichen Y, was die Basislinie für die Abweichung ändert.\n            </li>\n            <li>\n            censored: Wenn Y eine Matrix mit K Spalten ist, interpretieren Sie die Einträge als eins für mögliche Klassen, null für unmögliche Klassen, anstatt als Zählungen.\n            </li>\n            <li>\n            model: logisch. Wenn wahr, wird der Modellrahmen als Komponente Modell des zurückgegebenen Objekts gespeichert.\n            </li>\n            <li>\n            ... zusätzliche Argumente für nnet\n            </li>\n            </ul>\n            <b>Details</b></br>\n            multinom ruft nnet auf. Die Variablen auf der rechten Seite der Formel sollten grob auf [0,1] skaliert werden, oder die Anpassung wird langsam sein oder möglicherweise überhaupt nicht konvergieren.</br>\n            <b>Wert</b><br/>\n            Ein nnet-Objekt mit zusätzlichen Komponenten:<br/>\n            <li>\n            deviance: die Residualabweichung, verglichen mit dem vollständigen gesättigten Modell (das individuelle Beobachtungen genau erklärt). Auch minus zweimal die Log-Likelihood.\n            </li>\n            <li>\n            edf: die (effektive) Anzahl der Freiheitsgrade, die vom Modell verwendet werden\n            </li>\n            <li>\n            AIC: die AIC für diese Anpassung.\n            </li>\n            <li>\n            Hessian: (wenn Hess wahr ist).\n            </li>\n            <li>\n            model: (wenn model wahr ist).\n            </li>\n            <b>Beispiele</b><br/>\n            <code> \n            options(contrasts = c(\"contr.treatment\", \"contr.poly\"))<br/>\n            library(MASS)<br/>\n            example(birthwt)<br/>\n            (bwt.mu <- multinom(low ~ ., bwt))<br/>\n            </code>\n            <b>Pakete</b></br>\n            nnet</br>\n            <b>Hilfe</b></br>\n            Für detaillierte Hilfe klicken Sie auf das R-Symbol in der oberen rechten Ecke dieses Dialogüberlagerung oder führen Sie den folgenden Befehl aus help(multinom, package=nnet), indem Sie einen R-Code-Chunk erstellen, indem Sie + im Ausgabefenster klicken\n           "
  }
}