{
  "title": "Logistische Regression",
  "navigation": "Logistisch, fortgeschritten",
  "modelname": "Modellnamen eingeben",
  "dependent": "Abhängige Variable",
  "independent": "Unabhängige Variable(n)",
  "generateplotchk": "Residuals vs. Fitted, Normal Q-Q, Scale-Location und Residuals vs. Leverage plotten",
  "destination2": "Eine Variable mit Gewichten angeben",
  "help": {
    "title": "Logistische Regression",
    "r_help": "help(glm, package ='stats')",
    "body": "\n<b>Beschreibung</b></br>\nBaut ein binäres logistisches Regressionsmodell mit einem Formel-Builder auf. Wir verwenden die glm-Funktion und übergeben den Parameter family = binomial(link='logit'). Wir zeigen eine Zusammenfassung des Modells, Analyse der Varianz-Tabellen und McFadden R2 an.<br/>\nSie können das Modell bewerten, indem Sie das oben rechts auf dem Hauptanwendungsbildschirm erstellte Modell auswählen und die Schaltfläche Score auswählen. Sie können wählen, ob Sie eine Verwirrungsmatrix und eine ROC-Kurve anzeigen möchten.<br/>\nDer Standardmodellname ist Logistic1, den Sie ändern können.<br/><br/>\nHINWEIS: Wenn Sie eine Variable mit Gewichten angeben, beachten Sie, dass alle NA-Werte automatisch aus den abhängigen und unabhängigen Variablen entfernt werden, da wir die Option na.exclude verwenden, um das Modell zu erstellen.<br/>\nDies kann zu einer Diskrepanz führen, da NA-Werte NICHT automatisch aus der Gewichtungsvariable entfernt werden.<br/>\nIn diesem Fall sehen Sie den Fehler, dass die Längen der Variablen unterschiedlich sind (gefunden für (weights)).<br/>\nUm diesen Fehler zu beheben, gehen Sie zu Variablen> Fehlende Werte> NAs entfernen und wählen Sie die abhängigen, unabhängigen Variablen und die Gewichtungsvariable aus, um fehlende Werte zu entfernen und das Modell neu zu erstellen.<br/>\n<br/>\n<b>Verwendung</b>\n<br/>\n<code> \nmodelname <- glm(dependentVariable ~ var1+var2+var3...,family =binomial(link='logit'),data=datasetName)\n#Zusammenfassung des Modells<br/>\nsummary(modelname)<br/>\n#Anzeigen der Anova-Tabelle<br/>\nanova(modelname)<br/>\n#Plots Residuals vs. Fitted, Normal Q-Q, Scale-Location, Residuals vs. Leverage<br/>\nplot(modelname)<br/>\n#McFadden R2<br/>\npR2(Logistic1)<br/>\n#Odds Ratio und 95% Konfidenzintervall<br/>\nexp(cbind(OR=coef(Logistic1), confint(Logistic1,level=0.95)))<br/>\n#Modell plotten<br/>\nplot(Logistic1)<br/>\n</code> <br/>\n<b>Argumente</b><br/>\n<ul>\n<li>\ndepVar: Name der abhängigen Variable. Wenn wir einen Datensatz mit Autos haben, mit einer Variablen Klasse, die wir vorhersagen möchten (abhängige Variable ist Klasse), geben Sie Klasse ein.\n</li>\n<li>\nindepVars: Namen der unabhängigen Variablen, getrennt durch +. Wenn wir einen Datensatz mit Autos haben, mit unabhängigen Variablen wie Pferdestärke, Motorgröße, geben Sie Pferdestärke+Motorgröße an). Kategorische Variablen werden automatisch dummy-codiert.​\n</li>\n<li>\ndata: Name des Dataframes. Wenn Sie Datenrahmen oder Datensätze wie csv, Excel-Dateien, SAS-Dateien in BioStat Prime öffnen, werden sie Dataset1, Dataset2, Dataset3 genannt. Geben Sie also data=Dataset1​ ein.\n</li>\n</ul>\n<b>Pakete</b></br>\nglm</br>\n<b>Hilfe</b></br>\nhelp(glm, package ='stats')</br>\n<b>Referenzen</b></br>\nhttps://datascienceplus.com/perform-logistic-regression-in-r/</br>\nhttps://www.machinelearningplus.com/machine-learning/logistic-regression-tutorial-examples-r/</br>\n<b>Sonstiges</b></br>\nKlicken Sie auf das R-Hilfe-Symbol, um detaillierte R-Hilfe zu erhalten​</br>\n\t\t\t"
  }
}