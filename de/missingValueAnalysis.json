{
  "title": "Analyse fehlender Werte, Zeilenlayout",
  "navigation": "Zeilenlayout",
  "subsetvars": "Wählen Sie die Variable(n) aus, die auf fehlende Werte analysiert werden sollen",
  "chk1": "Ergebnisse nach der Anzahl der fehlenden Werte sortieren",
  "chk2": "Kumulative Summe der Fehlenden zu den Daten hinzufügen",
  "help": {
    "title": "Analyse fehlender Werte, Zeilenlayout",
    "r_help": "help(miss_var_summary, package ='naniar')",
    "body": "\n<b>Beschreibung</b></br>\nAnalysiert fehlende Werte und zeigt die Ergebnisse in Zeilen an, zeigt zusammenfassende Informationen zu fehlenden Werten auf Variablenebene an und listet die Anzahl der fehlenden Werte in jeder Zeile für die analysierten Variablen auf. </br>\nBietet eine Zusammenfassung für jede Variable der Anzahl, Prozent der Fehlenden und der kumulierten Summe der Fehlenden in der Reihenfolge der Variablen. Standardmäßig wird nach den meisten Fehlenden in jeder Variablen sortiert.\n<br/>\n<b>Verwendung</b>\n<br/>\n<code> \nmiss_var_summary(data, order = FALSE, add_cumsum = FALSE, ...)\n</code> <br/>\nArgumente\n<ul>\n<li>\ndata: ein Dataframe\n</li>\n<li>\norder: ein logisches Argument, das angibt, ob das Ergebnis nach n_miss sortiert werden soll. Standardmäßig ist es TRUE. Wenn FALSE, bleibt die Reihenfolge der Variablen die Eingabereihenfolge.\n</li>\n<li>\nadd_cumsum: logisches Argument, das angibt, ob die kumulierte Summe der Fehlenden zu den Daten hinzugefügt werden soll oder nicht. Dies kann nützlich sein, um Muster der Nichtantwort zu erkunden. Diese werden als kumulierte Summe der Fehlenden in den Variablen berechnet, wie sie zuerst der Funktion präsentiert werden.</br>\n</li>\n</ul>\n<b>Details</b></br>\nein Tibble des Prozentsatzes fehlender Daten in jeder Variablen<br/>\n<b>Paket</b></br>\nnaniar</br>\n<b>Hilfe</b></br>\nhelp(miss_var_summary, package ='naniar')<br/><br/>\n<b>Beschreibung</b></br>\nBietet eine Zusammenfassung für jeden Fall in den Daten der Anzahl, Prozent der Fehlenden und der kumulierten Summe der Fehlenden in der Reihenfolge der Variablen. Standardmäßig wird nach den meisten Fehlenden in jeder Variablen sortiert.\n<br/>\n<b>Verwendung</b>\n<br/>\n<code> \nmiss_case_summary(data, order = TRUE, add_cumsum = FALSE, ...)\n</code> <br/>\n<b>Argumente</b><br/>\n<ul>\n<li>\ndata: ein Dataframe\n</li>\n<li>\norder: ein logisches Argument, das angibt, ob das Ergebnis nach n_miss sortiert werden soll. Standardmäßig ist es TRUE. Wenn FALSE, bleibt die Reihenfolge der Variablen die Eingabereihenfolge.\n</li>\n<li>\nadd_cumsum: logisches Argument, das angibt, ob die kumulierte Summe der Fehlenden zu den Daten hinzugefügt werden soll oder nicht. Dies kann nützlich sein, um Muster der Nichtantwort zu erkunden. Diese werden als kumulierte Summe der Fehlenden in den Variablen berechnet, wie sie zuerst der Funktion präsentiert werden.\n</li>\n</ul>\n<b>Werte</b><br/>\nein Tibble des Prozentsatzes fehlender Daten in jedem Fall.<br/>\n<b>Paket</b></br>\nnaniar</br>\n<b>Hilfe</b></br>\nhelp(miss_case_summary, package ='naniar')\n"
  }
}