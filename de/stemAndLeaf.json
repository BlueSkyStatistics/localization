{
  "title": "Stamm- und Blattdiagramm",
  "navigation": "Stamm und Blatt",
  "Destination": "Wählen Sie die Variable zum Plotten aus",
  "label1": "Blattziffer",
  "label2": "Teile pro Stamm",
  "label3": "Stil der geteilten Stämme",
  "label4": "Optionen",
  "Value": "Geben Sie einen Wert ein",
  "Automatic": "Automatisch",
  "EnterValue": "Wert angeben",
  "StemAutomatic": "Automatisch",
  "SpecifyStemValue": "Wert angeben",
  "StemValue": "Geben Sie einen Wert ein",
  "Tukey": "Tukey",
  "Repeated": "Wiederholte Stammziffern",
  "Trim": "Ausreißer trimmen",
  "Depths": "Tiefen anzeigen",
  "NegativeLeaves": "Negative Blätter umkehren",
  "help": {
    "title": "Stamm- und Blattdiagramm",
    "r_help": "help(stem.leaf, package='aplpack')",
    "body": "\n            <b>Beschreibung</b></br>\n            Stamm- und Blattdarstellung und Rück-zu-Rück-Stamm- und Blattdarstellung\n            Erstellt eine klassische (\"Tukey-Stil\") Stamm- und Blattdarstellung / Rück-zu-Rück-Stamm- und Blattdarstellung.\n            <br/>\n            <b>Verwendung</b>\n            <br/>\n            <code> \n            stem.leaf(data, unit, m, Min, Max, rule.line = c(\"Dixon\", \"Velleman\", \"Sturges\"),\n                style = c(\"Tukey\", \"bare\"), trim.outliers = TRUE, depths = TRUE,\n                reverse.negative.leaves = TRUE, na.rm = FALSE, printresult = TRUE)<br/><br/>\n            stem.leaf.backback(x,y, unit, m, Min, Max, rule.line = c(\"Dixon\", \"Velleman\", \n                \"Sturges\"), style = c(\"Tukey\", \"bare\"), trim.outliers = TRUE, \n                depths = TRUE, reverse.negative.leaves = TRUE, na.rm = FALSE,\n                printresult=TRUE, show.no.depths = FALSE, add.more.blanks = 0,\n                back.to.back = TRUE)\n            </code> <br/>\n            <b>Argumente</b><br/>\n            <ul>\n            <li>\n            data: ein numerischer Vektor von Daten\n            </li>\n            <li>\n            x: erster Datensatz für stem.leaf.backback\n            </li>\n            <li>\n            y: zweiter Datensatz für stem.leaf.backback\n            </li>\n            <li>\n            unit: Blatt-Einheit, als Potenz von 10 (z.B. 100, .01); wenn die Einheit fehlt, wird die Einheit von stem.leaf gewählt.\n            </li>\n            <li>\n            m: Anzahl der Teile (1, 2 oder 5), in die jeder Stamm unterteilt wird; wenn m fehlt, wird die Anzahl der Teile/Stamm (m) von stem.leaf gewählt.\n            </li>\n            <li>\n            Min: kleinster nicht-ausreißender Wert; weglassen für automatische Wahl.\n            </li>\n            <li>\n            Max: größter nicht-ausreißender Wert; weglassen für automatische Wahl.\n            </li>\n            <li>\n            rule.line: die Regel zur Auswahl der gewünschten Anzahl von Linien in der Darstellung; \"Dixon\" = 10*log10(n); \"Velleman\" = 2*sqrt(n); \"Sturges\" = 1 + log2(n); die Standardregel ist \"Dixon\".\n            </li>\n            <li>\n            style: \"Tukey\" (Standard) für \"Tukey-Stil\" geteilte Stämme; \"bare\" für geteilte Stämme, die einfach die Stammziffern wiederholen.\n            </li>\n            <li>\n            trim.outliers: wenn TRUE (Standard), werden Ausreißer auf LO- und HI-Stämmen platziert.\n            </li>\n            <li>\n            depths: wenn TRUE (Standard), wird eine Spalte von \"Tiefen\" links von den Stämmen ausgegeben; die Tiefe des Stammes, der den Median enthält, ist die Stammanzahl in Klammern.\n            </li>\n            <li>\n            reverse.negative.leaves: wenn TRUE (Standard), wird die Richtung der Blätter auf negativen Stämmen umgekehrt (d.h. das Blatt 9 kommt vor dem Blatt 8, usw.).\n            </li>\n            <li>\n            na.rm: wenn TRUE werden \"NA\"-Werte entfernt, andernfalls wird die Anzahl der NAs gezählt.\n            </li>\n            <li>\n            printresult: wenn TRUE wird die Ausgabe der Stamm- und Blattdarstellung ausgegeben.\n            </li>\n            <li>\n            show.no.depths: wenn TRUE werden keine Tiefen ausgegeben.\n            </li>\n            <li>\n            add.more.blanks: Anzahl der Leerzeichen, die neben den Blättern hinzugefügt werden.\n            </li>\n            <li>\n            back.to.back: wenn FALSE werden zwei parallele Stamm- und Blattdarstellungen erstellt.\n            </li>\n            </ul>\n            <b>Details</b></br>\n            Im Gegensatz zur Stammfunktion im Basis-Paket erzeugt stem.leaf klassische Stamm- und Blattdarstellungen, wie sie in Tukeys Exploratory Data Analysis beschrieben sind. Die Funktion stem.leaf.backback erstellt Rück-zu-Rück-Stamm- und Blattdarstellungen.\n            <br/>\n            <b>Wert</b></br>\n            Die berechnete Stamm- und Blattdarstellung wird ausgegeben. Unsichtbar gibt stem.leaf die Stamm- und Blattdarstellung als Liste zurück, die die Elemente info (Legende), display (Stamm- und Blattdarstellung als Zeichenvektor), lower (sehr kleine Werte), upper (sehr große Werte), depths (Vektor der Tiefen), stem (Staminformationen als Vektor) und leaves (Vektor der Blätter) enthält.</br>\n            <b>Beispiele</b></br>\n            stem.leaf(co2)\n            stem.leaf.backback(co2[1:120],co2[121:240])</br>\n            stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE)</br>\n            stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE,\n                               add.more.blanks = 3, show.no.depths = TRUE)</br>\n            stem.leaf.backback(rivers[-(1:30)],rivers[1:30], back.to.back = FALSE, unit=10, m=5, \n                               Min=200, Max=900, add.more.blanks = 20, show.no.depths = TRUE)</br>\n            <b>Paket</b></br>\n            aplpack</br>\n            <b>Hilfe</b></br>\n            help(stem.leaf, package=aplpack)</br>\n    "
  }
}