{
    "title": "Umformen, von breit zu lang",
    "label2": "Wählen Sie die Variablen, die umgeformt werden sollen, oder wählen Sie alternativ die Variablen, die nicht umgeformt werden sollen. Im letzteren Fall werden alle verbleibenden Variablen in Spalte(n) umgeformt.",
    "navigation": "Länger",
    "label0": "Sie können wählen, ob die Ergebnisse in einem neuen Datensatz gespeichert oder der bestehende Datensatz überschrieben werden soll.",
    "label1": "Optionen",
    "advanced": "Erweitert",
    "New": "Ergebnisse in einem neuen Datensatz speichern",
    "newdatasetname": "Geben Sie einen Datensatznamen ein",
    "Existing": "Vorhandenen Datensatz überschreiben",
    "label12": "Geben Sie den Namen(n) der Variablen für neue wiederholte Faktorvariable(n) ein",
    "repeatedMeasure": "HINWEIS: Beim Angeben mehrerer Variablennamen, die wiederholte Faktoren speichern, trennen Sie diese durch Kommas, z. B. Monat, Tag. Sie müssen auch auf Erweitert klicken, um anzugeben, \nwie die Variablennamen erstellt werden.",
    "repeatedValue": "Variablenname für den wiederholten Wert, z. B. Anzahl",
    "labelChoice": "Wählen Sie eine der folgenden Optionen aus",
    "subsetvars": "Option1: Wählen Sie Variable(n) aus, die in eine oder mehrere Variable(n) umgeformt werden sollen.",
    "names_sep": "Option2: Geben Sie ein Zeichen oder einen regulären Ausdruck an, um Spaltennamen zu trennen, um Werte für Variablennamen zu erstellen. Nimmt dieselbe Spezifikation wie separate() und kann entweder ein numerischer Vektor (der Positionen angibt, an denen unterbrochen werden soll) oder eine einzelne Zeichenfolge (die einen regulären Ausdruck angibt, nach dem aufgeteilt werden soll) sein.",
    "names_pattern": "Option1: Ein regulärer Ausdruck, der Übereinstimmungsgruppen (()) enthält. Der übereinstimmende Teil des regulären Ausdrucks zwischen den () wird verwendet, um Variablennamen zu erstellen.",
    "dontReshape": "Option2: Wählen Sie Variable(n) aus, die nicht umgeformt werden sollen (alle verbleibenden Variablen werden in Spalte(n) umgeformt).",
    "removeNA": "Entfernen Sie Zeilen, in denen der wiederholte Wert NA ist.",
    "makeString": "Machen Sie den wiederholten Faktor zu einem R-String-Typ anstelle eines Faktors.",
    "label3": "Wenn mehrere neue Variablen für wiederholte Faktoren erstellt werden, steuern die folgenden Optionen, wie die Spaltennamen aufgeteilt werden. Wählen Sie eine der 2 Optionen unten aus.",
    "help": {
        "title": "Umformen (von breit zu lang)",
        "r_help": "help(pivot_longer, package=tidyr)",
        "body": "\n<b>Beschreibung</b></br>\nSiehe Video unter <a href=\" https://youtu.be/ypLXqmFp3jY\">Umformen von breit zu lang</a></br>\nNimmt einen breiten Datensatz und konvertiert ihn in einen langen Datensatz, indem Spalten in Schlüssel-Wert-Paare umgewandelt werden.\nPivot_longer nimmt mehrere Spalten und fasst sie in Schlüssel-Wert-Paare zusammen, indem alle anderen Spalten nach Bedarf dupliziert werden. Sie verwenden pivot_longer(), wenn Sie feststellen, dass Sie Spalten haben, die keine Variablen sind.</br>\nGeben Sie in der R-Umgebung vignette(\"pivot\") ein, um die R-Hilfe zu sehen. Wenn mehrere Spalten erstellt werden sollen, müssen Sie Argumente angeben, um anzugeben, wie die Spaltennamen konstruiert werden.</br>\nIn diesem Fall klicken Sie auf Erweitert, um einen regulären Ausdruck einzugeben, der angibt, wie Variablen aus Spaltennamen erstellt werden sollen.</br>\nHINWEIS: Beim Angeben mehrerer Variablen für die wiederholten Faktoren trennen Sie diese durch ,\n<br/>\n<b>Verwendung</b>\n<br/>\n<code> \npivot_longer( cols=c(col1, col2...),names_to=\"key\",values_to=\"value\",values_drop_na = TRUE)\n</code> <br/>\n<b>Argumente</b><br/>\n<ul>\n<li>\ncols: Spalten, die in ein längeres Format umgewandelt werden sollen.\n</li>\n<li>\nvalues_to: Eine Zeichenfolge, die den Namen der Spalte angibt, die aus den in den Zellwerten gespeicherten Daten erstellt werden soll. Wenn names_to eine Zeichenfolge enthält, die den speziellen .value-Sentinel enthält, wird dieser Wert ignoriert, und der Name der Wertspalte wird aus einem Teil der vorhandenen Spaltennamen abgeleitet. Wenn leer, werden alle Variablen ausgewählt, schließen Sie eine Variable y mit -y aus. Wenn Variablen ausgeschlossen werden, werden alle verbleibenden Variablen in lang umgewandelt.\n</li>\n<li>\nvalues_drop_na: Wenn TRUE, werden Zeilen entfernt, die nur NAs in der Spalte value_to enthalten. Dies konvertiert explizite fehlende Werte effektiv in implizite fehlende Werte und sollte im Allgemeinen nur verwendet werden, wenn fehlende Werte in den Daten durch deren Struktur erzeugt wurden.\n</li>\n<li>\nnames_sep: nimmt dieselbe Spezifikation wie separate() und kann entweder ein numerischer Vektor (der Positionen angibt, an denen unterbrochen werden soll) oder eine einzelne Zeichenfolge (die einen regulären Ausdruck angibt, nach dem aufgeteilt werden soll) sein.</br>\nAngenommen, die Spalten sind Height_1_1, Height_1_2, Weight_1_1, Weight_1_2, Sagur_1_1, Sagur_2_1, wobei die 1. Zahl den Monat und die 2. die Woche angibt. Das Spezifizieren von _ als Trennzeichen führt dazu, dass 3 Variablen erstellt werden: die erste Variable mit den Werten Height, Weight, Sagur, die zweite mit den Werten 1 und 2, und die 3. mit den Werten 1 und 2.</br>\nGeben Sie help(regex) im R-Code-Editor für weitere Details ein.\n</li>\n<li>\nnames_pattern: nimmt dieselbe Spezifikation wie extract(), einen regulären Ausdruck mit Übereinstimmungsgruppen (()).\nnimmt dieselbe Spezifikation wie separate() und kann entweder ein numerischer Vektor (der Positionen angibt, an denen unterbrochen werden soll) oder eine einzelne Zeichenfolge (die einen regulären Ausdruck angibt, nach dem aufgeteilt werden soll) sein.</br>\nAngenommen, die Spalten sind Height_33.1_1, Height_44.1_2, Weight_66.1_1, Weight_55.1_2, wobei die 2 Ziffern nach dem 1. Unterstrich ignoriert werden sollen, die Ziffer nach dem . der Monat und die Ziffer nach dem letzten _ die Woche ist.</br>\nDie regulären Ausdrücke, die die Werte der neuen Variablen extrahieren, müssen in () sein. Der reguläre Ausdruck wird (.*)_.*.(.*)_(.) sein.</br>\nHINWEIS: . in einem regulären Ausdruck bedeutet jedes Zeichen.</br>\n* bedeutet 0 oder mehr, sodass .* 0 oder mehr Zeichen bedeutet.</br>\nDaher kann die Zeichenfolge als Suche nach einem Muster interpretiert werden von</br>\n(.*) 0 oder mehr Zeichen gefolgt von</br>\n _ einem Unterstrich gefolgt von</br>\n .*. ein oder mehrere Zeichen gefolgt von . (das Escapen des . mit einem \ zeigt an, dass es sich um das Zeichen selbst handelt, gefolgt von</br>\n.* ein oder mehrere Zeichen gefolgt von</br>\n_ Unterstrich gefolgt von</br>\n. ein einzelnes Zeichen.</br>\nAlle Muster zwischen den () bilden die Werte jeder der 3 neuen Faktorvariablen.</br>\n</li>\n</ul>\n<b>Wert</b><br/>\nGibt den umgeformten Datensatz zurück.\n<br/>\n<b>Paket</b></br>\ntidyr</br>\n<b>Hilfe</b></br>\nhelp(pivot_longer, package=tidyr)<br/>\nvignette(\"pivot\")\n"
    }
}
