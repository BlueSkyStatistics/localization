{
  "title": "Einfache Quantile",
  "navigation": "Einfache Quantile",
  "prob": "Geben Sie Wahrscheinlichkeiten ein, die durch ein Komma getrennt sind. Beispiel: 0.3,0.2,0.5",
  "min": "Minimum",
  "max": "Maximum",
  "labelSig": "Signifikanzniveau",
  "lowtail": "Unteres Ende",
  "uptail": "Oberes Ende",
  "help": {
    "title": "Einfache Quantile",
    "r_help": "help(qunif, package=stats)",
    "body": "\n            ​​\n            <b>Beschreibung</b>\n            <br/>\n            Diese Funktionen bieten Informationen über die uniforme Verteilung im Intervall von min bis max. dunif gibt die Dichte an, punif gibt die Verteilungsfunktion an, qunif gibt die Quantilfunktion an und runif generiert Zufallsvariablen.\n            <br/>\n            <b>Verwendung</b>\n            <br/>\n            <code>\n                dunif(x, min = 0, max = 1, log = FALSE)\n                <br/>\n                punif(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qunif(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                runif(n, min = 0, max = 1)\n                <br/>\n            </code>\n            <br/>\n            <b>Argumente</b>\n            <br/>\n            <ul>\n                <li>x, q : Vektor von Quantilen.</li>\n                \n                \n                <li>p : Vektor von Wahrscheinlichkeiten.</li>\n                \n                \n                <li>n : Anzahl der Beobachtungen. Wenn die Länge(n) > 1 ist, wird die Länge als die benötigte Anzahl betrachtet.</li>\n                \n                \n                <li>min, max : untere und obere Grenzen der Verteilung. Muss endlich sein.</li>\n                \n                \n                <li>log, log.p : logisch; wenn TRUE, werden Wahrscheinlichkeiten p als log(p) angegeben.</li>\n                \n                \n                <li>lower.tail : logisch; wenn TRUE (Standard), sind die Wahrscheinlichkeiten P[X ≤ x], andernfalls P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Details</b>\n            <br/>\n            Wenn min oder max nicht angegeben sind, nehmen sie die Standardwerte von 0 und 1 an.\n            <br/>\n            Die uniforme Verteilung hat die Dichte\n            <br/>\n            <code>f(x) = 1/(max-min)</code>\n            <br/>\n            für min ≤ x ≤ max.\n            <br/>\n            Im Fall von u := min == max wird der Grenzfall von X == u angenommen, obwohl es in diesem Fall keine Dichte gibt und dunif NaN (die Fehlerbedingung) zurückgibt.\n            <br/>\n            runif wird keinen der Extremwerte generieren, es sei denn, max = min oder max-min ist klein im Vergleich zu min, und insbesondere nicht für die Standardargumente.\n            <br/>\n            <br/><b>Wert</b>\n            <br/>\n            dunif gibt die Dichte an, punif gibt die Verteilungsfunktion an, qunif gibt die Quantilfunktion an, und runif generiert Zufallsvariablen.\n            <br/>\n            Die Länge des Ergebnisses wird durch n für runif bestimmt und ist das Maximum der Längen der numerischen Argumente für die anderen Funktionen.\n            <br/>\n            Die numerischen Argumente, die nicht n sind, werden auf die Länge des Ergebnisses wiederverwendet. Nur die ersten Elemente der logischen Argumente werden verwendet.\n            <br/>\n            <br/><b>Hinweis</b>\n            <br/>\n            Die Eigenschaften der Ausgabe von Pseudo-Zufallszahlengeneratoren (wie Präzision und Periodizität) variieren stark. Siehe .Random.seed für weitere Informationen zu R's Zufallszahlengenerierungsalgorithmen.            \n"
  }
}