{
  "title": "カイ二乗検定",
  "navigation": "カイ二乗検定",
  "target": "選択した変数",
  "proportions": "等しい比率に対して検定するか、検定する比率を入力してください。変数が性別の場合、このコントロールを空白のままにして等しい比率を検定します。20%の女性、80%の男性を検定するには、0.2,0.8と入力します。各レベルに対して比率を入力してください。比率は合計で1でなければなりません。",
  "help": {
    "title": "カイ二乗検定",
    "r_help": "help(chisq.test, package=stats)",
    "body": "\n<b>説明</b></br>\nchisq.testはカイ二乗の分割表検定と適合度検定を実行します。\n<br/>\n<b>使用法</b>\n<br/>\n<code>\nchisq.test(x, y = NULL, correct = TRUE,\n            p = rep(1/length(x), length(x)), rescale.p = FALSE,\n            simulate.p.value = FALSE, B = 2000)\n</code> <br/>\n<b>引数</b><br/>\n<ul>\n<li>\nx: 数値ベクトルまたは行列。xとyは両方とも因子でもかまいません。\n</li>\n<li>\ny: 数値ベクトル; xが行列の場合は無視されます。xが因子の場合、yは同じ長さの因子である必要があります。\n</li>\n<li>\ncorrect: 2×2の表の検定統計量を計算する際に連続性補正を適用するかどうかを示す論理値: |O - E|の差から1/2が引かれますが、補正は差自体を超えることはありません。simulate.p.value = TRUEの場合は補正は行われません。\n</li>\n<li>\np: xと同じ長さの確率ベクトル。pのいずれかのエントリが負の場合はエラーが発生します。\n</li>\n<li>\nrescale.p: 論理スカラー; TRUEの場合、pは1になるように再スケールされます（必要に応じて）。rescale.pがFALSEで、pが1に合計しない場合はエラーが発生します。\n</li>\n<li>\nsimulate.p.value: p値をモンテカルロシミュレーションで計算するかどうかを示す論理値。\n</li>\n<li>\nB: モンテカルロ検定で使用される複製の数を指定する整数。\n</li>\n</ul>\n<b>説明</b><br/>\nxが1行または1列の行列であるか、xがベクトルでyが指定されていない場合、適合度検定が実行されます（xは1次元の分割表として扱われます）。xのエントリは非負の整数でなければなりません。この場合、検定される仮説は、母集団の確率がpのものと等しいか、pが指定されていない場合はすべて等しいというものです。\nxが少なくとも2行および2列の行列である場合、それは2次元の分割表として扱われます: xのエントリは非負の整数でなければなりません。それ以外の場合、xとyは同じ長さのベクトルまたは因子でなければなりません; 欠損値のあるケースは削除され、オブジェクトは因子に強制され、これらから分割表が計算されます。その後、2次元分割表のセルカウントの同時分布が行と列の周辺分布の積であるという帰無仮説のピアソンのカイ二乗検定が実行されます。<br/>\nsimulate.p.valueがFALSEの場合、p値は検定統計量の漸近的なカイ二乗分布から計算されます; 連続性補正は2×2の場合にのみ使用されます（correctがTRUEの場合、デフォルト）。それ以外の場合、p値はBの複製を持つモンテカルロ検定（Hope, 1968）に対して計算されます。\n分割表の場合、シミュレーションは与えられた周辺分布を持つすべての分割表のセットからのランダムサンプリングによって行われ、周辺分布が厳密に正である場合にのみ機能します。連続性補正は決して使用されず、統計量はそれなしで引用されます。これはカイ二乗検定のために想定される通常のサンプリング状況ではなく、むしろフィッシャーの正確検定のためのものです。<br/>\n適合度検定の場合、シミュレーションはpによって指定された離散分布からのランダムサンプリングによって行われ、各サンプルのサイズはn = sum(x)です。このシミュレーションはRで行われ、遅くなる可能性があります。<br/>\n<b>値</b></br>\n\"htest\"クラスのリストで、以下のコンポーネントを含みます:</br>\nstatistic:カイ二乗検定統計量の値。</br>\nparameter: 検定統計量の近似カイ二乗分布の自由度、p値がモンテカルロシミュレーションによって計算される場合はNA。</br>\np.value: 検定のp値。</br>\nmethod: 実行された検定のタイプを示す文字列、およびモンテカルロシミュレーションまたは連続性補正が使用されたかどうか。</br>\ndata.name: データの名前を示す文字列。</br>\nobserved: 観測されたカウント。</br>\nexpected: 帰無仮説の下での期待されるカウント。</br>\nresiduals: ピアソン残差、(observed - expected) / sqrt(expected)。</br>\nstdres: 標準化残差、(observed - expected) / sqrt(V)、ここでVは残差セル分散です（Agresti, 2007, セクション2.4.5、xが行列の場合、n * p * (1 - p)の場合はそれ以外）。​​</br>\n<b>例</b><br/>\n<code> \n## Agresti(2007) p.39から\nM <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))</br>\ndimnames(M) <- list(gender = c(\"F\", \"M\"),</br>\n                    party = c(\"民主党\",\"独立党\", \"共和党\"))</br>\n(Xsq <- chisq.test(M))  # 検定の要約を表示</br>\nXsq$observed   # 観測されたカウント（Mと同じ）</br>\nXsq$expected   # 帰無仮説の下での期待されるカウント</br>\nXsq$residuals  # ピアソン残差</br>\nXsq$stdres     # 標準化残差</br>\n</br>\n## p値のシミュレーションの効果</br>\nx <- matrix(c(12, 5, 7, 7), ncol = 2)</br>\nchisq.test(x)$p.value           # 0.4233</br>\nchisq.test(x, simulate.p.value = TRUE, B = 10000)$p.value</br>\n                                # 約0.29!</br>\n</code> <br/>\n<b>パッケージ</b></br>\nstats</br>\n<b>ヘルプ</b></br>\nhelp(chisq.test, package ='caret')      \n"
  }
}