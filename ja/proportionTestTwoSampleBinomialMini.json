{
  "title": "二つのサンプルの比率検定",
  "navigation": "二つのサンプル",
  "tvarbox1": "数値または2つのレベル/値のみを持つ因子",
  "tvarbox2": "数値または2つのレベル/値のみを持つ因子",
  "tvarbox3": "数値変数",
  "tvarbox4": "2つのレベル/値のみを持つ因子変数",
  "label1": "対立仮説",
  "test1": "比率 != 仮定された比率",
  "test2": "比率 > 仮定された比率",
  "test3": "比率 < 仮定された比率",
  "txtbox1": "信頼レベル",
  "txtbox2": "帰無仮説（仮定された比率は0-1の範囲内）",
  "chkbox1": "連続性補正あり",
  "dataInCols": "データは2つの別々の変数にあります",
  "dataInOneCols": "データは1つの変数にあります",
  "dataVariable": "データを含む変数",
  "groupingVariable": "グループ化変数",
  "summarized": "要約データ",
  "noOfEvents": "イベント数",
  "noOfTrials": "試行数",
  "method": "方法を選択",
  "label2": "サンプル1",
  "label3": "サンプル2",
  "noOfEvents2": "イベント数",
  "noOfTrials2": "試行数",
  "help": {
    "title": "二つのサンプルの比率検定",
    "r_help": "help(prop.test, package=stats)",
    "body": "\n<b>説明</b></br>\nprop.testは、いくつかのグループの比率（成功の確率）が同じであるか、特定の値に等しいかを検定するために使用できます。\n以下のオプションをサポートしています </br>\n1. データは2つの列にあります：ここでは、各列の成功の比率を比較します。各列には最大2つのユニークな値が許可されます。</br>\n2. データは1つの列にあります：ここでは、1列目の各グループの成功の比率を比較します。グループは別の列の因子レベルによって定義されます。各列には最大2つのユニークな値が許可されます。</br>\n3. データは要約形式で入力されます。method =個別に比率を推定します。</br>\nmethod =個別に比率を推定する場合、各グループの比率（成功の確率）が同じであるか、特定の値に等しいかを検定します。要約形式のデータについては、以下のコードを参照してください。</br>\n<code> \nBSky2SampleProportionMT( x1=4, x2=5,\n    n1=18, n2=7, p=0, \n    alternate=\"two.sided\", conf.level=0.95, testMethod =\"個別に比率を推定\") <br/>\n</code> <br/>\nmethod =比率のプール推定を使用する場合、比率のプール推定は、両方のサンプルからのデータに基づく比率の結合推定です。これは、2つの母集団が同じ比率を持つと仮定する場合に計算されます。これは、多くの二つのサンプルの比率検定における帰無仮説です。要約形式のデータについては、以下の例を参照してください。</br>\n<code> \nBSky2SampleProportionMT( x1=5, x2=3,\n    n1=16, n2=10, p=0, \n    alternate=\"two.sided\", conf.level=0.95, testMethod =\"比率のプール推定を使用\")\n</code> <br/>\n<br/>\n<b>使用法</b>\n<br/>\n<code> \nprop.test(x, n, p = NULL,\n            alternative = c(\"two.sided\", \"less\", \"greater\"),\n            conf.level = 0.95, correct = TRUE)\n</code> <br/>\n<b>引数</b><br/>\n<ul>\n<li>\nx: 成功のカウントのベクトル、2つのエントリを持つ1次元テーブル、または成功と失敗のカウントをそれぞれ与える2列の2次元テーブル（または行列）。\n</li>\n<li>\nn: 試行のカウントのベクトル；xが行列またはテーブルの場合は無視されます。\n</li>\n<li>\np: 成功の確率のベクトル。pの長さはxで指定されたグループの数と同じでなければならず、その要素は0より大きく1より小さくなければなりません。\n</li>\n<li>\nalternative: 対立仮説を指定する文字列で、\"two.sided\"（デフォルト）、\"greater\"または\"less\"のいずれかでなければなりません。単に初めの文字を指定することもできます。これは、単一の比率が特定の値に等しいか、2つの比率が等しいかを検定するためにのみ使用されます。それ以外の場合は無視されます。\n</li>\n<li>\nconf.level: 返される信頼区間の信頼レベル。0と1の間の単一の数でなければなりません。単一の比率が特定の値に等しいか、2つの比率が等しいかを検定する場合にのみ使用されます。それ以外の場合は無視されます。\n</li>\n<li>\ncorrect: 可能な場合にYatesの連続性補正を適用するかどうかを示す論理値。\n</li>\n</ul>\n<b>詳細</b></br>\n成功と失敗の有限数を持つグループのみが使用されます。成功と失敗のカウントは非負でなければならず、対応する試行の数より大きくてはなりません。すべての有限カウントは整数でなければなりません。</br>\npがNULLであり、グループが1つ以上ある場合、検定される帰無仮説は、各グループの比率が同じであることです。グループが2つある場合、対立仮説は、最初のグループの成功の確率が2番目のグループの成功の確率よりも小さい、等しくない、または大きいということです。信頼レベルがconf.levelで指定された比率の差の信頼区間が返されます。連続性補正は、サンプル比率の差の絶対値を超えない場合にのみ使用されます。それ以外の場合、グループが2つ以上ある場合、対立仮説は常に\"two.sided\"であり、返される信頼区間はNULLであり、連続性補正は決して使用されません。</br>\nグループが1つだけの場合、検定される帰無仮説は、基礎となる成功の確率がpであるか、pが指定されていない場合は0.5であることです。対立仮説は、成功の確率がpまたは0.5よりも小さい、等しくない、または大きいということです。信頼レベルがconf.levelで指定された基礎となる比率の信頼区間が返されます。連続性補正は、サンプルと帰無の比率の差の絶対値を超えない場合にのみ使用されます。信頼区間はスコアテストを反転させることによって計算されます。</br>\n最後に、pが指定され、グループが2つ以上ある場合、検定される帰無仮説は、成功の基礎となる確率がpによって与えられることです。対立仮説は常に\"two.sided\"であり、返される信頼区間はNULLであり、連続性補正は決して使用されません。</br>\n<b>値</b><br/>\n\"htest\"クラスのリストで、以下のコンポーネントを含みます：</br>\nstatistic: ピアソンのカイ二乗検定統計量の値。</br>\nparameter: 検定統計量の近似カイ二乗分布の自由度。</br>\np.value: 検定のp値。</br>\nestimate: サンプル比率x/nのベクトル。</br>\nconf.int: 1つのグループがある場合の真の比率の信頼区間、または2つのグループがありpが指定されていない場合の比率の差の信頼区間、またはそれ以外の場合はNULL。NULLでない場合、返される信頼区間はconf.levelで指定された漸近的な信頼レベルを持ち、指定された対立仮説に適切です。</br>\nnull.value: NULLでない場合、帰無によって指定されたpの値。</br>\nalternative: 対立を説明する文字列。</br>\nmethod: 使用された方法を示す文字列、およびYatesの連続性補正が適用されたかどうか。</br>\ndata.name: データの名前を示す文字列。</br>\n<b>パッケージ</b></br>\nstats</br>\n<b>ヘルプ</b></br>\nhelp(prop.test, package ='stats')\n"
  }
}