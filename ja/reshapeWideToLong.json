{
  "title": "ワイドからロングへの変形",
  "label2": "変形する変数を選択するか、変形しない変数を選択してください。後者の場合、残りのすべての変数は列に変形されます。",
  "navigation": "長くする",
  "label0": "結果を新しいデータセットに保存するか、既存のデータセットを上書きすることを選択できます。",
  "label1": "オプション",
  "advanced": "詳細",
  "New": "結果を新しいデータセットに保存",
  "newdatasetname": "データセット名を入力してください",
  "Existing": "既存のデータセットを上書き",
  "label12": "新しい繰り返し因子変数のための変数名を入力してください",
  "repeatedMeasure": "注意: 繰り返し因子を格納する複数の変数名を指定する場合は、カンマで区切ってください（例: 月、日）。変数名の作成方法を指定するには、詳細をクリックする必要があります。",
  "repeatedValue": "繰り返し値のための変数名（例: カウント）",
  "labelChoice": "以下のオプションのいずれかを選択してください",
  "subsetvars": "オプション1: 1つ以上の変数に変形するための変数を選択",
  "names_sep": "オプション2: 列名を分割して変数名の値を作成するための文字または正規表現を指定します。separate()と同じ仕様を取り、数値ベクトル（分割位置を指定）または単一の文字列（分割する正規表現を指定）であることができます。",
  "names_pattern": "オプション1: 一致するグループを含む正規表現（()）。()の間の正規表現の一致部分が変数名を作成するために使用されます。",
  "dontReshape": "オプション2: 変形しない変数を選択（残りのすべての変数は列に変形されます）",
  "removeNA": "繰り返し値がNAである行を削除します。",
  "makeString": "繰り返し因子を因子ではなくR文字列型にします。",
  "label3": "繰り返し因子のために複数の新しい変数が作成される場合、以下のオプションが列名の分割方法を制御します。以下の2つのオプションのいずれかを選択してください。",
  "help": {
    "title": "変形（ワイドからロング）",
    "r_help": "help(pivot_longer, package=tidyr)",
    "body": "\n<b>説明</b></br>\n<video src=\"https://youtu.be/ypLXqmFp3jY\">ワイドからロングへの変形</video></br>\nワイドデータセットを取り、列をキー値ペアに変換することによってロングデータセットに変換します。\nPivot_longerは複数の列を取り、必要に応じて他のすべての列を複製しながらキー-バリューペアに折りたたみます。変数でない列があることに気づいたときにpivot_longer()を使用します。</br>\nRエディタでvignette(\"pivot\")と入力してRヘルプを確認してください。複数の列を作成する場合は、列名がどのように構成されるかを指定するための引数を指定する必要があります。</br>\nこの場合、変数が列名からどのように作成されるかを指定する正規表現を入力するために詳細をクリックしてください。</br>\n注意: 繰り返し因子のために複数の変数を指定する場合は、カンマで区切ってください。\n<br/>\n<b>使用法</b>\n<br/>\n<code> \npivot_longer( cols=c(col1, col2...),names_to=\"key\",values_to=\"value\",values_drop_na = TRUE)\n</code> <br/>\n<b>引数</b><br/>\n<ul>\n<li>\ncols: より長い形式にピボットする列。\n</li>\n<li>\nvalues_to: セル値に格納されたデータから作成する列の名前を指定する文字列。names_toが特別な.valueセントネルを含む文字列である場合、この値は無視され、値列の名前は既存の列名の一部から派生します。空の場合、すべての変数が選択され、変数yを除外するには-yを使用します。変数を除外する場合、残りのすべての変数がロングにピボットされます。\n</li>\n<li>\nvalues_drop_na: TRUEの場合、value_to列にのみNAを含む行を削除します。これは、明示的な欠損値を暗黙的な欠損値に変換し、データの構造によって作成された欠損値に対してのみ一般的に使用されるべきです。\n</li>\n<li>\nnames_sep: separate()と同じ仕様を取り、数値ベクトル（分割位置を指定）または単一の文字列（分割する正規表現を指定）であることができます。</br>\n列がHeight_1_1、Height_1_2、Weight_1_1、Weight_1_2、Sagur_1_1、Sagur_2_1であるとしましょう。最初の数字は月、2番目は週であり、_を区切りとして指定すると、3つの変数が作成されます。最初の変数はHeight、Weight、Sagurの値を持ち、2番目は1と2の値を持ち、3番目は1と2の値を持ちます。</br>\n詳細については、Rコードエディタでhelp(regex)と入力してください。\n</li>\n<li>\nnames_pattern: extract()と同じ仕様を取り、一致するグループを含む正規表現（()）を取ります。\nseparate()と同じ仕様を取り、数値ベクトル（分割位置を指定）または単一の文字列（分割する正規表現を指定）であることができます。</br>\n列がHeight_33.1_1、Height_44.1_2、Weight_66.1_1、Weight_55.1_2であるとしましょう。最初のアンダースコアの後の2桁は無視され、1つ目のアンダースコアの後の数字は月、最後のアンダースコアの後の数字は週です。</br>\n新しい変数の値を抽出する正規表現は()の中にある必要があります。正規表現は(.*)_.*.(.*)です。</br> \n注意: 正規表現の.は任意の文字を意味します。</br> \n*は0回以上を意味するため、.*は0回以上の文字を意味します。</br> \nしたがって、文字列は次のパターンを探していると解釈できます。</br> \n(.*) 0回以上の文字の後に</br> \n _ アンダースコアの後に</br> \n .*. 1回以上の文字の後に.</br> \n（.をエスケープすることで、文字自体であることを示し、その後に</br> \n.* 1回以上の文字の後に</br> \n_ アンダースコアの後に</br> \n. 1つの文字の後に</br> \n()の間のすべてのパターンが各3つの新しい因子変数の値を形成します。</br> \n</li>\n</ul>\n<b>値</b><br/>\n変形されたデータセットを返します。\n<br/>\n<b>パッケージ</b></br>\ntidyr</br>\n<b>ヘルプ</b></br>\nhelp(pivot_longer, package=tidyr)<br/>\nvignette(\"pivot\")\n"
  }
}