{
  "title": "ANOVAおよび尤度比検定",
  "navigation": "ANOVAおよび尤度比",
  "label1": "ANOVAは、以下のクラス（括弧内はRクラス）のモデルに対して実行されます。線形モデル（lm）、一般化線形モデル（glm）、負の二項対数線形モデル（negbin）、一般化最小二乗法を使用した線形モデル（gls）、生存回帰モデル（survreg）、比例ハザードモデル（coxph）、ローカル回帰（loess）",
  "label2": "**注意：モデルチューニング（クラスtrain）を介して作成されたモデルには尤度検定はサポートされていません。",
  "modelselector1": "モデルを選択",
  "help": {
    "title": "ANOVAおよび尤度比検定",
    "r_help": "help(anova,package='stats')",
    "body": "\n                <b>説明</b></br>\nANOVAテーブル：モデルフィッティングオブジェクトに対して分散分析テーブルを計算し、尤度比検定を実行します。混合効果モデルの場合、ランダム効果のためのANOVAのようなテーブルが表示されます。\n<br/>\n<b>使用法</b>\n<br/>\n<code> \nanova(object, ...)\n</code> <br/>\n<b>引数</b><br/>\n<ul>\n<li>\nobject: モデルフィッティング関数（例：lmまたはglm）によって返された結果を含むオブジェクト。\n</li>\n</ul>\n<b>値</b><br/>\nこの（一般的な）関数はanovaクラスのオブジェクトを返します。これらのオブジェクトは分散分析および逸脱分析テーブルを表します。単一の引数が与えられた場合、モデル項が有意かどうかをテストするテーブルを生成します。オブジェクトのシーケンスが与えられた場合、anovaは指定された順序でモデルを相互にテストします。<br/>\nanovaオブジェクトの印刷メソッドは、テーブルを「美しい」形式で印刷します。<br/>\n<b>警告</b><br/>\n2つ以上のモデル間の比較は、同じデータセットにフィットしている場合にのみ有効です。欠損値がある場合、Rのデフォルトのna.action = na.omitが使用されると問題になる可能性があります。<br/>\n<b>パッケージ</b></br>\nstats</br>\n<b>ヘルプ</b></br>\n詳細なヘルプについては、このダイアログオーバーレイの右上隅にあるRアイコンをクリックするか、R構文エディタで次のコマンドを実行してください help(anova,package='stats')</br></br>\n<b>説明</b></br>\nネストされたモデルの尤度比検定：lrtestは尤度比検定を実行するための一般的な関数です。デフォルトのメソッドは、ネストされた（一般化された）線形モデルを比較するために使用できます（詳細は以下を参照）。\n<br/>\n<b>使用法</b>\n<br/>\n<code> \nlrtest(object, ...)<br/>\n## デフォルトS3メソッド：<br/>\nlrtest(object, ..., name = NULL) <br/>\n## 'formula'クラスのS3メソッド<br/>\nlrtest(object, ..., data = list())<br/>\n</code> <br/>\n<b>引数</b><br/>\n<ul>\n<li>\nobject: オブジェクト。詳細は以下を参照。\n</li>\n<li>\n...: メソッドに渡されるさらなるオブジェクト仕様。\n</li>\n<li>\nname: フィッティングされたモデルオブジェクトから適切な名前/説明を抽出するための関数。デフォルトでは、名前はformulaを呼び出すことによって照会されます。\n</li>\n<li>\ndata: モデル内の変数を含むデータフレーム。\n</li>\n</ul>\n<b>詳細</b></br>\nlrtestは、漸近的な尤度比検定を介してモデルの比較のための一般的な関数であることを意図しています。デフォルトのメソッドは、フィッティングされたモデルオブジェクトを...に渡されたモデルと連続的に比較します。フィッティングされたモデルオブジェクトを...に渡す代わりに、いくつかの他の仕様が可能です。更新メカニズムはwaldtestと同じです：...内のモデルは整数、文字（前のモデルから削除されるべき項の両方）、更新式、またはフィッティングされたモデルオブジェクトとして指定できます。最後のケースを除いて、更新メソッドの存在が仮定されます。詳細はwaldtestを参照してください。<br/>\nその後、各2つの連続モデルに対して漸近的な尤度比検定が実行されます：対数尤度の差の2倍（logLikメソッドによって導出されたもの）がカイ二乗分布と比較されます。<br/>\n「formula」メソッドは最初にlmをフィットさせ、その後デフォルトメソッドを呼び出します。<br/>\n<b>値</b><br/>\n「anova」クラスのオブジェクトで、対数尤度、自由度、自由度の差、尤度比カイ二乗統計量および対応するp値を含みます。\n<b>例</b><br/>\n<code> \n## Greene（1993）からのデータを使用：<br/>\n## データをロードし、ラグを計算<br/>\ndata(\"USDistLag\")<br/>\nusdl <- na.contiguous(cbind(USDistLag, lag(USDistLag, k = -1)))<br/>\ncolnames(usdl) <- c(\"con\", \"gnp\", \"con1\", \"gnp1\")<br/>\nfm1 <- lm(con ~ gnp + gnp1, data = usdl)<br/>\nfm2 <- lm(con ~ gnp + con1 + gnp1, data = usdl)<br/>\n## LRテストのさまざまな同等の仕様<br/>\nlrtest(fm2, fm1)<br/>\nlrtest(fm2, 2)<br/>\nlrtest(fm2, \"con1\")<br/>\nlrtest(fm2, . ~ . - con1)<br/>\n</code> <br/>\n<b>説明</b></br>\nランダム効果のためのANOVAのようなテーブル：モデル内のランダム効果項のテストを含むANOVAのようなテーブルを計算します。各ランダム効果項は削減または削除され、モデルの削減の尤度比検定がdrop1に似た形式で提示されます。randはranovaのエイリアスです。\n<br/>\n<b>使用法</b>\n<br/>\n<code> \nranova(model, reduce.terms = TRUE, ...)<br/>\nrand(model, reduce.terms = TRUE, ...)<br/>\n</code> <br/>\n<b>引数</b><br/>\n<ul>\n<li>\nmodel: lmer()でフィットされた線形混合効果モデル（lmerModクラスを継承）です。\n</li>\n<li>\nreduce.terms: TRUE（デフォルト）の場合、ランダム効果項が削減されます（可能な場合）。FALSEの場合、ランダム効果項は単に削除されます。\n</li>\n</ul>\n<b>詳細</b></br>\nモデルがREMLでフィットされている場合、テストはREML-尤度比検定です。<br/>\n形式(f1 + f2 | gr)のランダム効果項は、形式(f2 | gr)および(f1 | gr)の項に削減され、これらの削減モデルは元のモデルと比較されます。reduce.termsがFALSEの場合、(f1 + f2 | gr)は代わりに削除されます。<br/>\n形式(f1 | gr)のランダム効果項は(1 | gr)に削減されます（reduce.termsがFALSEでない限り）。<br/>\n形式(1 | gr)のランダム効果項は削減されず、単に削除されます。<br/>\n形式(0 + f1 | gr)または(-1 + f1 | gr)のランダム効果項は、reduce.terms = TRUEの場合、(1 | gr)に削減されます。<br/>\n形式(1 | gr1/gr2)のランダム効果項は、自動的に2つの項に展開されます：(1 | gr2:gr1)および(1 | gr1) findbarsを使用して。<br/>\nこの説明では、f1とf2が因子であるか連続変数であるかは重要ではありません。<br/>\n<b>値</b><br/>\nランダム効果の単一項削除を持つANOVAのようなテーブルで、anovaクラスおよびdata.frameから継承され、以下の列を持ちます：</br>\nnpar: モデルパラメータの数。</br>\nlogLik: モデルの対数尤度。モデルがREMLでフィットされている場合、これはREML-logLikです。</br>\nAIC: モデルのAICは-2*(logLik - npar)として評価されます。小さい方が良い。</br>\nLRT: 尤度比検定統計量；対数尤度の差の2倍で、漸近的にカイ二乗分布に従います。</br>\nDf: 尤度比検定の自由度：モデルパラメータの数の差。</br>\nPr(>Chisq) :p値。</br>\n<b>警告</b></br>\n特定のケースでは、非ネストモデルのテストが生成される可能性があります。例として、(0 + poly(x, 2) | gr)が削減される場合（デフォルト）(1 | gr)に。私たちの知識の限り、非ネストモデルの比較は、統計的にナンセンスな場合にのみ生成されます（この例のように、ランダムインターセプトが抑制される場合など）。</br>\n注意：anovaは2つのモデルを比較するために使用でき、ranovaと同じテストを生成できることがよくあります。ただし、これは常にそうであるとは限らず、例で示されているように、常にそうであるとは限りません。</br>\n<b>例</b><br/>\n<code> \n# (Days | Subject)の削減を(1 | Subject)にテスト：<br/>\nfm1 <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy)<br/>\nranova(fm1) # 2 dfテスト<br/>\n# このテストはanova()でも達成できます：<br/>\nfm2 <- lmer(Reaction ~ Days + (1|Subject), sleepstudy)<br/>\nanova(fm1, fm2, refit=FALSE)<br/>\n# reduce.test引数を示す：<br/>\n# (Days | Subject)の削除をテスト：<br/>\nranova(fm1, reduce.terms = FALSE) # 3 dfテスト<br/>\n# この場合の尤度比検定統計量は：<br/>\nfm3 <- lm(Reaction ~ Days, sleepstudy)<br/>\n2*c(logLik(fm1, REML=TRUE) - logLik(fm3, REML=TRUE)) # LRT<br/>\n# anova()は常にranova()と同じテストを実行できるわけではありません。<br/>\n# 例えば：<br/>\nanova(fm1, fm3, refit=FALSE) # REMLとMLを比較し、使用すべきではありません<br/>\nanova(fm1, fm3, refit=TRUE) # MLフィッティングのテストであり、私たちが求めているものではありません<br/>\n# また、lmerフィットが最初に来る必要があります - lmフィットではありません：<br/>\n# anova(fm3, fm1) # は機能せず、エラーを返します<br/>\n# ranova()はすべての関連テストを生成しない場合があります：<br/>\n# 次のモデルに対してranova()は削減すべきではないと示します：<br/>\nfm <- lmer(Coloursaturation ~ TVset * Picture + (TVset | Assessor), data=TVbo)<br/>\nranova(fm)<br/>\n# ただし、より適切なモデルは：<br/>\nfm2 <- lmer(Coloursaturation ~ TVset * Picture + (1 | TVset:Assessor), data=TVbo)<br/>\nanova(fm, fm2, refit=FALSE)<br/>\n# fmとfm2はデータに対して本質的に同じフィットを持ちますが、fmはfmよりも5つのパラメータを使用します。<br/>\n</code> <br/>\n<b>パッケージ</b></br>\nlmerTest</br>\n<b>ヘルプ</b></br>\n詳細なヘルプについては、このダイアログオーバーレイの右上隅にあるRアイコンをクリックするか、R構文エディタで次のコマンドを実行してください help(ranova, package ='lmerTest')\n                "
  }
}