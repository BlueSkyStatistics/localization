{
  "title": "多重相关",
  "navigation": "多重",
  "Target": "选择一个或多个 x 变量",
  "textbox1": "置信区间",
  "textbox2": "零假设 (mu)",
  "Target2": "选择一个有序的因子变量 y",
  "label1": "估计类型",
  "test1": "两步近似",
  "test2": "最大似然估计量",
  "label2": "标准误差",
  "Missvals": "显示标准误差",
  "conflevel": "最大绝对相关性（以确保数值稳定性）。",
  "Seed": "可选起始值",
  "header": "相关性是在每个 x 变量和 y 变量之间估计的",
  "showEffectSizes": "返回估计的阈值",
  "advanced_lbl" : "高级",
  "help": {
    "title": "多重相关",
    "r_help": "help(polychor, package ='polycor')",
    "body": "\n<b>描述</b></br>\n计算两个有序变量之间的多重相关（及其标准误差），假设有序变量分解为双变量正态的连续潜在变量。可以使用最大似然估计量或（可能更快的）“两步”近似。对于 ML 估计量，阈值的估计和估计的协方差矩阵也可用。\n<br/>\n<b>用法</b>\n<br/>\n<code> \npolychor(x, y, ML = FALSE, control = list(), \n  std.err = FALSE, maxcor=.9999, start, thresholds=FALSE)\n</code> <br/>\n<b>参数</b><br/>\n<ul>\n<li>\nx: 有序分类变量；该变量可以是数字、逻辑、因子、有序因子或字符变量，但如果是因子，其水平应按正确顺序排列，字符变量的值按字母顺序排列。\n</li>\n<li>\ny: 一个有序因子变量\n</li>\n<li>\nML: 如果为 TRUE，计算最大似然估计；如果为 FALSE，默认情况下，计算更快的“两个步骤”近似。\n</li>\n<li>\nstd.err: 如果为 TRUE，返回相关性的估计方差（对于两步估计量）或相关性和阈值的估计协方差矩阵（对于 ML 估计量）；默认值为 FALSE。\n</li>\n<li>\nmaxcor: 最大绝对相关性（以确保数值稳定性）。\n</li>\n<li>\nstart: 可选起始值：如果是单个数字，则为相关性的起始值。\n</li>\n<li>\nthresholds: 如果为 TRUE（默认值为 FALSE），即使未计算标准误差，也返回估计的阈值和估计的相关性。\n</li>\n</ul>\n<b>值</b></br>\n值：如果 std.err 或 thresholds 为 TRUE，则返回一个类为 \"polycor\" 的对象，包含以下组件：</br>\ntype: 设置为 \"多重相关\"。</br>\nrho: 多重相关。</br>\nrow.cuts: 行变量 (x) 的估计阈值，适用于 ML 估计。</br>\ncol.cuts: 列变量 (y) 的估计阈值，适用于 ML 估计。</br>\nvar: 相关性的估计方差，或对于 ML 估计，相关性和阈值的估计协方差矩阵。</br>\nn: 相关性基于的观察数量。</br>\nchisq: 双变量正态性的卡方检验。</br>\ndf: 双变量正态性检验的自由度。</br>\nML: 对于 ML 估计为 TRUE，对于两步估计为 FALSE\n<b>详细信息</b></br>\nML 估计量是通过最大化双变量正态似然函数相对于两个变量的阈值（τ^x[i], i = 1,…, r - 1; τ^y[j], j = 1,…, c - 1）和总体相关性 (ρ) 来计算的。这里，r 和 c 分别是 x 和 y 的水平数量。似然函数使用 optim 函数进行数值最大化，估计参数的协方差矩阵基于 optim 计算的数值 Hessian。\n两步估计量是通过首先从每个变量的边际分布单独估计阈值（τ^x[i], i = 1,…, r - 1 和 τ^y[j], i = j,…, c - 1）。然后，使用 optim 如果请求标准误差，或使用 optimise 如果不请求，数值最大化 ρ 的一维似然。计算的标准误差将阈值视为固定。\n<br/>\n<b>示例</b></br>\n<code> \nif(require(mvtnorm)){\n    set.seed(12345)\n    data <- rmvnorm(1000, c(0, 0), matrix(c(1, .5, .5, 1), 2, 2))\n    x <- data[,1]\n    y <- data[,2]\n    cor(x, y)  # 样本相关性\n    }\n\nif(require(mvtnorm)){\n    x <- cut(x, c(-Inf, .75, Inf))\n    y <- cut(y, c(-Inf, -1, .5, 1.5, Inf))\n    polychor(x, y)  # 两步估计\n    }\n\nif(require(mvtnorm)){\n    polychor(x, y, ML=TRUE, std.err=TRUE)  # ML 估计\n    }\n</code> <br/>\n<b>包</b></br>\npolycor</br>\n<b>帮助</b></br>\n有关详细帮助，请单击此对话框覆盖右上角的 R 图标，或通过创建 R 代码块点击输出窗口中的 +，运行以下命令 help(polycor, package ='polychor')           \n    "
  }
}