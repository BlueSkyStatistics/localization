{
  "title": "Exemplo de Distribuição de Poisson",
  "navigation": "Exemplo de Distribuição de Poisson",
  "entrdsname": "Digite o nome do conjunto de dados",
  "lambda": "Média",
  "lblnoofsamples": "Número de amostras (linhas)",
  "lblnoofobsv": "Número de observações (colunas)",
  "lblseed": "Semente",
  "lblAddtoDS": "Adicionar ao conjunto de dados",
  "chklbl1": "Médias das amostras",
  "chklbl2": "Somas das amostras",
  "chklbl3": "Desvios padrão das amostras",
  "help": {
    "title": "Exemplo de Distribuição de Poisson",
    "r_help": "help(rpois, package=stats)",
    "body": "\n\n            <b>Descrição</b>\n            <br/>\n            Densidade, função de distribuição, função quantil e geração aleatória para a distribuição de Poisson com parâmetro lambda.\n            <br/>\n            <b>Uso</b>\n            <br/>\n            <code>\n                dpois(x, lambda, log = FALSE)\n                <br/>\n                ppois(q, lambda, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qpois(p, lambda, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rpois(n, lambda)\n                <br/>\n            </code>\n            <br/>\n            <b>Argumentos</b>\n            <br/>\n            <ul>\n                <li>x : vetor de quantis (números inteiros não negativos).</li>\n                \n                \n                <li>q : vetor de quantis.</li>\n                \n                \n                <li>p : vetor de probabilidades.</li>\n                \n                \n                <li>n : número de valores aleatórios a retornar.</li>\n                \n                \n                <li>lambda : vetor de médias (não negativas).</li>\n                \n                \n                <li>log, log.p : lógico; se TRUE, as probabilidades p são dadas como log(p).</li>\n                \n                \n                <li>lower.tail : lógico; se TRUE (padrão), as probabilidades são P[X ≤ x], caso contrário, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Detalhes</b>\n            <br/>\n            A distribuição de Poisson tem densidade\n            <br/>\n            <code>p(x) = λ^x exp(-λ)/x!</code>\n            <br/>\n            para x = 0, 1, 2, … . A média e a variância são E(X) = Var(X) = λ.\n            <br/>\n            Note que λ = 0 é realmente um caso limite (definindo 0^0 = 1) resultando em uma massa pontual em 0, veja também o exemplo.\n            <br/>\n            Se um elemento de x não for inteiro, o resultado de dpois é zero, com um aviso. p(x) é computado usando o algoritmo de Loader, veja a referência em dbinom.\n            <br/>\n            O quantil é contínuo à direita: qpois(p, lambda) é o menor inteiro x tal que P(X ≤ x) ≥ p.\n            <br/>\n            Definir lower.tail = FALSE permite obter resultados muito mais precisos quando o padrão, lower.tail = TRUE, retornaria 1, veja o exemplo abaixo.\n            <br/>\n            <br/><b>Valor</b>\n            <br/>\n            dpois fornece a densidade (log), ppois fornece a função de distribuição (log), qpois fornece a função quantil, e rpois gera desvios aleatórios.\n            <br/>\n            Lambda inválido resultará em valor de retorno NaN, com um aviso.\n            <br/>\n            O comprimento do resultado é determinado por n para rpois, e é o máximo dos comprimentos dos argumentos numéricos para as outras funções.\n            <br/>\n            Os argumentos numéricos além de n são reciclados para o comprimento do resultado. Apenas os primeiros elementos dos argumentos lógicos são usados.            \n"
  }
}