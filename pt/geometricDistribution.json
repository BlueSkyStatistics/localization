{
  "title": "Distribuição Geométrica",
  "navigation": "Distribuição Geométrica",
  "prob": "Probabilidade de sucesso",
  "plotProb": "Plotar função de massa de probabilidade",
  "plotDistrib": "Plotar função de distribuição",
  "help": {
    "title": "Distribuição Geométrica",
    "r_help": "help(qgeom, package=stats)",
    "body": "\n\n            <b>Descrição</b>\n            <br/>\n            Densidade, função de distribuição, função quantil e geração aleatória para a distribuição geométrica com parâmetro prob.\n            <br/>\n            <b>Uso</b>\n            <br/>\n            <code>\n                dgeom(x, prob, log = FALSE)\n                <br/>\n                pgeom(q, prob, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qgeom(p, prob, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                rgeom(n, prob)\n                <br/>\n            </code>\n            <br/>\n            <b>Argumentos</b>\n            <br/>\n            <ul>\n                <li>x, q : vetor de quantis representando o número de falhas em uma sequência de tentativas de Bernoulli antes que o sucesso ocorra.</li>\n                \n                \n                <li>p : vetor de probabilidades.</li>\n                \n                \n                <li>n : número de observações. Se length(n) > 1, o comprimento é considerado como o número necessário.</li>\n                \n                \n                <li>prob : probabilidade de sucesso em cada tentativa. 0 < prob <= 1.</li>\n                \n                \n                <li>log, log.p : lógico; se TRUE, as probabilidades p são dadas como log(p).</li>\n                \n                \n                <li>lower.tail : lógico; se TRUE (padrão), as probabilidades são P[X ≤ x], caso contrário, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Detalhes</b>\n            <br/>\n            A distribuição geométrica com prob = p tem densidade\n            <br/>\n            <code>\n                p(x) = p (1-p)^x\n                para x = 0, 1, 2, …, 0 < p ≤ 1.\n            </code>\n            <br/>\n            Se um elemento de x não for inteiro, o resultado de dgeom é zero, com um aviso.\n            <br/>\n            O quantil é definido como o menor valor x tal que F(x) ≥ p, onde F é a função de distribuição.\n            <br/>\n            <br/><b>Valor</b>\n            <br/>\n            dgeom fornece a densidade, pgeom fornece a função de distribuição, qgeom fornece a função quantil, e rgeom gera desvios aleatórios.\n            <br/>\n            Prob inválido resultará em valor de retorno NaN, com um aviso.\n            <br/>\n            O comprimento do resultado é determinado por n para rgeom, e é o máximo dos comprimentos dos argumentos numéricos para as outras funções.\n            <br/>\n            Os argumentos numéricos além de n são reciclados para o comprimento do resultado. Apenas os primeiros elementos dos argumentos lógicos são usados.            \n"
  }
}