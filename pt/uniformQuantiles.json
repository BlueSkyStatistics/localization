{
  "title": "Quantis Uniformes",
  "navigation": "Quantis Uniformes",
  "prob": "Insira probabilidades separadas por vírgula. Exemplo: 0.3,0.2,0.5",
  "min": "Mínimo",
  "max": "Máximo",
  "labelSig": "Nível de significância",
  "lowtail": "Cauda inferior",
  "uptail": "Cauda superior",
  "help": {
    "title": "Quantis Uniformes",
    "r_help": "help(qunif, package=stats)",
    "body": "\n            ​​\n            <b>Descrição</b>\n            <br/>\n            Essas funções fornecem informações sobre a distribuição uniforme no intervalo de min a max. dunif fornece a densidade, punif fornece a função de distribuição, qunif fornece a função quantil e runif gera desvios aleatórios.\n            <br/>\n            <b>Uso</b>\n            <br/>\n            <code>\n                dunif(x, min = 0, max = 1, log = FALSE)\n                <br/>\n                punif(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                qunif(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)\n                <br/>\n                runif(n, min = 0, max = 1)\n                <br/>\n            </code>\n            <br/>\n            <b>Argumentos</b>\n            <br/>\n            <ul>\n                <li>x, q : vetor de quantis.</li>\n                \n                \n                <li>p : vetor de probabilidades.</li>\n                \n                \n                <li>n : número de observações. Se length(n) > 1, o comprimento é considerado como o número necessário.</li>\n                \n                \n                <li>min, max : limites inferior e superior da distribuição. Devem ser finitos.</li>\n                \n                \n                <li>log, log.p : lógico; se TRUE, as probabilidades p são dadas como log(p).</li>\n                \n                \n                <li>lower.tail : lógico; se TRUE (padrão), as probabilidades são P[X ≤ x], caso contrário, P[X > x].</li>\n            </ul>\n            \n            \n            \n            <br/>\n            <b>Detalhes</b>\n            <br/>\n            Se min ou max não forem especificados, eles assumem os valores padrão de 0 e 1, respectivamente.\n            <br/>\n            A distribuição uniforme tem densidade\n            <br/>\n            <code>f(x) = 1/(max-min)</code>\n            <br/>\n            para min ≤ x ≤ max.\n            <br/>\n            Para o caso de u := min == max, o caso limite de X == u é assumido, embora não haja densidade nesse caso e dunif retornará NaN (a condição de erro).\n            <br/>\n            runif não gerará nenhum dos valores extremos, a menos que max = min ou max-min seja pequeno em comparação com min, e em particular não para os argumentos padrão.\n            <br/>\n            <br/><b>Valor</b>\n            <br/>\n            dunif fornece a densidade, punif fornece a função de distribuição, qunif fornece a função quantil, e runif gera desvios aleatórios.\n            <br/>\n            O comprimento do resultado é determinado por n para runif, e é o máximo dos comprimentos dos argumentos numéricos para as outras funções.\n            <br/>\n            Os argumentos numéricos além de n são reciclados para o comprimento do resultado. Apenas os primeiros elementos dos argumentos lógicos são usados.\n            <br/>\n            <br/><b>Nota</b>\n            <br/>\n            As características da saída de geradores de números pseudo-aleatórios (como precisão e periodicidade) variam amplamente. Veja .Random.seed para mais informações sobre os algoritmos de geração de números aleatórios do R.            \n      "
  }
}