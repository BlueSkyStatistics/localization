{
  "title": "Regressão Logística",
  "navigation": "Logística, avançado",
  "modelname": "Insira o nome do modelo",
  "dependent": "Variável dependente",
  "independent": "Variável(is) independente(s)",
  "generateplotchk": "Plotar resíduos vs ajustados, normal Q-Q, escala-localização e resíduos vs alavancagem",
  "destination2": "Especifique uma variável com pesos",
  "help": {
    "title": "Regressão Logística",
    "r_help": "help(glm, package ='stats')",
    "body": "\n<b>Descrição</b></br>\nConstrói um modelo de regressão logística binária usando um construtor de fórmulas. Usamos a função glm passando o parâmetro family =binomial(link='logit'). Exibimos um resumo do modelo, tabelas de análise de variância e McFadden R2.<br/>\nVocê pode pontuar o modelo selecionando o modelo criado no canto superior direito da tela principal da aplicação e selecionando o botão Score. Você pode escolher exibir uma matriz de confusão e uma curva ROC<br/>\nO nome do modelo padrão é Logistic1, que você pode alterar.<br/><br/>\nNOTA: Ao especificar uma variável contendo pesos, esteja ciente de que, como usamos a opção na.exclude para construir o modelo, todos os valores NA são automaticamente removidos das variáveis dependentes e independentes.<br/> \nIsso pode causar um descompasso, pois os valores NA NÃO são automaticamente removidos da variável de ponderação. <br/>\nNessa situação, você verá o erro os comprimentos das variáveis diferem (encontrado para (pesos))<br/>\nPara resolver esse erro, vá para Variáveis>Valores Ausentes>Remover NAs e selecione as variáveis dependentes, independentes e a variável de ponderação para remover valores ausentes e reconstruir o modelo.<br/>\n<br/>\n<b>Uso</b>\n<br/>\n<code> \nmodelname <- glm(dependentVariable ~ var1+var2+var3...,family =binomial(link='logit'),data=datasetName)\n#Resumindo o modelo<br/>\nsummary(modelname)<br/>\n#Exibindo a tabela Anova<br/>\nanova(modelname)<br/>\n#Plota resíduos vs. ajustados, normal Q-Q, escala-localização, resíduos vs. alavancagem<br/>\nplot(modelname)<br/>\n#McFadden R2<br/>\npR2(Logistic1)<br/>\n#razão de chances e intervalo de confiança de 95%<br/>\nexp(cbind(OR=coef(Logistic1), confint(Logistic1,level=0.95)))<br/>\n#Plota o modelo<br/>\nplot(Logistic1)<br/>\n</code> <br/>\n<b>Argumentos</b><br/>\n<ul>\n<li>\ndepVar: Nome da variável dependente. Se tivermos um conjunto de dados de carros, com uma variável classe que queremos prever (a variável dependente é classe) insira classe\n</li>\n<li>\nindepVars: Nomes da variável independente, separados por +. Se tivermos um conjunto de dados de carros, com a variável independente potência, tamanho do motor, especifique potência+tamanhodomotor). Variáveis categóricas são automaticamente codificadas como dummy.​\n</li>\n<li>\ndata: Nome do dataframe. Quando você abre data frames ou conjuntos de dados, por exemplo, arquivos csv, arquivos do Excel, arquivos SAS no BioStat Prime, eles são nomeados Dataset1, Dataset2, Dataset3. Então insira data=Dataset1​\n</li>\n</ul>\n<b>Pacote</b></br>\nglm</br>\n<b>Ajuda</b></br>\nhelp(glm, package ='stats')</br>\n<b>Referências</b></br>\nhttps://datascienceplus.com/perform-logistic-regression-in-r/</br>\nhttps://www.machinelearningplus.com/machine-learning/logistic-regression-tutorial-examples-r/</br>\n<b>Outro</b></br>\nClique no ícone de Ajuda R para obter ajuda detalhada do R​</br>\n\t\t\t"
  }
}