{
  "title": "順序回帰",
  "navigation": "順序",
  "label1": "テスト方法",
  "logit": "ロジット",
  "probit": "プロビット",
  "modelname": "モデル名を入力",
  "dependent": "従属変数",
  "formula": "独立変数",
  "generateplotchk": "残差とフィッティングのプロット、正規Q-Q、スケール-ロケーション、残差とレバレッジのプロットを生成",
  "weights": "重みを持つ変数を指定",
  "help": {
    "title": "順序",
    "r_help": "help(polr, package=MASS)",
    "body": "\n            <b>説明</b></br>\n            順序因子応答にロジスティックまたはプロビット回帰モデルを適合させます。デフォルトのロジスティックケースは比例オッズロジスティック回帰であり、関数はこの名前に由来します。\n            <br/>\n            <b>使用法</b>\n            <br/>\n            <code> \n            polr(formula, data, weights, start, ..., subset, na.action,\n                 contrasts = NULL, Hess = FALSE, model = TRUE,\n                 method = c(\"logistic\", \"probit\", \"loglog\", \"cloglog\", \"cauchit\"))\n            </code> <br/>\n            <b>引数</b><br/>\n            <ul>\n            <li>\n            formula: 回帰モデルのための式の表現で、形式は response ~ predictors です。応答は因子（できれば順序因子）である必要があり、因子のようにレベルが順序付けられます。モデルには切片が必要です：切片を削除しようとすると警告が表示され、無視されます。オフセットを使用することができます。詳細については、式のドキュメントを参照してください。\n            </li>\n            <li>\n            data: 式に現れる変数を解釈するためのオプションのデータフレーム。\n            </li>\n            <li>\n            weights: フィッティングにおけるオプションのケース重み。デフォルトは1です。\n            </li>\n            <li>\n            start: パラメータの初期値。形式は c(coefficients, zeta) です：値のセクションを参照してください。\n            </li>\n            <li>\n            ... optim に渡される追加の引数、最も一般的には制御引数です。\n            </li>\n            <li>\n            subset: フィットに使用するデータの行のサブセットを指定する式。デフォルトではすべての観測が含まれます。\n            </li>\n            <li>\n            na.action: 欠損データをフィルタリングするための関数。\n            </li>\n            <li>\n            contrasts: モデル式の変数として現れる因子のいくつかまたはすべてに使用されるコントラストのリスト。\n            </li>\n            <li>\n            Hess: ヘッセ行列（観測情報行列）を返すかどうかの論理値。フィットに対して summary または vcov を呼び出す予定がある場合はこれを使用してください。\n            </li>\n            <li>\n            model: モデル行列を返すかどうかの論理値。\n            </li>\n            <li>\n            method: ロジスティックまたはプロビットまたは（補完的な）ロジロジまたはカウチット（Cauchy潜在変数に対応）。\n            </li>\n            </ul>\n            <b>詳細</b></br>\n            このモデルは Agresti (2002) が累積リンクモデルと呼ぶものです。基本的な解釈は、スケールパラメータが1のロジスティックまたは正規または極値またはCauchy分布を持つ潜在変数 Y_i の粗いバージョンとしてのものです。観測される順序因子は、Y_i がどのビンに入るかであり、ブレークポイントは\n            zeta_0 = -Inf < zeta_1 < … < zeta_K = Inf</br>\n            これによりモデルが導かれます</br>\n            logit P(Y <= k | x) = zeta_k - eta</br>\n            ロジットが正規潜在変数のためにプロビットに置き換えられ、eta は線形予測子であり、説明変数の線形関数（切片なし）です。その他のソフトウェアが eta の符号を逆に使用することは非常に一般的です（したがって係数 beta）。</br>\n            ロジスティックケースでは、最後の表示の左側はカテゴリ k 以下の対数オッズであり、これらは異なる k に対して定数によってのみ異なる対数オッズであるため、オッズは比例します。したがって、比例オッズロジスティック回帰という用語が使われます。</br>\n            ロジロジおよび補完的ロジロジリンクは、増加関数 F^-1(p) = -log(-log(p)) および F^-1(p) = log(-log(1-p)) です；最初のものを「負のロジロジ」リンクと呼ぶ人もいます。これらはそれぞれ最大および最小の極値分布を持つ潜在変数に対応します。</br>\n            グループ化された生存時間のための比例ハザードモデルは、増加する時間によってグループ化された補完的ロジロジリンクを使用することで得られます。</br>\n            predict、summary、vcov、anova、model.frame および stepAIC（および step）で使用するための extractAIC メソッドがあります。また、profile および confint メソッドもあります。</br>\n            <b>値</b><br/>\n            クラス \"polr\" のオブジェクト。これには以下のコンポーネントがあります\n            <li>\n            coefficients: 切片のない線形予測子の係数。\n            </li>\n            <li>\n            zeta: クラス境界の切片。\n            </li>\n            <li>\n            deviance: 残差の逸脱。\n            </li>\n            <li>\n            fitted.values: 応答の各レベルの列を持つ行列。\n            </li>\n            <li>\n            lev: 応答レベルの名前。\n            </li>\n            <li>\n            terms: モデルを記述する用語構造。\n            </li>\n            <li>\n            df.residual: 重みを使用して計算された残差自由度の数。\n            </li>\n            <li>\n            edf: モデルによって使用される（有効な）自由度の数\n            </li>\n            <li>\n            n, nobs: 重みを使用して計算された（有効な）観測数。（nobs は stepAIC 用です。\n            </li>\n            <li>\n            call: 一致した呼び出し。\n            </li>\n            <li>\n            method: 使用された一致したメソッド。\n            </li>\n            <li>\n            convergence: optim によって返された収束コード。\n            </li>\n            <li>\n            niter: optim によって使用された関数と勾配の評価の数。\n            </li>\n            <li>\n            lp: 線形予測子（オフセットを含む）。</li>\n            <li>\n            Hessian: （Hess が true の場合）。これは最適化プロセスから導出された数値近似です。\n            </li>\n            <li>\n            model:（model が true の場合）。\n            </li>\n            <li>\n            注意</br>\n            vcov メソッドは近似ヘッセ行列を使用します：信頼できる結果を得るためには、モデル行列はすべての列が1のオーダーの範囲を持つように適切にスケーリングされるべきです。</br>\n            バージョン 7.3-32 より前は、method = \"cloglog\" が混乱を招くことによりロジロジリンクを与え、最初の応答レベルが「最良」であると暗黙的に仮定していました。</br>\n            <br/>\n            <b>例</b><br/>\n            <code> \n            options(contrasts = c(\"contr.treatment\", \"contr.poly\"))<br/>\n            house.plr <- polr(Sat ~ Infl + Type + Cont, weights = Freq, data = housing)<br/>\n            house.plr<br/>\n            summary(house.plr, digits = 3)<br/>\n            ## わずかに悪化したフィット<br/>\n            summary(update(house.plr, method = \"probit\", Hess = TRUE), digits = 3)<br/>\n            ## 適切ではないが、フィットできる<br/>\n            summary(update(house.plr, method = \"loglog\", Hess = TRUE), digits = 3)<br/>\n            summary(update(house.plr, method = \"cloglog\", Hess = TRUE), digits = 3)<br/>\n            <br/>\n            predict(house.plr, housing, type = \"p\")<br/>\n            addterm(house.plr, ~.^2, test = \"Chisq\")<br/>\n            house.plr2 <- stepAIC(house.plr, ~.^2)<br/>\n            house.plr2$anova<br/>\n            anova(house.plr, house.plr2)<br/>\n            <br/>\n            house.plr <- update(house.plr, Hess=TRUE)<br/>\n            pr <- profile(house.plr)<br/>\n            confint(pr)<br/>\n            plot(pr)<br/>\n            pairs(pr)<br/>\n            </code> <br/>\n            <b>パッケージ</b></br>\n            MASS</br>\n            <b>ヘルプ</b></br>\n            詳細なヘルプは、このダイアログオーバーレイの右上隅にあるRアイコンをクリックするか、Rコードチャンクを作成して help(polr, package =MASS) コマンドを実行してください。"
  }
}