{
  "title": "ルールを生成する、バスケット形式",
  "navigation": "ルールを生成する、バスケット形式",
  "src": "列",
  "datasetcol": "複数アイテムを持つ単一変数",
  "separator": "バスケット内のアイテムの区切り文字を入力してください",
  "prunerules": "ルールを剪定する",
  "graphs": "視覚化を表示する",
  "test3": "差 < 0",
  "txtbox2": "帰無仮説 (μ)",
  "txtbox1": "信頼水準",
  "label1": "ルールを生成する",
  "rulesobj": "ルールオブジェクト名",
  "rulesobjhint": "このオブジェクトはすべてのルールを保持し、他の関連ダイアログで指定できます。例：ルールを表示、ルールをプロット",
  "support": "最小サポート値",
  "supphint": "アイテムのサポートは、データセット内のトランザクションのうち、そのアイテムを含むトランザクションの割合です。",
  "confidence": "最小信頼値",
  "confhint": "ルールの信頼度は、ルールの左辺にあるアイテムを含む新しいトランザクションに対して、そのルールが真である可能性です。",
  "advoptions": "詳細オプション",
  "minlen": "左側のアイテムの最小数",
  "maxlen": "左側のアイテムの最大数",
  "sortopt": "ソートオプション",
  "sortby": "ソート基準",
  "rd1": "信頼度",
  "rd2": "リフト",
  "rd3": "サポート",
  "sortord": "ソート順",
  "increasing": "昇順",
  "decreasing": "降順",
  "noofrules": "表示するルールの数",
  "rulecount": "",
  "fromto": "ルールを表示",
  "from": "から",
  "to": "まで",
  "help": {
    "title": "ルールを生成する、バスケット形式",
    "r_help": "help(apriori, package='arules')",
    "body": "\n            <b>\n            注意: データの形式に応じて、'バスケットデータ形式'または'Multi-lineトランザクション形式'または'Multi-Variable形式'のいずれかを選択します。これらのデータ形式ごとに別のダイアログセットが提供されています。詳細は以下を参照してください:\n            </b>\n            <br/><br/>\n            <b>\n            バスケットデータ形式\n            </b>\n            <br/>\n            バスケットデータ形式では、単一のバスケット内のすべてのアイテムがデータセット内の単一の列に含まれます。複数のアイテムは、カンマ(,)、セミコロン(;)、コロン(:)などの任意の単一文字で区切られます。\n            <br/>\n            <b>\n            例 1\n            </b>\n            <table style=\"border: 1px solid ; border-collapse: collapse;\">\n            <tr>\n              <th style=\"border: 1px solid ; border-collapse: collapse;\">アイテム</th>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item10,item20,item23,item24</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item13,item43</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item14,item32</td>\n            </tr>            \n          </table> \n\n          <br/>\n          <b>\n          例 2\n          </b>\n          <table style=\"border: 1px solid ; border-collapse: collapse;\">\n          <tr>\n            <th style=\"border: 1px solid ; border-collapse: collapse;\">食品アイテム</th>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">リンゴ、マンゴー、ビール</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">牛乳、鶏肉、チーズ</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">リンゴ、ワイン、チーズ</td>\n          </tr>            \n        </table>    \n        <br/>\n        <br>\n        <b>\n        Multi-lineトランザクションデータ形式\n        </b>\n        <br/>\n        トランザクション形式では、単一のバスケット内のすべてのアイテムが別々の行で表されます。単一のバスケット内のすべての行は、共通のトランザクションIDを含みます。トランザクションIDは別の列にキャプチャされます。\n        <br/>\n        <b>\n        例 1\n        </b>\n        <table style=\"border: 1px solid ; border-collapse: collapse;\">\n        <tr>\n          <th style=\"border: 1px solid ; border-collapse: collapse;\">ID</th>\n          <th style=\"border: 1px solid ; border-collapse: collapse;\">アイテム</th>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">パン</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">バター</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">肉</td>\n        </tr>      \n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">卵</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">チーズ</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">牛乳</td>\n        </tr>                              \n      </table> \n      <br/>\n      したがって、バスケット1にはパンとバターが含まれ、バスケット2には肉、卵、チーズ、牛乳が含まれます。\n\n      <br/><br/>\n      <b>\n      Multi-Variableデータ形式\n      </b>\n      <br/>\n      この形式では、データセット内の変数の各レベルがアイテムを表します。データセットの各行はバスケットを表します。以下を参照してください。\n      <br/>\n      <b>\n      例 1\n      </b>\n      <table style=\"border: 1px solid ; border-collapse: collapse;\">\n      <tr>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">焼き菓子</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">乳製品</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">肉</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">野菜</th>        \n      </tr>\n      <tr>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">パン</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">牛乳</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">鶏肉</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">トマト</td>\n      </tr>\n      <tr>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">NA</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">チーズ</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">NA</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">玉ねぎ</td>\n      </tr>\n    </table> \n    <br/>\n    ルールを剪定するチェックボックスを選択すると、ルールを剪定できます。選択すると、冗長なルールが表示され、冗長なルールが削除された剪定モデルが保存され、表示されます。\n    <br/>\n    視覚化を表示するチェックボックスをクリックすると、グラフが表示されます。#plot(rule1, method =\"paracoord\",control = list(reorder=TRUE))は実行に時間がかかる可能性があるため、コメントアウトしています。構文を貼り付けて、コマンドを手動で実行できます。\n    <br/>\n    <br/>\n    <b>\n    出力\n    </b>\n    <br/>\n    結果は表形式で表示されます。\n    <br/>\n    表の列は以下の通りです。\n    <br/><br/>\n    <b>LHS:</b> これらはバスケット内のアイテムを表します。\n    <br/><br/>\n    <b>RHS:</b> バスケット内のアイテム(LHS)を考慮した場合、RHSには購入される可能性のある単一のアイテムが含まれます。\n    <br/><br/>\n    <b>サポート:</b> サポートは、データセット内のアイテムがLHSに含まれるトランザクションの割合です。\n    <br/><br/>\n    <b>信頼度:</b> 信頼度は、LHSのアイテムを購入する顧客がRHSのアイテムも購入する条件付き確率です。\n    <br/><br/>\n    <b>リフト:</b> 誰かがLHSのアイテムを購入した場合、RHSの製品を購入する確率がどれだけ増加するかを示します。つまり、LHSが購入された場合にRHSが購入される確率がどれだけ増加したかを示します。リフトが>1の場合、LHSのアイテムの存在がRHSのアイテムがトランザクションで発生する確率を増加させます。<1の場合、LHSのアイテムの存在がRHSのアイテムの確率を低下させます。=1の場合、LHSとRHSは独立です。\n    <br/><br/>\n    詳細については、\n    <br/><br/>\n    http://infocenter.informationbuilders.com/wf80/index.jsp?topic=%2Fpubdocs%2FRStat16%2Fsource%2Ftopic49.htm\n    <br/><br/>\n    https://discourse.snowplowanalytics.com/t/market-basket-analysis-identifying-products-and-content-that-go-well-together/1132\n    <br/><br/>\n    http://www.listendata.com/2015/12/market-basket-analysis-with-r.html\n    <br/><br/>\n    http://www.salemmarafi.com/code/market-basket-analysis-with-r/\n    <br/><br/>\n\n    <b>パッケージ: arules</b> \n    <br/><br/>\n    <b>説明</b> \n    <br/>\n    Aprioriアルゴリズムを使用して、頻出アイテムセット、アソシエーションルール、またはアソシエーションハイパーエッジをマイニングします。Aprioriアルゴリズムは、頻出アイテムセットのレベルごとの検索を行います。使用されるAprioriの実装には、いくつかの改善が含まれています（例：プレフィックスツリーとアイテムのソート）。\n    <br/><br/>\n    <b>使用法</b> \n    <br/>\n    <code>\n    apriori(data, parameter = NULL, appearance = NULL, control = NULL)\n    </code>\n    <br/><br/>\n\n    <b>引数</b><br/>\n    <ul>\n    <li>\n    data: トランザクションのクラスのオブジェクトまたはトランザクションに強制変換できる任意のデータ構造（例：バイナリ行列またはデータフレーム）。\n    </li>\n    <li>\n    parameter: APparameterのクラスのオブジェクトまたは名前付きリスト。デフォルトの動作は、最小サポート0.1、最小信頼度0.8、最大10アイテム(maxlen)、およびサブセットチェックの最大時間5秒(maxtime)でルールをマイニングします。\n    </li>\n    <li>\n    appearance: APappearanceのクラスのオブジェクトまたは名前付きリスト。この引数を使用すると、アイテムの出現を制限できます（ルールテンプレートを実装）。デフォルトでは、すべてのアイテムが制限なしに出現できます。\n    </li>\n    <li>\n    control: APcontrolのクラスのオブジェクトまたは名前付きリスト。マイニングアルゴリズムのアルゴリズムパフォーマンスを制御します（アイテムのソート、進捗の報告（詳細）、など）。\n    </li>\n    </ul>\n    <br/><br/>\n    <b>詳細</b><br/>\n    Christian Borgeltによる頻出アイテムセット、ルール、またはハイパーエッジをマイニングするためのAprioriアルゴリズムのC実装を呼び出します。\n    <br/><br/>\n\n    <b>注意</b>\n    Aprioriは、RHSに1つのアイテムを持つルールのみを作成します（結果）！APparameterのデフォルト値はminlenが1です。これは、1つのアイテム（すなわち、空の前提/LHS）を持つルールが作成されることを意味します。\n    <br/><br/>\n    <code>{} => {ビール}</code>\n    <br/><br/>\n    これらのルールは、他のアイテムが関与していても、RHSのアイテムがルールの信頼度（サポートに等しい）によって出現する確率を示します。これらのルールを避けたい場合は、引数parameter=list(minlen=2)を使用してください。\n    <br/><br/>\n    <b>実行時間とメモリ使用に関する注意:</b>\n    最小サポートがデータセットに対して低すぎる場合、アルゴリズムは非常に大きなアイテムセット/ルールのセットを作成しようとします。これにより、非常に長い実行時間が発生し、最終的にはメモリが不足します。これを防ぐために、アイテムセット/ルールの最大長は10アイテムに制限され（パラメータ要素maxlen=10を介して）、サブセットのチェック時間は5秒に制限されます（maxtime=5を介して）。出力は、出力の「サブセットのチェック」行でこれらの制限に達したかどうかを示します。時間制限は、サブセットサイズが増加する場合にのみチェックされるため、maxtimeで指定したよりもかなり長く実行される可能性があります。maxtime=0に設定すると、時間制限が無効になります。\n    <br/>実行をControl-C/Escで中断することは推奨されません。メモリのクリーンアップが妨げられ、メモリリークが発生します。また、中断はサブセットサイズが増加する場合にのみチェックされるため、実行が実際に停止するまでに時間がかかる場合があります。\n    <br/><br/>\n    <b>値</b><br/><br/>\n    ルールまたはアイテムセットのクラスのオブジェクトを返します。\n    <br/>"
  }
}