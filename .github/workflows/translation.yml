name: Translate New or Changed Files

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
    # change to main
      - action_dev

jobs:
  translate:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      # - run: git checkout HEAD^

      - name: Identify new or changed files
        id: file_changes
        run: |
          echo "##[group]Checking for new or changed files"
          NEW_FILES=$(git diff --name-status HEAD~1 HEAD | grep '^A' | awk '{print $2}')
          CHANGED_FILES=$(git diff --name-status HEAD~1 HEAD | grep '^M' | awk '{print $2}')
          echo "new_files=($NEW_FILES)" >> $GITHUB_OUTPUT
          echo "changed_files=($CHANGED_FILES)" >> $GITHUB_OUTPUT
          echo "##[endgroup]"
          echo $NEW_FILES
          echo $CHANGED_FILES

      - name: Set up Python
        if: steps.file_changes.outputs.new_files != '' || steps.file_changes.outputs.changed_files != ''
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        if: steps.file_changes.outputs.new_files != '' || steps.file_changes.outputs.changed_files != ''
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp

      

      - name: Run translation script
        if: steps.file_changes.outputs.new_files != '' || steps.file_changes.outputs.changed_files != ''
        run: |
          cp .github/workflows/translator.py .
          python translator.py --new_files '${{ steps.file_changes.outputs.new_files }}' --changed_files '${{ steps.file_changes.outputs.changed_files }}' --alita_project_id '${{ vars.ALITA_PROJECT_ID }}' --token '${{ secrets.LLM_TOKEN }}' --llm_url '${{ vars.LLM_URL }}' --prompt_version_id '${{ vars.PROMPT_VERSION_ID }}' --lang_map '${{ vars.LANG_MAP }}'
          
          # echo "Processing NEW files"
          # python -c "import sys; print(f'python file: {sys.argv[1]}' if len(sys.argv) > 1 else 'No args')" ${{ steps.file_changes.outputs.new_files }}
          # echo "Processing CHANGED $FILE"
          # python -c "import sys; print(f'python file: {sys.argv[1]}' if len(sys.argv) > 1 else 'No args')" ${{ steps.file_changes.outputs.changed_files }}

      - name: Upload logs artifact
        # https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: run_log
          path: |
            .tmp/_log.log
            .tmp/_exec_log.csv
          retention-days: 1
          if-no-files-found: warn
          
      # - name: Configure Git
      #   run: |
      #    git config --global user.name 'github-actions[bot]'
      #    git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # - name: Commit changes
      #   run: |
      #    git checkout -b translation-updates
      #    git add .
      #    git commit -m "Add translations for new or changed files"

      # - name: Push changes
      #   env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #    git push --set-upstream origin translation-updates



      
      # - name: Create Pull Request
      # https://github.com/marketplace/actions/create-pull-request
      #   uses: peter-evans/create-pull-request@v7.0.5
            

      # - name: Create Pull Request
      #   id: create_pr
      #   uses: peter-evans/create-pull-request@v3
      #   with:
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #    commit-message: "Add translations for new or changed files"
      #    branch: translation-updates
      #    title: "Add translations for new or changed files"
      #    body: "This PR contains translations for the new or changed files."
      #    base: main
