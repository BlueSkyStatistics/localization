{
  "title": "K 最近鄰",
  "navigation": "KNN",
  "dependentvar": "因變量",
  "independentvars": "自變量",
  "header": "KNN 是一種懶惰的分類器，它不創建模型以便稍後進行預測。它同時擬合和評估。我們將數據集分為訓練集和測試集，然後在訓練集上構建模型，在測試集上進行預測，並使用這些預測來顯示模型評估統計信息。",
  "Seed": "設置種子",
  "Group2": "KNN 的調優參數",
  "noneighbhors": "鄰居數量（當未指定值時，默認值設置為數據集中觀察數量的平方根）",
  "Group1": "訓練集和測試集",
  "splitPercentage": "輸入拆分百分比",
  "trainDatasetName": "輸入訓練數據集的名稱",
  "testDatasetName": "輸入測試數據集的名稱",
  "predictedValues": "輸入預測值的變量前綴。（您必須指定一個前綴）前綴變量在測試數據集中創建。",
  "help": {
    "title": "K 最近鄰",
    "r_help": "help(knn, package ='class')",
    "body": "\n                <b>描述</b></br>\nk-最近鄰分類\n<br/>\n<b>注意：</b></br>\n1. 根據指定的拆分百分比，KNN 自動創建訓練集和測試集<br/>\n2. 預測值存儲在測試數據集中，並用於計算模型統計信息，即準確性、Kappa、敏感性... 還會顯示混淆矩陣\n<br/>\n<b>用法</b>\n<br/>\n<code> \nknn(train, test, cl, k = 1, l = 0, prob = FALSE, use.all = TRUE)\n</code> <br/>\n<b>參數</b><br/>\n<ul>\n<li>\ntrain: 訓練集案例的矩陣或數據框。\n</li>\n<li>\ntest: 測試集案例的矩陣或數據框。向量將被解釋為單個案例的行向量。\n</li>\n<li>\ncl: 訓練集的真實分類因子\n</li>\n<li>\nk: 考慮的鄰居數量。\n</li>\n<li>\nl: 明確決定的最低投票數，否則為懷疑。（更準確地說，允許少於 k-l 的反對票，即使 k 由於平局而增加。）\n</li>\n<li>\nprob: 如果為真，則返回獲勝類別的投票比例作為屬性 prob。\n</li>\n<li>\nuse.all: 控制平局的處理。如果為真，則包括所有等於第 k 大的距離。如果為假，則隨機選擇等於第 k 的距離以使用恰好 k 個鄰居。\n</li>\n</ul>\n<b>值</b></br>\n測試集的分類因子。懷疑將返回為 NA。</br>\n<b>包</b></br>\ncaret;class</br>\n<b>幫助</b></br>\nhelp(knn, package ='class')\n                "
  }
}