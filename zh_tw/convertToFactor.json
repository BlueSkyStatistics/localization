{
  "title": "轉換為因子",
  "navigation": "到因子",
  "trg": "要轉換為因子的變數",
  "help": {
    "title": "轉換為因子",
    "r_help": "help(factor, package=base)",
    "body": "\n<b>描述</b></br>\n函數 factor 用於將向量編碼為因子（術語“類別”和“枚舉類型”也用於因子）。如果參數 ordered 為 TRUE，則因子級別被認為是有序的。為了與 S 兼容，還有一個函數 ordered。\nis.factor, is.ordered, as.factor 和 as.ordered 是這些類的成員資格和強制轉換函數。\n<br/>\n<b>用法</b>\n<br/>\n<code>\nfactor(x = character(), levels, labels = levels,\n        exclude = NA, ordered = is.ordered(x), nmax = NA)\nordered(x, ...)\nis.factor(x)\nis.ordered(x)\nas.factor(x)\nas.ordered(x)\naddNA(x, ifany = FALSE)\n</code> <br/>\n<b>參數</b><br/>\n<ul>\n<li>\nx: 數據向量，通常取少量不同的值。\n</li>\n<li>\nlevels:\t一個可選的值向量（作為字符字符串），x 可能取的值。默認值是由 as.character(x) 取的唯一值集合，按 x 的遞增順序排序。請注意，這個集合可以指定為小於 sort(unique(x))。\n</li>\n<li>\nlabels:\t一個可選的字符向量，用於級別的標籤（在去除 exclude 後與 levels 的順序相同），或長度為 1 的字符字符串。\n</li>\n<li>\nexclude: 在形成級別集合時要排除的值向量。這應該與 x 的類型相同，並在必要時進行強制轉換。\n</li>\n<li>\nordered: 邏輯標誌，用於確定級別是否應被視為有序（按給定順序）。\n</li>\n<li>\nnmax: 級別數量的上限；見“詳細信息”。\n</li>\n<li>\n...(在 ordered(.) 中): 除 ordered 本身外的任何上述內容。\n</li>\n<li>\nifany: （僅在使用時添加 NA 級別，即如果 any(is.na(x)）。\n</li>\n</ul>\n<b>詳細信息</b></br>\n向量 x 的類型沒有限制；它只需具有 as.character 方法並且可排序（通過 sort.list）。<br/>\n有序因子與因子僅在其類上有所不同，但方法和模型擬合函數對這兩類的處理方式截然不同。<br/>\n向量的編碼如下進行。首先，從 levels 中刪除 exclude 中的所有值。如果 x[i] 等於 levels[j]，則結果的第 i 個元素為 j。如果在 levels 中未找到 x[i] 的匹配（這將發生在排除的值中），則結果的第 i 個元素設置為 NA。<br/>\n通常，作為結果屬性使用的“級別”是去除 exclude 後的減少級別集合，但這可以通過提供標籤來更改。這應該是一組新標籤的級別，或一個字符字符串，在這種情況下，級別是該字符字符串加上序列號。<br/>\nfactor(x, exclude = NULL) 應用於因子時是一個無操作，除非存在未使用的級別：在這種情況下，將返回具有減少級別集的因子。如果使用 exclude，它也應該是一個具有與 x 相同級別集的因子或要排除的級別的代碼集。<br/>\n因子的代碼可能包含 NA。對於數值 x，設置 exclude = NULL 使 NA 成為額外級別（打印為 <NA>）；默認情況下，這是最後一個級別。<br/>\n如果 NA 是一個級別，設置代碼為缺失（與缺失級別的代碼相對）的方法是使用 is.na 在賦值的左側（如 is.na(f)[i] <- TRUE；在 is.na 內部索引不起作用）。在這些情況下，缺失值當前打印為 <NA>，即與級別 NA 的條目相同。<br/>\nis.factor 是通用的：您可以編寫方法來處理特定類的對象，見 InternalMethods。<br/>\n如果未提供 levels，則調用 unique。由於因子通常具有相對較少的級別，對於較大的向量 x，提供 nmax 作為唯一值的上限是有幫助的。<br/>\n<b>值</b><br/>\nfactor 返回一個類為 \"factor\" 的對象，其長度為 x 的整數代碼集和模式字符的 \"levels\" 屬性，且唯一（!anyDuplicated(.)）條目。如果參數 ordered 為 true（或使用 ordered()），則結果的類為 c(\"ordered\", \"factor\").<br/>\n將 factor 應用於有序或無序因子返回一個因子（相同類型），僅包含發生的級別：另請參見 [.factor 以更透明的方式實現此目的。\nis.factor 返回 TRUE 或 FALSE，具體取決於其參數是否為因子類型。相應地，is.ordered 在其參數為有序因子時返回 TRUE，否則返回 FALSE。<br/>\nas.factor 將其參數強制轉換為因子。它是 factor 的簡寫形式。<br/>\nas.ordered(x) 如果這是有序的，則返回 x，否則返回 ordered(x)。<br/>\naddNA 通過將 NA 轉換為額外級別來修改因子（例如，使 NA 值在表中被計數）。<br/>\n<b>包</b></br>\nbase</br>\n<b>幫助</b></br>\nhelp(factor, package =fastDummies)\n"
  }
}