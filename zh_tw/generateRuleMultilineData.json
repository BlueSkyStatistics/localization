{
  "title": "生成規則，多行格式",
  "navigation": "生成規則，多行格式",
  "src": "列",
  "idcolname": "交易 ID 列名稱",
  "itemcolname": "交易項目列名稱",
  "prunerules": "修剪規則",
  "graphs": "顯示可視化",
  "test3": "差異 < 0",
  "txtbox2": "虛無假設 (mu)",
  "txtbox1": "置信水平",
  "label1": "生成規則",
  "rulesobj": "規則對象名稱",
  "rulesobjhint": "此對象保存所有規則，並可以在其他相關對話框中指定。即顯示規則，繪製規則",
  "support": "最小支持值",
  "supphint": "項目（s）的支持度是數據集中包含該項目（s）的交易的比例。",
  "confidence": "最小置信值",
  "confhint": "規則的置信度是該規則對於包含規則左側項目的新交易為真的可能性",
  "advoptions": "高級選項",
  "minlen": "左側項目的最小數量",
  "maxlen": "左側項目的最大數量",
  "sortopt": "排序選項",
  "sortby": "排序依據",
  "rd1": "置信度",
  "rd2": "提升",
  "rd3": "支持度",
  "sortord": "排序順序",
  "increasing": "升序",
  "decreasing": "降序",
  "noofrules": "顯示的規則數量",
  "rulecount": "",
  "fromto": "顯示規則",
  "from": "從",
  "to": "到",
  "help": {
    "title": "生成規則，多行格式",
    "r_help": "help(apriori, package='arules')",
    "body": "\n            <b>\n            注意：根據數據的格式，您將選擇“籃子數據格式”或“多行交易格式”或“多變量格式”。為每種數據格式提供了一組單獨的對話框。請參見下文以獲取詳細信息：\n            </b>\n            <br/><br/>\n            <b>\n            籃子數據格式\n            </b>\n            <br/>\n            在籃子數據格式中，單個籃子中的所有項目都包含在數據集中的單個列中。多個項目由任何單個字符分隔，如逗號（,）、分號（;）或冒號（:）等。\n            <br/>\n            <b>\n            示例 1\n            </b>\n            <table style=\"border: 1px solid ; border-collapse: collapse;\">\n            <tr>\n              <th style=\"border: 1px solid ; border-collapse: collapse;\">項目</th>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item10,item20,item23,item24</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item13,item43</td>\n            </tr>\n            <tr>\n              <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item14,item32</td>\n            </tr>            \n          </table> \n\n          <br/>\n          <b>\n          示例 2\n          </b>\n          <table style=\"border: 1px solid ; border-collapse: collapse;\">\n          <tr>\n            <th style=\"border: 1px solid ; border-collapse: collapse;\">食品項目</th>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">蘋果、芒果、啤酒</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">牛奶、雞肉、奶酪</td>\n          </tr>\n          <tr>\n            <td style=\"border: 1px solid ; border-collapse: collapse;\">蘋果、葡萄酒、奶酪</td>\n          </tr>            \n        </table>    \n        <br/>\n        <br>\n        <b>\n        多行交易數據格式\n        </b>\n        <br/>\n        在交易格式中，單個籃子中的每個項目都在單獨的行中表示。所有表示單個籃子中項目的行都包含一個共同的交易 ID。交易 ID 在單獨的列中捕獲        \n        <br/>\n        <b>\n        示例 1\n        </b>\n        <table style=\"border: 1px solid ; border-collapse: collapse;\">\n        <tr>\n          <th style=\"border: 1px solid ; border-collapse: collapse;\">ID</th>\n          <th style=\"border: 1px solid ; border-collapse: collapse;\">項目</th>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">麵包</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">黃油</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">肉類</td>\n        </tr>      \n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">雞蛋</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">奶酪</td>\n        </tr>\n        <tr>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n          <td style=\"border: 1px solid ; border-collapse: collapse;\">牛奶</td>\n        </tr>                              \n      </table> \n      <br/>\n      所以籃子 1 包含麵包和黃油，籃子 2 包含肉類、雞蛋、奶酪和牛奶\n\n      <br/><br/>\n      <b>\n      多變量數據格式\n      </b>\n      <br/>\n      在此格式中，數據集中的每個變量級別表示一個項目。數據集的每一行表示一個籃子。請參見下文\n      <br/>\n      <b>\n      示例 1\n      </b>\n      <table style=\"border: 1px solid ; border-collapse: collapse;\">\n      <tr>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">烘焙食品</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">乳製品 </th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">肉類</th>\n        <th style=\"border: 1px solid ; border-collapse: collapse;\">蔬菜</th>        \n      </tr>\n      <tr>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">麵包</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">牛奶</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">雞肉</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">番茄</td>\n      </tr>\n      <tr>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">無</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">奶酪</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">無</td>\n        <td style=\"border: 1px solid ; border-collapse: collapse;\">洋蔥</td>\n      </tr>\n    </table> \n    <br/>\n    修剪規則的復選框允許您修剪規則。選中後，顯示冗餘規則，並保存和顯示刪除冗餘規則的修剪模型。 \n    <br/>\n    當單擊顯示可視化的復選框時，將顯示圖形。我們已經註釋掉了 #plot(rule1, method =\"paracoord\",control = list(reorder=TRUE))，因為它可能需要很長時間來執行。您可以粘貼語法並手動運行命令。\n    <br/>\n    <br/>\n    <b>\n    輸出\n    </b>\n    <br/>\n    結果以表格格式顯示\n    <br/>\n    表格中的列如下\n    <br/><br/>\n    <b>LHS:</b> 這些代表籃子中的項目\n    <br/><br/>\n    <b>RHS:</b> 根據籃子中的項目（LHS），RHS 包含一個單一項目，該項目可能會被購買\n    <br/><br/>\n    <b>支持度:</b> 支持度是數據集中包含 LHS 項目的交易的比例\n    <br/><br/>\n    <b>置信度:</b> 置信度是購買 LHS 項目的客戶也會購買 RHS 項目的條件概率\n    <br/><br/>\n    <b>提升:</b> 如果有人購買 LHS 項目，購買 RHS 項目的機率會增加的百分比。因此，基本上我們的置信度在 LHS 被購買的情況下，RHS 將被購買的可能性增加了多少。如果提升 >1，則 LHS 項目的存在增加了 RHS 項目在交易中出現的概率；如果 <1，則 LHS 項目的存在會降低 RHS 項目出現的概率；如果 =1，則 LHS 和 RHS 是獨立的\n    <br/><br/>\n    有關詳細信息，請參見 \n    <br/><br/>\n    http://infocenter.informationbuilders.com/wf80/index.jsp?topic=%2Fpubdocs%2FRStat16%2Fsource%2Ftopic49.htm\n    <br/><br/>\n    https://discourse.snowplowanalytics.com/t/market-basket-analysis-identifying-products-and-content-that-go-well-together/1132\n    <br/><br/>\n    http://www.listendata.com/2015/12/market-basket-analysis-with-r.html\n    <br/><br/>\n    http://www.salemmarafi.com/code/market-basket-analysis-with-r/\n    <br/><br/>\n\n    <b>包：arules</b> \n    <br/><br/>\n    <b>描述</b> \n    <br/>\n    使用 Apriori 算法挖掘頻繁項集、關聯規則或關聯超邊。Apriori 算法採用逐層搜索頻繁項集。所使用的 Apriori 實現包括一些改進（例如，前綴樹和項目排序）。\n    <br/><br/>\n    <b>用法</b> \n    <br/>\n    <code>\n    apriori(data, parameter = NULL, appearance = NULL, control = NULL)\n    </code>\n    <br/><br/>\n\n    <b>參數</b><br/>\n    <ul>\n    <li>\n    data: 交易類別的對象或任何可以轉換為交易的數據結構（例如，二進制矩陣或數據框）。\n    </li>\n    <li>\n    parameter: APparameter 類的對象或命名列表。默認行為是挖掘最小支持度為 0.1，最小置信度為 0.8，最多 10 項（maxlen），以及子集檢查的最大時間為 5 秒（maxtime）的規則。\n    </li>\n    <li>\n    appearance: APappearance 類的對象或命名列表。使用此參數可以限制項目外觀（實現規則模板）。默認情況下，所有項目都可以不受限制地出現。\n    </li>\n    <li>\n    control: APcontrol 類的對象或命名列表。控制挖掘算法的性能（項目排序、報告進度（詳細）、等）\n    </li>\n    </ul>\n    <br/><br/>\n    <b>詳細信息</b><br/>\n    調用 Christian Borgelt 的 Apriori 算法的 C 實現來挖掘頻繁項集、規則或超邊。\n    <br/><br/>\n\n    <b>注意</b>\n    Apriori 只創建 RHS 中有一個項目的規則（結果）！APparameter 中 minlen 的默認值為 1。這意味著僅有一個項目的規則（即空的前提/LHS）將被創建，例如\n    <br/><br/>\n    <code>{} => {啤酒}</code>\n    <br/><br/>\n    將被創建。這些規則意味著無論涉及其他項目，RHS 中的項目將以規則的置信度（等於支持度）出現。如果您想避免這些規則，則使用參數 list(minlen=2)。\n    <br/><br/>\n    <b>有關運行時間和內存使用的注意事項：</b>\n    如果為數據集選擇的最小支持度過低，則算法將嘗試創建一個極大的項集/規則集。這將導致非常長的運行時間，最終過程將耗盡內存。為了防止這種情況，默認的項集/規則的最大長度限制為 10 項（通過參數元素 maxlen=10），檢查子集的時間限制為 5 秒（通過 maxtime=5）。輸出將顯示您是否達到這些限制。\n    <br/>在子集大小增加時僅檢查時間限制，因此它可能會運行比您在 maxtime 中指定的時間長得多。設置 maxtime=0 將禁用時間限制。\n    <br/>不建議使用 Control-C/Esc 中斷執行。內存清理將被阻止，導致內存泄漏。此外，僅在子集大小增加時檢查中斷，因此可能需要一些時間才能實際停止執行。\n    <br/><br/>\n    <b>值</b><br/><br/>\n    返回一個類別為規則或項集的對象。\n    <br/>\n\t\t\t\n    "
  }
}