{
  "title": "目標項目，多變量格式",
  "navigation": "目標項目，多變量格式",
  "src": "欄",
  "destination": "表示購物籃中項目的變量",
  "prunerules": "修剪規則",
  "graphs": "顯示可視化",
  "test3": "差異 < 0",
  "txtbox2": "零假設 (mu)",
  "txtbox1": "信心水平",
  "label1": "生成規則",
  "rulesobj": "規則對象名稱",
  "rulesobjhint": "該對象保存所有規則，並可以在其他相關對話框中指定。即顯示規則，繪製規則",
  "support": "最小支持值",
  "supphint": "項目的支持度是數據集中包含該項目的交易的比例。",
  "confidence": "最小信心值",
  "confhint": "規則的信心度是對於包含規則左側項目的新交易它為真的可能性",
  "label2": "目標項目",
  "label3": "輸入您感興趣的變量的級別，格式為變量名=級別。例如，如果變量名為Survived且有級別Yes和No，則輸入Survived=Yes,Survived=No",
  "lhs": "出現在左側的項目",
  "rhs": "出現在右側的項目",
  "both": "出現在兩側的項目",
  "none": "根本不出現的項目",
  "label4": "默認外觀",
  "rdboth": "兩者",
  "rdlhs": "左側",
  "rdrhs": "右側",
  "rdnone": "無",
  "advoptions": "高級選項",
  "minlen": "左側項目的最小數量",
  "maxlen": "左側項目的最大數量",
  "sortopt": "排序選項",
  "sortby": "排序依據",
  "rd1": "信心度",
  "rd2": "提升",
  "rd3": "支持度",
  "sortord": "排序順序",
  "increasing": "升序",
  "decreasing": "降序",
  "noofrules": "要顯示的規則數量",
  "rulecount": "",
  "fromto": "顯示規則",
  "from": "從",
  "to": "到",
  "help": {
    "title": "目標項目，多變量格式",
    "r_help": "help(apriori, package='arules')",
    "body": "\n                    <b>\n                    注意：根據數據的格式，您將選擇“購物籃數據格式”或“多行交易格式”或多變量格式。為每種數據格式提供了一組單獨的對話框。請參見下面的詳細信息：\n                    </b>\n                    <br/><br/>\n                    <b>\n                    購物籃數據格式\n                    </b>\n                    <br/>\n                    在購物籃數據格式中，單個購物籃中的所有項目都包含在數據集中的單列中。多個項目由任何單個字符分隔，如逗號（,）、分號（;）或冒號（:）等。\n                    <br/>\n                    <b>\n                    示例 1\n                    </b>\n                    <table style=\"border: 1px solid ; border-collapse: collapse;\">\n                    <tr>\n                    <th style=\"border: 1px solid ; border-collapse: collapse;\">項目</th>\n                    </tr>\n                    <tr>\n                    <td style=\"border: 1px solid ; border-collapse: collapse;\">item10,item20,item23,item24</td>\n                    </tr>\n                    <tr>\n                    <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item13,item43</td>\n                    </tr>\n                    <tr>\n                    <td style=\"border: 1px solid ; border-collapse: collapse;\">item12,item14,item32</td>\n                    </tr>            \n                </table> \n\n                <br/>\n                <b>\n                示例 2\n                </b>\n                <table style=\"border: 1px solid ; border-collapse: collapse;\">\n                <tr>\n                    <th style=\"border: 1px solid ; border-collapse: collapse;\">食品項目</th>\n                </tr>\n                <tr>\n                    <td style=\"border: 1px solid ; border-collapse: collapse;\">蘋果，芒果，啤酒</td>\n                </tr>\n                <tr>\n                    <td style=\"border: 1px solid ; border-collapse: collapse;\">牛奶，雞肉，奶酪</td>\n                </tr>\n                <tr>\n                    <td style=\"border: 1px solid ; border-collapse: collapse;\">蘋果，葡萄酒，奶酪</td>\n                </tr>            \n                </table>    \n                <br/>\n                <br>\n                <b>\n                多行交易數據格式\n                </b>\n                <br/>\n                在交易格式中，單個購物籃中的每個項目都在單獨的行中表示。所有表示單個購物籃中項目的行都包含一個共同的交易ID。交易ID在單獨的列中捕獲        \n                <br/>\n                <b>\n                示例 1\n                </b>\n                <table style=\"border: 1px solid ; border-collapse: collapse;\">\n                <tr>\n                <th style=\"border: 1px solid ; border-collapse: collapse;\">ID</th>\n                <th style=\"border: 1px solid ; border-collapse: collapse;\">項目</th>\n                </tr>\n                <tr>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">麵包</td>\n                </tr>\n                <tr>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">1</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">奶油</td>\n                </tr>\n                <tr>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">肉類</td>\n                </tr>      \n                <tr>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">雞蛋</td>\n                </tr>\n                <tr>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">奶酪</td>\n                </tr>\n                <tr>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">2</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">牛奶</td>\n                </tr>                              \n            </table> \n            <br/>\n            所以購物籃1包含麵包和奶油，購物籃2包含肉類、雞蛋、奶酪和牛奶\n\n            <br/><br/>\n            <b>\n            多變量數據格式\n            </b>\n            <br/>\n            在此格式中，數據集中每個變量的每個級別表示一個項目。數據集的每一行表示一個購物籃。見下文\n            <br/>\n            <b>\n            示例 1\n            </b>\n            <table style=\"border: 1px solid ; border-collapse: collapse;\">\n            <tr>\n                <th style=\"border: 1px solid ; border-collapse: collapse;\">烘焙食品</th>\n                <th style=\"border: 1px solid ; border-collapse: collapse;\">乳製品 </th>\n                <th style=\"border: 1px solid ; border-collapse: collapse;\">肉類</th>\n                <th style=\"border: 1px solid ; border-collapse: collapse;\">蔬菜</th>        \n            </tr>\n            <tr>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">麵包</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">牛奶</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">雞肉</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">番茄</td>\n            </tr>\n            <tr>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">無</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">奶酪</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">無</td>\n                <td style=\"border: 1px solid ; border-collapse: collapse;\">洋蔥</td>\n            </tr>\n            </table> \n            <br/>\n            修剪規則複選框允許您修剪規則。當選中時，顯示冗餘規則，並保存和顯示去除冗餘規則的修剪模型。 \n            <br/>\n            當單擊顯示可視化複選框時，圖表將顯示。我們已註釋掉#plot(rule1, method =\"paracoord\",control = list(reorder=TRUE))，因為它可能需要很長時間才能執行。您可以粘貼語法並手動運行命令。            \n            <br/>\n            <br/>\n            <b>目標項目</b>\n            <br/>\n            現在我們知道如何生成規則，通過去除冗餘規則來限制輸出，假設我們想要針對生成規則的項目。我們可能感興趣的兩種目標通過“牛奶”的雜貨店示例進行了說明：\n            <br/><br/>\n            客戶在購買牛奶之前可能會購買什麼\n            <br/><br/>\n            客戶在購買牛奶時可能會購買什麼？\n            <br/><br/>\n            這基本上意味著我們想要設置左側和右側。 \n            <br/><br/>\n            如果您對人們在購買牛奶之前購買的項目感興趣，請在下面的右側文本框中輸入牛奶。由於所有其他項目可以出現在左側，請檢查與左側默認外觀相關的單選按鈕。\n            <br/><br/>\n            請記住，默認外觀與所有未在左側、右側、兩側或根本不出現的項目中明確提及的項目相關\n            <br/><br/>\n            如果您對客戶在購買牛奶時可能會購買的項目感興趣，請將牛奶放在左側，由於任何項目都可以出現在右側，請檢查與右側默認外觀相關的單選按鈕\n            <br/>\n            <br/>\n            <b>\n            輸出\n            </b>\n            <br/>\n            結果以表格格式顯示\n            <br/>\n            表格中的列如下\n            <br/><br/>\n            <b>LHS:</b> 這些代表購物籃中的項目\n            <br/><br/>\n            <b>RHS:</b> 鑑於購物籃中的項目（LHS），RHS包含一個可能被購買的單一項目\n            <br/><br/>\n            <b>支持度:</b> 支持度是數據集中包含LHS項目的交易的比例\n            <br/><br/>\n            <b>信心度:</b> 信心度是購買LHS項目的客戶也會購買RHS項目的條件概率\n            <br/><br/>\n            <b>提升:</b> 如果有人購買LHS項目，購買RHS產品的概率會增加多少。因此，基本上是我們的信心度在購買LHS的情況下增加了多少。如果提升>1，則LHS項目的存在增加了RHS項目在交易中發生的概率，如果<1，則LHS項目的存在會降低RHS項目的概率，如果=1，則LHS和RHS是獨立的\n            <br/><br/>\n            有關詳細信息，請參見 \n            <br/><br/>\n            http://infocenter.informationbuilders.com/wf80/index.jsp?topic=%2Fpubdocs%2FRStat16%2Fsource%2Ftopic49.htm\n            <br/><br/>\n            https://discourse.snowplowanalytics.com/t/market-basket-analysis-identifying-products-and-content-that-go-well-together/1132\n            <br/><br/>\n            http://www.listendata.com/2015/12/market-basket-analysis-with-r.html\n            <br/><br/>\n            http://www.salemmarafi.com/code/market-basket-analysis-with-r/\n            <br/><br/>\n        \n            <b>包：arules</b> \n            <br/><br/>\n            <b>描述</b> \n            <br/>\n            使用Apriori算法挖掘頻繁項集、關聯規則或關聯超邊。Apriori算法採用逐層搜索頻繁項集。所使用的Apriori實現包括一些改進（例如，前綴樹和項目排序）。\n            <br/><br/>\n            <b>用法</b> \n            <br/>\n            <code>\n            apriori(data, parameter = NULL, appearance = NULL, control = NULL)\n            </code>\n            <br/><br/>\n        \n            <b>參數</b><br/>\n            <ul>\n            <li>\n            data: 事務類對象或任何可以強制轉換為事務的數據結構（例如，二進制矩陣或數據框）。\n            </li>\n            <li>\n            parameter: APparameter類對象或命名列表。默認行為是挖掘最小支持度為0.1，最小信心度為0.8，最多10個項目（maxlen），以及最大子集檢查時間為5秒（maxtime）的規則。\n            </li>\n            <li>\n            appearance: APappearance類對象或命名列表。使用此參數可以限制項目外觀（實現規則模板）。默認情況下，所有項目都可以不受限制地出現。\n            </li>\n            <li>\n            control: APcontrol類對象或命名列表。控制挖掘算法的算法性能（項目排序、報告進度（詳細）、等）\n            </li>\n            </ul>\n            <br/><br/>\n            <b>詳細信息</b><br/>\n            調用Christian Borgelt的Apriori算法的C實現，用於挖掘頻繁項集、規則或超邊。\n            <br/><br/>\n        \n            <b>注意</b>\n            Apriori僅創建RHS中有一個項目的規則（結果）！APparameter中的默認值為minlen為1。這意味著將創建只有一個項目的規則（即空前提/LHS），例如\n            <br/><br/>\n            <code>{} => {啤酒}</code>\n            <br/><br/>\n            將被創建。這些規則意味著無論涉及其他項目，RHS中的項目將以規則信心度給定的概率出現（等於支持度）。如果您想避免這些規則，請使用參數list(minlen=2)。\n            <br/><br/>\n            <b>關於運行時間和內存使用的說明：</b>\n            如果為數據集選擇的最小支持度過低，則算法將嘗試創建一個極大的項集/規則集。這將導致非常長的運行時間，並最終導致過程耗盡內存。為防止這種情況，默認最大項集/規則長度限制為10個項目（通過參數element maxlen=10）並且檢查子集的時間限制為5秒（通過maxtime=5）。輸出將顯示您是否達到了這些限制，在輸出的“檢查子集”行中。時間限制僅在子集大小增加時檢查，因此它可能會運行比您在maxtime中指定的時間長得多。將maxtime=0禁用時間限制。\n            <br/>中斷執行時使用Control-C/Esc不推薦。內存清理將被阻止，導致內存泄漏。此外，只有在子集大小增加時才檢查中斷，因此可能需要一些時間才能實際停止執行。\n            <br/><br/>\n            <b>值</b><br/><br/>\n            返回規則或項集類的對象。\n            <br/>            \n    "
  }
}