{
  "title": "茎葉圖",
  "navigation": "茎葉圖",
  "Destination": "選擇要繪製的變數",
  "label1": "葉子數字",
  "label2": "每個茎的部分",
  "label3": "分開的茎的樣式",
  "label4": "選項",
  "Value": "輸入一個值",
  "Automatic": "自動",
  "EnterValue": "指定值",
  "StemAutomatic": "自動",
  "SpecifyStemValue": "指定值",
  "StemValue": "輸入一個值",
  "Tukey": "圖基",
  "Repeated": "重複的茎數字",
  "Trim": "修剪異常值",
  "Depths": "顯示深度",
  "NegativeLeaves": "反轉負葉子",
  "help": {
    "title": "茎葉圖",
    "r_help": "help(stem.leaf, package='aplpack')",
    "body": "\n            <b>描述</b></br>\n            茎葉顯示和背靠背的茎葉顯示\n            創建經典的（\"圖基風格\"）茎葉顯示/背靠背茎葉顯示。\n            <br/>\n            <b>用法</b>\n            <br/>\n            <code> \n            stem.leaf(data, unit, m, Min, Max, rule.line = c(\"Dixon\", \"Velleman\", \"Sturges\"),\n                style = c(\"Tukey\", \"bare\"), trim.outliers = TRUE, depths = TRUE,\n                reverse.negative.leaves = TRUE, na.rm = FALSE, printresult = TRUE)<br/><br/>\n            stem.leaf.backback(x,y, unit, m, Min, Max, rule.line = c(\"Dixon\", \"Velleman\", \n                \"Sturges\"), style = c(\"Tukey\", \"bare\"), trim.outliers = TRUE, \n                depths = TRUE, reverse.negative.leaves = TRUE, na.rm = FALSE,\n                printresult=TRUE, show.no.depths = FALSE, add.more.blanks = 0,\n                back.to.back = TRUE)\n            </code> <br/>\n            <b>參數</b><br/>\n            <ul>\n            <li>\n            data: 數值向量數據\n            </li>\n            <li>\n            x: 第一個數據集用於stem.leaf.backback\n            </li>\n            <li>\n            y: 第二個數據集用於stem.leaf.backback\n            </li>\n            <li>\n            unit: 葉子單位，作為10的幂（例如，100，.01）；如果缺少單位，則由stem.leaf選擇單位。\n            </li>\n            <li>\n            m: 每個茎將被分成的部分數量（1、2或5）；如果缺少m，則由stem.leaf選擇部分/茎的數量（m）。\n            </li>\n            <li>\n            Min: 最小的非異常值；省略以自動選擇。\n            </li>\n            <li>\n            Max: 最大的非異常值；省略以自動選擇。\n            </li>\n            <li>\n            rule.line: 用於選擇顯示中所需行數的規則；\"Dixon\" = 10*log10(n); \"Velleman\" = 2*sqrt(n); \"Sturges\" = 1 + log2(n); 默認是\"Dixon\"。\n            </li>\n            <li>\n            style: \"Tukey\"（默認）用於\"圖基風格\"分開的茎；\"bare\"用於簡單重複茎數字的分開茎。\n            </li>\n            <li>\n            trim.outliers: 如果為TRUE（默認），異常值被放置在LO和HI茎上。\n            </li>\n            <li>\n            depths: 如果為TRUE（默認），在茎的左側打印一列\"深度\"；包含中位數的茎的深度是括號中的茎計數。\n            </li>\n            <li>\n            reverse.negative.leaves: 如果為TRUE（默認），反轉負茎上的葉子的方向（例如，葉子9在葉子8之前，等等）。\n            </li>\n            <li>\n            na.rm: 如果為TRUE，則\"NA\"值被移除，否則計算NA的數量。\n            </li>\n            <li>\n            printresult: 如果為TRUE，茎葉顯示的輸出通過cat。\n            </li>\n            <li>\n            show.no.depths: 如果為TRUE，則不打印深度。\n            </li>\n            <li>\n            add.more.blanks: 除了葉子之外添加的空白數量。\n            </li>\n            <li>\n            back.to.back: 如果為FALSE，則構建兩個平行的茎葉顯示。\n            </li>\n            </ul>\n            <b>詳細信息</b></br>\n            與基礎包中的stem函數不同，stem.leaf生成經典的茎葉顯示，如圖基的探索性數據分析中所述。函數stem.leaf.backback創建背靠背的茎葉顯示。\n            <br/>\n            <b>值</b></br>\n            計算出的茎葉顯示被打印出來。隱式地，stem.leaf返回作為列表的茎葉顯示，包含元素info（圖例）、display（作為字符向量的茎葉顯示）、lower（非常小的值）、upper（非常大的值）、depths（深度向量）、stem（作為向量的茎信息）和leaves（作為向量的葉子）。</br>\n            <b>示例</b></br>\n            stem.leaf(co2)\n            stem.leaf.backback(co2[1:120],co2[121:240])</br>\n            stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE)</br>\n            stem.leaf.backback(co2[1:120],co2[121:240], back.to.back = FALSE,\n                               add.more.blanks = 3, show.no.depths = TRUE)</br>\n            stem.leaf.backback(rivers[-(1:30)],rivers[1:30], back.to.back = FALSE, unit=10, m=5, \n                               Min=200, Max=900, add.more.blanks = 20, show.no.depths = TRUE)</br>\n            <b>包</b></br>\n            aplpack</br>\n            <b>幫助</b></br>\n            help(stem.leaf, package=aplpack)</br>\n    "
  }
}